
Theory "Path_Indexing.Test":

Warning (line 6 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 46 of "~/Documents/BT/bachelorthesis/src/util.ML"):
### Pattern is not exhaustive.

Output (line 6 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
val encode_type = fn: typ -> term
val apply_def = fn: ('a -> 'b) -> 'b -> 'a option -> 'b
val lookup_all = fn: ('a * 'b -> bool) -> ('b * 'c) list -> 'a -> 'c list
val print_size = fn: string -> 'a -> unit
val check_termination = fn: int -> (unit -> 'a) -> 'a
val inters_orig = fn: ('a * 'a -> order) -> 'a list list -> 'a list
val inters = fn: ('a * 'a -> order) -> 'a list list -> 'a list
val inters' = fn: ('a * 'a -> order) -> 'a list list -> 'a list

Warning (line 7 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 55 of "~/Documents/BT/bachelorthesis/src/benchmark_util.ML"):
### Value identifier (ylabels) has not been referenced.

Warning (line 7 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 57 of "~/Documents/BT/bachelorthesis/src/benchmark_util.ML"):
### Matches are not exhaustive.

Warning (line 7 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 61 of "~/Documents/BT/bachelorthesis/src/benchmark_util.ML"):
### Value identifier (xlabel) has not been referenced.

Output (line 7 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
datatype tag
= Gen of string | Index of string | Size of string | Test of string
constructor Gen: string -> tag
constructor Index: string -> tag
constructor Size: string -> tag
constructor Test: string -> tag
val string_of_tag = fn: tag -> string
val tag_sub = fn: tag -> tag -> bool
val eq_tag = fn: tag * tag list -> bool
val sum_timings = fn: Timing.timing list -> Timing.timing option
val print_real = fn: real -> string
val get_table = fn:
   (tag list * 'a) list ->
     tag ->
       tag ->
         tag list list * tag list list *
         (tag list * (tag list * (tag list * 'a) list) list) list
val print_table = fn:
   string ->
     ('a -> string) ->
       tag list list * 'b * (tag list * ('c * 'a) list) list -> unit
val table = fn:
   (tag list * 'a) list ->
     ((tag list * 'a) list -> string) -> string -> tag -> tag -> unit
val print_timing = fn: Timing.timing -> string

Output (line 8 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
signature TERM_INDEX =
  sig
    exception DELETE
    exception INSERT
    type 'a T
    val content: 'a T -> 'a list
    val delete: ('a -> bool) -> term -> 'a T -> 'a T
    val delete_safe: ('a -> bool) -> term -> 'a T -> 'a T
    val empty: 'a T
    val generalisations: 'a T -> term -> 'a list
    val insert: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val insert_safe: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val instances: 'a T -> term -> 'a list
    val is_empty: 'a T -> bool
    val lookup: 'a T -> term -> 'a list
    val merge: ('a * 'a -> bool) -> 'a T -> 'a T -> 'a T
    val unifiables: 'a T -> term -> 'a list
  end

Warning (line 9 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 32 of "~/Documents/BT/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 9 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 74 of "~/Documents/BT/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 9 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 103 of "~/Documents/BT/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 9 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 130 of "~/Documents/BT/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 9 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 145 of "~/Documents/BT/bachelorthesis/src/net.ML"):
### Value identifier (k) has not been referenced.

Warning (line 9 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 192 of "~/Documents/BT/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 9 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 205 of "~/Documents/BT/bachelorthesis/src/net.ML"):
### Value identifier (var) has not been referenced.

Output (line 9 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
structure NetIndex:
  sig
    exception DELETE
    exception INSERT
    datatype 'a T
    =
         Leaf of 'a list
       | Net of {atoms: 'a T Symtab.table, comb: 'a T, var: 'a T}
    val add_key_of_terms: term * key list -> key list
    val cons_fst: 'a -> 'a list * 'b -> 'a list * 'b
    val content: 'a T -> 'a list
    val delete: ('a -> bool) -> term -> 'a T -> 'a T
    val delete_safe: ('a -> bool) -> term -> 'a T -> 'a T
    val dest: 'a T -> (key list * 'a) list
    val empty: 'a T
    val emptynet: 'a T
    val extract_leaves: 'a T list -> 'a list
    val generalisations: 'a T -> term -> 'a list
    val insert: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val insert_key: ('a * 'a -> bool) -> 'a -> key list * 'a T -> 'a T
    val insert_safe: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val instances: 'a T -> term -> 'a list
    val is_empty: 'a T -> bool
    datatype key = AtomK of string | CombK | VarK
    val key_of_term: term -> key list
    val look1: 'a Symtab.table * Symtab.key -> 'a list -> 'a list
    val lookup: 'a T -> term -> 'a list
    val lookup_aux: 'a T -> key list -> 'a list
    val match_term: 'a T -> term -> 'a list
    val matching: bool -> term -> 'a T -> 'a T list -> 'a T list
    val merge: ('a * 'a -> bool) -> 'a T -> 'a T -> 'a T
    val net_skip: 'a T -> 'a T list -> 'a T list
    val newnet: {atoms: 'a T Symtab.table, comb: 'a T, var: 'a T} -> 'a T
    val query: key list -> 'a T -> 'a list
    val unifiables: 'a T -> term -> 'a list
    val unify_term: 'a T -> term -> 'a list
  end

Warning (line 10 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 105 of "~/Documents/BT/bachelorthesis/src/path.ML"):
### Value identifier (args) has not been referenced.

Output (line 10 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
structure PathIndex:
  sig
    exception DELETE
    exception INSERT
    exception NoConstraint_exn
    structure Stab: TABLE
    type 'a T = int * (term * ('a * int) list) list * 'a tree
    val compute_set: (int * 'a) term_set -> (int * 'a) list
    val content: 'a * ('b * ('c * 'd) list) list * 'e -> 'c list
    type 'a content = (int * 'a) list Stab.table
    val delete:
       ('a -> bool) ->
         term -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val delete_safe:
       ('a -> bool) ->
         term -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val empty: int * 'a list * 'b tree
    val empty_node: 'a tree
    val generalisations:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val insert:
       ('a * 'a -> bool) ->
         term * 'a -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val insert_safe:
       ('a * 'a -> bool) ->
         term * 'a -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val instances:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val is_empty: 'a * ('b * ('c * 'd) list) list * 'e -> bool
    val lookup: 'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val map_child:
       ('a -> 'b tree -> 'b tree) ->
         Stab.key * 'a list ->
           'b tree list Stab.table -> 'b tree list Stab.table
    val merge:
       ('a * 'a -> bool) ->
         'a T -> 'b * (term * ('a * 'c) list) list * 'd -> 'a T
    val ord: (int * 'a) * (int * 'b) -> order
    val query: query_type -> term -> 'a tree -> (int * 'a) term_set
    datatype query_type = Generalisations | Instances | Lookup | Unifiables
    val query_wrapper:
       query_type ->
         term -> 'a * ('b * ('c * 'd) list) list * 'c tree -> 'c list
    val sym_ord: symbol * symbol -> order
    datatype symbol = AtomS of string | VarS
    val symbol_of_term: term -> symbol
    datatype 'a term_set
    =
         Intersection of 'a term_set list
       | List of 'a list
       | NoConstraint
       | Union of 'a term_set list
    datatype 'a tree = Node of 'a content * 'a tree list Stab.table
    val unifiables:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
  end

Warning (line 11 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 180 of "~/Documents/BT/bachelorthesis/src/path_termtab.ML"):
### Value identifier (args) has not been referenced.

Output (line 11 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
structure PathTT:
  sig
    exception DELETE
    exception INSERT
    exception NoConstraint_exn
    structure Stab: TABLE
    type 'a T = int * ('a * int) list Termtab.table * 'a tree
    val compute_set: (int * 'a) term_set -> (int * 'a) list
    val content: 'a * ('b * 'c) list Termtab.table * 'd -> 'b list
    type 'a content = (int * 'a) list Stab.table
    val delete:
       ('a -> bool) ->
         Termtab.key ->
           'a T -> int * ('a * int) list Termtab.table * 'a tree
    val delete_safe:
       ('a -> bool) ->
         Termtab.key ->
           'a T -> int * ('a * int) list Termtab.table * 'a tree
    val empty: int * 'a Termtab.table * 'b tree
    val empty_node: 'a tree
    val generalisations:
       'a * ('b * 'c) list Termtab.table * 'b tree -> term -> 'b list
    val insert:
       ('a * 'a -> bool) ->
         Termtab.key * 'a ->
           'a T -> int * ('a * int) list Termtab.table * 'a tree
    val insert_safe:
       ('a * 'a -> bool) ->
         Termtab.key * 'a ->
           'a T -> int * ('a * int) list Termtab.table * 'a tree
    val instances:
       'a * ('b * 'c) list Termtab.table * 'b tree -> term -> 'b list
    val is_empty: 'a * ('b * 'c) list Termtab.table * 'd -> bool
    val lookup:
       'a * ('b * 'c) list Termtab.table * 'b tree -> term -> 'b list
    val map_child:
       ('a -> 'b tree -> 'b tree) ->
         Stab.key * 'a list ->
           'b tree list Stab.table -> 'b tree list Stab.table
    val merge:
       ('a * 'a -> bool) ->
         'a T -> 'b * ('a * 'c) list Termtab.table * 'd -> 'a T
    val ord: (int * 'a) * (int * 'b) -> order
    val query: query_type -> term -> 'a tree -> (int * 'a) term_set
    datatype query_type = Generalisations | Instances | Lookup | Unifiables
    val query_wrapper:
       query_type ->
         term -> 'a * ('b * 'c) list Termtab.table * 'b tree -> 'b list
    val sym_ord: symbol * symbol -> order
    datatype symbol = AtomS of string | VarS
    val symbol_of_term: term -> symbol
    datatype 'a term_set
    =
         Intersection of 'a term_set list
       | List of 'a list
       | NoConstraint
       | Union of 'a term_set list
    datatype 'a tree = Node of 'a content * 'a tree list Stab.table
    val unifiables:
       'a * ('b * 'c) list Termtab.table * 'b tree -> term -> 'b list
  end

Warning (line 12 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 24 of "~/Documents/BT/bachelorthesis/src/termtab.ML"):
### Value identifier (x) has not been referenced.

Warning (line 12 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 24 of "~/Documents/BT/bachelorthesis/src/termtab.ML"):
### Value identifier (t) has not been referenced.

Warning (line 12 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 25 of "~/Documents/BT/bachelorthesis/src/termtab.ML"):
### Value identifier (x) has not been referenced.

Warning (line 12 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 25 of "~/Documents/BT/bachelorthesis/src/termtab.ML"):
### Value identifier (t) has not been referenced.

Warning (line 12 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 26 of "~/Documents/BT/bachelorthesis/src/termtab.ML"):
### Value identifier (x) has not been referenced.

Warning (line 12 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 26 of "~/Documents/BT/bachelorthesis/src/termtab.ML"):
### Value identifier (t) has not been referenced.

Output (line 12 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
structure TT_Index: TERM_INDEX

Output (line 13 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
structure Pprinter:
  sig
    val pterm: term -> Pretty.T
    val raw_pp_typ: typ -> Pretty.T
    val term_pat_setup: theory -> theory
    val type_pat_setup: theory -> theory
  end

Warning (line 14 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 51 of "~/Documents/BT/bachelorthesis/src/term_gen.ML"):
### Value identifier (i) has not been referenced.

Warning (line 14 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 53 of "~/Documents/BT/bachelorthesis/src/term_gen.ML"):
### Value identifier (i) has not been referenced.

Warning (line 14 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 55 of "~/Documents/BT/bachelorthesis/src/term_gen.ML"):
### Value identifier (i) has not been referenced.

Output (line 14 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
structure Term_Gen:
  sig
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
  end

Output (line 15 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
functor Net_Gen (Index: TERM_INDEX): 
  sig
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term Index.T * Random.rand
    val terms_in_net_gen:
       int ->
         (''a Index.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a Index.T) * Random.rand
    val terms_not_in_net_gen:
       int ->
         (term Index.T, Random.rand) gen_state ->
           Random.rand -> (term list * term Index.T) * Random.rand
  end

Warning (line 16 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (file "~/Documents/BT/bachelorthesis/src/tester.ML"):
### The type of (Tester().test_hol) contains a free type variable. Setting it to
###    a unique monotype.

Output (line 16 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
functor Tester (Index: TERM_INDEX): 
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term Index.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a Index.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a Index.T) * Random.rand
        val terms_not_in_net_gen:
           int ->
             (term Index.T, Random.rand) gen_state ->
               Random.rand -> (term list * term Index.T) * Random.rand
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a Index.T -> 'a list
    val con_eq: term Index.T -> term Index.T -> bool
    val def_net_gen: Random.rand -> term Index.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term Index.T -> term Index.T
    val del': term -> term Index.T -> term Index.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
    val ins: term -> term Index.T -> term Index.T
    val ins': term -> term Index.T -> term Index.T
    val mem: term -> term Index.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term Index.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b Index.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term Index.T, Random.rand) gen_state ->
         Random.rand -> (term * term Index.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a Index.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a Index.T) * Random.rand
    val terms_not_in_net_gen:
       int ->
         (term Index.T, Random.rand) gen_state ->
           Random.rand -> (term list * term Index.T) * Random.rand
    val test: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
  end

Warning (line 17 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 50 of "~/Documents/BT/bachelorthesis/src/benchmark.ML"):
### Value identifier (term_not_in_net) has not been referenced.

Warning (line 17 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 68 of "~/Documents/BT/bachelorthesis/src/benchmark.ML"):
### Value identifier (term_not_in_net) has not been referenced.

Warning (line 17 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### ML warning (line 111 of "~/Documents/BT/bachelorthesis/src/benchmark.ML"):
### Matches are not exhaustive.

Output (line 17 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
functor Benchmark (Index: TERM_INDEX): 
  sig
    val benchmark_basic: term Index.T list -> (tag * Time.time) list
    val benchmark_lookup: term Index.T list -> (tag * Time.time) list
    val benchmark_queries: term Index.T list -> (tag * Time.time) list
    val create_indices: int -> term list -> term Index.T list
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
    val timer:
       string ->
         ('a -> 'b) -> (Random.rand -> 'a * 'c) list -> tag * Time.time
  end

Output (line 19 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
val type_pat_setup = fn: theory -> theory
val term_pat_setup = fn: theory -> theory
val pterm = fn: term -> Pretty.T
val raw_pp_typ = fn: typ -> Pretty.T
val symbol_gen = fn:
   (int * 'a -> bool) ->
     int * int ->
       (int -> (term, Random.rand) gen_state) ->
         int -> 'a -> Random.rand -> (term * int) * Random.rand
val term_with_var = fn:
   int -> int -> int -> int * int -> (term, Random.rand) gen_state
val term_unif_gen = fn:
   ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
val aterm = fn: int -> int * int * int -> term Gen_Types.gen
val term_gen_def = fn: int -> Random.rand -> term * Random.rand
val term_gen = fn:
   int * int * int ->
     int ->
       (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
val replace_subterm = fn:
   (Random.rand -> term * 'a) -> term -> Random.rand -> term * Random.rand
val term_instance_gen = fn:
   ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
val add_aterm_name_suffix = fn: string -> term -> term
val term_ground = fn:
   int -> int -> int * int -> (term, Random.rand) gen_state
val term_var_reuse = fn:
   int -> int -> int * int -> (term, Random.rand) gen_state

Output (line 25 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
structure G:
  sig
    val aterm:
       term gen ->
         term gen ->
           term gen -> term gen -> int * int * int * int -> term gen
    val aterm': int gen -> int gen -> int * int * int * int -> term gen
    val atyp: typ gen -> typ gen -> int * int -> typ gen
    val atyp': int gen -> int gen -> int * int -> typ gen
    val basic_name: string -> int gen -> string gen
    val bernoulli: real -> bool gen
    val binom_dist: real -> int -> int gen
    val bound: (int, 'a) gen_state -> (term, 'a) gen_state
    val char: char gen
    val char_of: string -> char gen
    val cobool: (bool, 'a) cogen
    val cochar: (char, 'a) cogen
    type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
    type ('a, 'b, 'c) cogen_state =
       'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
    val coint: (int, 'a) cogen
    val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
    val const:
       (string, 'a) gen_state -> (typ, 'a) gen_state -> (term, 'a) gen_state
    val const': int gen -> term gen
    val const_name: int gen -> string gen
    val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
    val costring: (string, 'a) cogen
    val cosubstring: (substring, 'a) cogen
    val digit: char gen
    val dummyS: (sort, 'a) gen_state
    val dummyT: (typ, 'a) gen_state
    val elements: 'a vector -> 'a gen
    val elementsL: 'a list -> 'a gen
    val elementsW: (int * 'a) vector -> 'a gen
    val elementsWL: (int * 'a) list -> 'a gen
    val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
    val filter_bounded:
       int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
    val free:
       (string, 'a) gen_state -> (typ, 'a) gen_state -> (term, 'a) gen_state
    val free': int gen -> term gen
    val free_name: int gen -> string gen
    val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
    val function': 'a gen -> (''b -> 'a) gen
    type 'a gen = ('a, Random.rand) gen_state
    type ('a, 'b) gen_state = 'b -> 'a * 'b
    val indexname:
       (string, 'a) gen_state ->
         (int, 'a) gen_state -> (indexname, 'a) gen_state
    val letter: char gen
    val lift: 'a -> ('a, 'b) gen_state
    val list:
       (int, 'a) gen_state -> ('b, 'a) gen_state -> ('b list, 'a) gen_state
    val lowercase_letter: char gen
    val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
    val map2:
       ('a -> 'b -> 'c) ->
         ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
    val map3:
       ('a -> 'b -> 'c -> 'd) ->
         ('a, 'e) gen_state ->
           ('b, 'e) gen_state -> ('c, 'e) gen_state -> ('d, 'e) gen_state
    val map4:
       ('a -> 'b -> 'c -> 'd -> 'e) ->
         ('a, 'f) gen_state ->
           ('b, 'f) gen_state ->
             ('c, 'f) gen_state -> ('d, 'f) gen_state -> ('e, 'f) gen_state
    val neg: int -> int gen
    val nonneg: int -> int gen
    val nonpos: int -> int gen
    val of_seq: ('a option, 'a Seq.seq) gen_state
    val one_of: 'a gen vector -> 'a gen
    val one_ofL: 'a gen list -> 'a gen
    val one_ofW: (int * 'a gen) vector -> 'a gen
    val one_ofWL: (int * 'a gen) list -> 'a gen
    val option:
       (bool, 'a) gen_state ->
         ('b, 'a) gen_state -> ('b option, 'a) gen_state
    val pos: int -> int gen
    val range_char: char * char -> char gen
    val range_int: int * int -> int gen
    val range_real: real * real -> real gen
    val real: real gen
    val real_finite: real gen
    val real_neg: real gen
    val real_nonneg: real gen
    val real_nonpos: real gen
    val real_pos: real gen
    val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
    val seq: ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
    val shuffle: 'a list -> 'a list gen
    val sort:
       (int, 'a) gen_state -> (class, 'a) gen_state -> (sort, 'a) gen_state
    val string: int gen -> char gen -> string gen
    val substring: string gen -> substring gen
    val term_tree:
       (int -> int -> (term * int, 'a) gen_state) -> (term, 'a) gen_state
    val term_tree_path:
       ((term * int) list -> (term * int, 'a) gen_state) ->
         (term, 'a) gen_state
    val tfree:
       (string, 'a) gen_state -> (sort, 'a) gen_state -> (typ, 'a) gen_state
    val tfree': int gen -> typ gen
    val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
    val tfree_name': int gen -> string gen
    val tvar:
       (indexname, 'a) gen_state ->
         (sort, 'a) gen_state -> (typ, 'a) gen_state
    val tvar': int gen -> int gen -> typ gen
    val tvar_name: (indexname, 'a) gen_state -> (indexname, 'a) gen_state
    val tvar_name': int gen -> int gen -> indexname gen
    val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
    val typ':
       int gen ->
         int gen -> typ gen -> typ gen -> int * int * int -> typ gen
    val typ'': int gen -> int gen -> int gen -> int * int * int -> typ gen
    val type':
       string gen ->
         int gen -> typ gen -> typ gen -> int * int * int -> typ gen
    val type'':
       int gen ->
         int gen -> typ gen -> typ gen -> int * int * int -> typ gen
    val type_name: int gen -> string gen
    val unfold_while:
       ('a -> (bool, 'b) gen_state) ->
         ('a, 'b) gen_state -> ('a list, 'b) gen_state
    val unit: (unit, 'a) gen_state
    val uppercase_letter: char gen
    val var:
       (indexname, 'a) gen_state ->
         (typ, 'a) gen_state -> (term, 'a) gen_state
    val var': int gen -> int gen -> term gen
    val var_name: int gen -> int gen -> indexname gen
    val variant: (int, 'a) cogen
    val vector:
       (int, 'a) gen_state ->
         ('b, 'a) gen_state -> ('b vector, 'a) gen_state
    val zip:
       ('a, 'b) gen_state -> ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
    val zip3:
       ('a, 'b) gen_state ->
         ('c, 'b) gen_state ->
           ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
    val zip4:
       ('a, 'b) gen_state ->
         ('c, 'b) gen_state ->
           ('d, 'b) gen_state ->
             ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
  end
structure N:
  sig
    exception DELETE
    exception INSERT
    datatype 'a T
    =
         Leaf of 'a list
       | Net of {atoms: 'a T Symtab.table, comb: 'a T, var: 'a T}
    val add_key_of_terms: term * key list -> key list
    val cons_fst: 'a -> 'a list * 'b -> 'a list * 'b
    val content: 'a T -> 'a list
    val delete: ('a -> bool) -> term -> 'a T -> 'a T
    val delete_safe: ('a -> bool) -> term -> 'a T -> 'a T
    val dest: 'a T -> (key list * 'a) list
    val empty: 'a T
    val emptynet: 'a T
    val extract_leaves: 'a T list -> 'a list
    val generalisations: 'a T -> term -> 'a list
    val insert: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val insert_key: ('a * 'a -> bool) -> 'a -> key list * 'a T -> 'a T
    val insert_safe: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val instances: 'a T -> term -> 'a list
    val is_empty: 'a T -> bool
    datatype key = AtomK of string | CombK | VarK
    val key_of_term: term -> key list
    val look1: 'a Symtab.table * Symtab.key -> 'a list -> 'a list
    val lookup: 'a T -> term -> 'a list
    val lookup_aux: 'a T -> key list -> 'a list
    val match_term: 'a T -> term -> 'a list
    val matching: bool -> term -> 'a T -> 'a T list -> 'a T list
    val merge: ('a * 'a -> bool) -> 'a T -> 'a T -> 'a T
    val net_skip: 'a T -> 'a T list -> 'a T list
    val newnet: {atoms: 'a T Symtab.table, comb: 'a T, var: 'a T} -> 'a T
    val query: key list -> 'a T -> 'a list
    val unifiables: 'a T -> term -> 'a list
    val unify_term: 'a T -> term -> 'a list
  end
structure P:
  sig
    exception DELETE
    exception INSERT
    exception NoConstraint_exn
    structure Stab: TABLE
    type 'a T = int * (term * ('a * int) list) list * 'a tree
    val compute_set: (int * 'a) term_set -> (int * 'a) list
    val content: 'a * ('b * ('c * 'd) list) list * 'e -> 'c list
    type 'a content = (int * 'a) list Stab.table
    val delete:
       ('a -> bool) ->
         term -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val delete_safe:
       ('a -> bool) ->
         term -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val empty: int * 'a list * 'b tree
    val empty_node: 'a tree
    val generalisations:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val insert:
       ('a * 'a -> bool) ->
         term * 'a -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val insert_safe:
       ('a * 'a -> bool) ->
         term * 'a -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val instances:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val is_empty: 'a * ('b * ('c * 'd) list) list * 'e -> bool
    val lookup: 'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val map_child:
       ('a -> 'b tree -> 'b tree) ->
         Stab.key * 'a list ->
           'b tree list Stab.table -> 'b tree list Stab.table
    val merge:
       ('a * 'a -> bool) ->
         'a T -> 'b * (term * ('a * 'c) list) list * 'd -> 'a T
    val ord: (int * 'a) * (int * 'b) -> order
    val query: query_type -> term -> 'a tree -> (int * 'a) term_set
    datatype query_type = Generalisations | Instances | Lookup | Unifiables
    val query_wrapper:
       query_type ->
         term -> 'a * ('b * ('c * 'd) list) list * 'c tree -> 'c list
    val sym_ord: symbol * symbol -> order
    datatype symbol = AtomS of string | VarS
    val symbol_of_term: term -> symbol
    datatype 'a term_set
    =
         Intersection of 'a term_set list
       | List of 'a list
       | NoConstraint
       | Union of 'a term_set list
    datatype 'a tree = Node of 'a content * 'a tree list Stab.table
    val unifiables:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
  end
structure PTT:
  sig
    exception DELETE
    exception INSERT
    exception NoConstraint_exn
    structure Stab: TABLE
    type 'a T = int * ('a * int) list Termtab.table * 'a tree
    val compute_set: (int * 'a) term_set -> (int * 'a) list
    val content: 'a * ('b * 'c) list Termtab.table * 'd -> 'b list
    type 'a content = (int * 'a) list Stab.table
    val delete:
       ('a -> bool) ->
         Termtab.key ->
           'a T -> int * ('a * int) list Termtab.table * 'a tree
    val delete_safe:
       ('a -> bool) ->
         Termtab.key ->
           'a T -> int * ('a * int) list Termtab.table * 'a tree
    val empty: int * 'a Termtab.table * 'b tree
    val empty_node: 'a tree
    val generalisations:
       'a * ('b * 'c) list Termtab.table * 'b tree -> term -> 'b list
    val insert:
       ('a * 'a -> bool) ->
         Termtab.key * 'a ->
           'a T -> int * ('a * int) list Termtab.table * 'a tree
    val insert_safe:
       ('a * 'a -> bool) ->
         Termtab.key * 'a ->
           'a T -> int * ('a * int) list Termtab.table * 'a tree
    val instances:
       'a * ('b * 'c) list Termtab.table * 'b tree -> term -> 'b list
    val is_empty: 'a * ('b * 'c) list Termtab.table * 'd -> bool
    val lookup:
       'a * ('b * 'c) list Termtab.table * 'b tree -> term -> 'b list
    val map_child:
       ('a -> 'b tree -> 'b tree) ->
         Stab.key * 'a list ->
           'b tree list Stab.table -> 'b tree list Stab.table
    val merge:
       ('a * 'a -> bool) ->
         'a T -> 'b * ('a * 'c) list Termtab.table * 'd -> 'a T
    val ord: (int * 'a) * (int * 'b) -> order
    val query: query_type -> term -> 'a tree -> (int * 'a) term_set
    datatype query_type = Generalisations | Instances | Lookup | Unifiables
    val query_wrapper:
       query_type ->
         term -> 'a * ('b * 'c) list Termtab.table * 'b tree -> 'b list
    val sym_ord: symbol * symbol -> order
    datatype symbol = AtomS of string | VarS
    val symbol_of_term: term -> symbol
    datatype 'a term_set
    =
         Intersection of 'a term_set list
       | List of 'a list
       | NoConstraint
       | Union of 'a term_set list
    datatype 'a tree = Node of 'a content * 'a tree list Stab.table
    val unifiables:
       'a * ('b * 'c) list Termtab.table * 'b tree -> term -> 'b list
  end
structure TT: TERM_INDEX
structure NetTest:
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term NetIndex.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term NetIndex.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a NetIndex.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a NetIndex.T) * Random.rand
        val terms_not_in_net_gen:
           int ->
             (term NetIndex.T, Random.rand) gen_state ->
               Random.rand -> (term list * term NetIndex.T) * Random.rand
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a NetIndex.T -> 'a list
    val con_eq: term NetIndex.T -> term NetIndex.T -> bool
    val def_net_gen: Random.rand -> term NetIndex.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term NetIndex.T -> term NetIndex.T
    val del': term -> term NetIndex.T -> term NetIndex.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term NetIndex.T * 'a
    val ins: term -> term NetIndex.T -> term NetIndex.T
    val ins': term -> term NetIndex.T -> term NetIndex.T
    val mem: term -> term NetIndex.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term NetIndex.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b NetIndex.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term NetIndex.T, Random.rand) gen_state ->
         Random.rand -> (term * term NetIndex.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a NetIndex.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a NetIndex.T) * Random.rand
    val terms_not_in_net_gen:
       int ->
         (term NetIndex.T, Random.rand) gen_state ->
           Random.rand -> (term list * term NetIndex.T) * Random.rand
    val test: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
  end
val eq = fn: term * term -> bool
structure PathTest:
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term PathIndex.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term PathIndex.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a PathIndex.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a PathIndex.T) * Random.rand
        val terms_not_in_net_gen:
           int ->
             (term PathIndex.T, Random.rand) gen_state ->
               Random.rand -> (term list * term PathIndex.T) * Random.rand
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a PathIndex.T -> 'a list
    val con_eq: term PathIndex.T -> term PathIndex.T -> bool
    val def_net_gen: Random.rand -> term PathIndex.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term PathIndex.T -> term PathIndex.T
    val del': term -> term PathIndex.T -> term PathIndex.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathIndex.T * 'a
    val ins: term -> term PathIndex.T -> term PathIndex.T
    val ins': term -> term PathIndex.T -> term PathIndex.T
    val mem: term -> term PathIndex.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term PathIndex.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b PathIndex.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term PathIndex.T, Random.rand) gen_state ->
         Random.rand -> (term * term PathIndex.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a PathIndex.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a PathIndex.T) * Random.rand
    val terms_not_in_net_gen:
       int ->
         (term PathIndex.T, Random.rand) gen_state ->
           Random.rand -> (term list * term PathIndex.T) * Random.rand
    val test: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
  end
structure PathTTTest:
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathTT.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term PathTT.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a PathTT.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a PathTT.T) * Random.rand
        val terms_not_in_net_gen:
           int ->
             (term PathTT.T, Random.rand) gen_state ->
               Random.rand -> (term list * term PathTT.T) * Random.rand
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a PathTT.T -> 'a list
    val con_eq: term PathTT.T -> term PathTT.T -> bool
    val def_net_gen: Random.rand -> term PathTT.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term PathTT.T -> term PathTT.T
    val del': term -> term PathTT.T -> term PathTT.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathTT.T * 'a
    val ins: term -> term PathTT.T -> term PathTT.T
    val ins': term -> term PathTT.T -> term PathTT.T
    val mem: term -> term PathTT.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term PathTT.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b PathTT.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term PathTT.T, Random.rand) gen_state ->
         Random.rand -> (term * term PathTT.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a PathTT.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a PathTT.T) * Random.rand
    val terms_not_in_net_gen:
       int ->
         (term PathTT.T, Random.rand) gen_state ->
           Random.rand -> (term list * term PathTT.T) * Random.rand
    val test: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
  end
structure TTTest:
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term TT_Index.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term TT_Index.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a TT_Index.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a TT_Index.T) * Random.rand
        val terms_not_in_net_gen:
           int ->
             (term TT_Index.T, Random.rand) gen_state ->
               Random.rand -> (term list * term TT_Index.T) * Random.rand
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a TT_Index.T -> 'a list
    val con_eq: term TT_Index.T -> term TT_Index.T -> bool
    val def_net_gen: Random.rand -> term TT_Index.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term TT_Index.T -> term TT_Index.T
    val del': term -> term TT_Index.T -> term TT_Index.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term TT_Index.T * 'a
    val ins: term -> term TT_Index.T -> term TT_Index.T
    val ins': term -> term TT_Index.T -> term TT_Index.T
    val mem: term -> term TT_Index.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term TT_Index.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b TT_Index.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term TT_Index.T, Random.rand) gen_state ->
         Random.rand -> (term * term TT_Index.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a TT_Index.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a TT_Index.T) * Random.rand
    val terms_not_in_net_gen:
       int ->
         (term TT_Index.T, Random.rand) gen_state ->
           Random.rand -> (term list * term TT_Index.T) * Random.rand
    val test: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
  end
structure NBench:
  sig
    val benchmark_basic: term NetIndex.T list -> (tag * Time.time) list
    val benchmark_lookup: term NetIndex.T list -> (tag * Time.time) list
    val benchmark_queries: term NetIndex.T list -> (tag * Time.time) list
    val create_indices: int -> term list -> term NetIndex.T list
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term NetIndex.T * 'a
    val timer:
       string ->
         ('a -> 'b) -> (Random.rand -> 'a * 'c) list -> tag * Time.time
  end
structure PBench:
  sig
    val benchmark_basic: term PathIndex.T list -> (tag * Time.time) list
    val benchmark_lookup: term PathIndex.T list -> (tag * Time.time) list
    val benchmark_queries: term PathIndex.T list -> (tag * Time.time) list
    val create_indices: int -> term list -> term PathIndex.T list
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathIndex.T * 'a
    val timer:
       string ->
         ('a -> 'b) -> (Random.rand -> 'a * 'c) list -> tag * Time.time
  end
structure PTTBench:
  sig
    val benchmark_basic: term PathTT.T list -> (tag * Time.time) list
    val benchmark_lookup: term PathTT.T list -> (tag * Time.time) list
    val benchmark_queries: term PathTT.T list -> (tag * Time.time) list
    val create_indices: int -> term list -> term PathTT.T list
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathTT.T * 'a
    val timer:
       string ->
         ('a -> 'b) -> (Random.rand -> 'a * 'c) list -> tag * Time.time
  end
structure TTBench:
  sig
    val benchmark_basic: term TT_Index.T list -> (tag * Time.time) list
    val benchmark_lookup: term TT_Index.T list -> (tag * Time.time) list
    val benchmark_queries: term TT_Index.T list -> (tag * Time.time) list
    val create_indices: int -> term list -> term TT_Index.T list
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term TT_Index.T * 'a
    val timer:
       string ->
         ('a -> 'b) -> (Random.rand -> 'a * 'c) list -> tag * Time.time
  end

Output (line 46 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: 

Output (line 46 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 1000 tests.

Output (line 46 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.005s (run) / 0.736s (total)

Output (line 46 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: 

Output (line 46 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 1000 tests.

Output (line 46 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.005s (run) / 0.419s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Path

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Content of empty net is empty list

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Empty net is empty

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deleting all terms returns empty net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion adds value to content

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 11 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.013s (run) / 0.014s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion of new term increases size

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 6 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Duplicate exception on insert

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Safe insert raises no exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion removes value from content

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion of contained term decreases size

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deleting twice raises exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Safe delete raises no exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Value saved under multiple keys gets deleted correctly

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion and deletion of new term returns identical net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 4 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion and insertion of contained term returns identical net

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Gave up! Passed only 0 test(s); 11 discarded test(s).

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: variants includes the queried term

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: lookup ⊆ generalisations, instances and unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: generalisation ⊆ unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.007s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: instances ⊆ unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: generalisation returns itself and generalisation

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: instances returns itself and instance

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: unifiables returns itself and unifiable

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
PathTT

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Content of empty net is empty list

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Empty net is empty

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deleting all terms returns empty net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion adds value to content

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 6 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion of new term increases size

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 11 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Duplicate exception on insert

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Safe insert raises no exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion removes value from content

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion of contained term decreases size

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deleting twice raises exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Safe delete raises no exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Value saved under multiple keys gets deleted correctly

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion and deletion of new term returns identical net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 13 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion and insertion of contained term returns identical net

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Gave up! Passed only 0 test(s); 11 discarded test(s).

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: variants includes the queried term

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: lookup ⊆ generalisations, instances and unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: generalisation ⊆ unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: instances ⊆ unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: generalisation returns itself and generalisation

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: instances returns itself and instance

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: unifiables returns itself and unifiable

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Content of empty net is empty list

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Empty net is empty

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deleting all terms returns empty net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion adds value to content

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 9 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion of new term increases size

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 10 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Duplicate exception on insert

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Safe insert raises no exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion removes value from content

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion of contained term decreases size

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deleting twice raises exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Safe delete raises no exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Value saved under multiple keys gets deleted correctly

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion and deletion of new term returns identical net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 9 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion and insertion of contained term returns identical net

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Gave up! Passed only 0 test(s); 11 discarded test(s).

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: variants includes the queried term

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: lookup ⊆ generalisations, instances and unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.011s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: generalisation ⊆ unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: instances ⊆ unifiables

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: generalisation returns itself and generalisation

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: instances returns itself and instance

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: unifiables returns itself and unifiable

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.003s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
TT

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Content of empty net is empty list

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Empty net is empty

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deleting all terms returns empty net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.001s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion adds value to content

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 11 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion of new term increases size

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 11 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Duplicate exception on insert

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Safe insert raises no exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion removes value from content

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion of contained term decreases size

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deleting twice raises exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Safe delete raises no exception

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Value saved under multiple keys gets deleted correctly

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Insertion and deletion of new term returns identical net

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 12 discarded.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: Deletion and insertion of contained term returns identical net

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Gave up! Passed only 0 test(s); 11 discarded test(s).

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: variants includes the queried term

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.002s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: lookup ⊆ generalisations, instances and unifiables

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Failed! Falsified (after 1 test(s) and  0 shrink(s)):

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Exception during test run:
### Fail "UNDEFINED"

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: generalisation ⊆ unifiables

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Failed! Falsified (after 1 test(s) and  0 shrink(s)):

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Exception during test run:
### Fail "UNDEFINED"

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: instances ⊆ unifiables

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Failed! Falsified (after 1 test(s) and  0 shrink(s)):

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Exception during test run:
### Fail "UNDEFINED"

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: generalisation returns itself and generalisation

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Failed! Falsified (after 1 test(s) and  0 shrink(s)):

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Exception during test run:
### Fail "UNDEFINED"

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: instances returns itself and instance

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Failed! Falsified (after 1 test(s) and  0 shrink(s)):

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Exception during test run:
### Fail "UNDEFINED"

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):


Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Testing: unifiables returns itself and unifiable

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Failed! Falsified (after 1 test(s) and  0 shrink(s)):

Warning (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
### Exception during test run:
### Fail "UNDEFINED"

Output (line 57 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
Time: 0.000s (run) / 0.000s (total)

Output (line 73 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
val gen_seeds = fn:
   Random.rand -> (int * 'a) list -> ('a * Random.rand list) list
val sizes =
   [(5000,
     [390838767, 1440024730, 353569477, 2019465533, 397661670, 1896190166,
      1255068766, 727857302, 1532932517, 1861488459]),
    (1000,
     [1044315947, 889100762, 1764873331, 2033332191, 2121395371, 1270478687,
      855590678, 210095539, 598697855, 1255142171]),
    (500,
     [1115972076, 2042021737, 2002712419, 1984170185, 1508421642,
      1384790241, 1039797370, 1105285305, 98572469, 533563734, 720063104,
      561336576, 1796446681, 799766844, 1329001167, 125896756, 853249172,
      ...]),
    (200,
     [1277076512, 1041816210, 2114017419, 169013183, 385442773, 2072621281,
      1241640009, 1255971247, 977340579, 1115209848, 1999788322, 699497950,
      882207897, 165399665, 516734992, 447070853, ...]),
    (100,
     [653696840, 973197930, 2129278873, 673405013, 502293428, 317858806,
      115742158, 1032786352, 2046559837, 391376720, 647515268, 1526683821,
      716974773, 409700956, 1131216561, ...]),
    (50,
     [940748841, 242926861, 1161502979, 424793728, 888205097, 596344899,
      657738984, 1950181699, 1972805900, 521961231, 1677764957, 671119386,
      685819602, 817022889, ...]),
    (30,
     [1283877250, 2026287993, 122431209, 962101171, 332020438, 269134982,
      1995559640, 989549076, 1161473985, 2097909382, 1804491613, 2007326708,
      749296258, ...]),
    (10,
     [182605794, 1524157896, 312221885, 1172108323, 450380136, 1301847413,
      1942055765, 717330840, 2030153605, 1056974685, 990240781, 1543438164,
      ...])]:
   (int * Random.rand list) list
val depth = 6: int
val argr = (0, 4): int * int
val test_single = fn: int -> (string * (term, Random.rand) gen_state) list
val gen_distinct =
   [(Gen "NR", fn), (Gen "LR", fn), (Gen "MR", fn), (Gen "HR", fn)]:
   (tag * (int -> (term, Random.rand) gen_state)) list
val gen_var =
   [(Gen "NV", fn), (Gen "LV", fn), (Gen "MV", fn), (Gen "HV", fn)]:
   (tag * (int -> (term, Random.rand) gen_state)) list
val gens =
   [(Gen "NR", fn), (Gen "LR", fn), (Gen "MR", fn), (Gen "HR", fn),
    (Gen "NV", fn), (Gen "LV", fn), (Gen "MV", fn), (Gen "HV", fn)]:
   (tag * (int -> (term, Random.rand) gen_state)) list
val cross = fn: 'a list -> 'b list -> ('a * 'b) list
val bench = fn:
   tag ->
     (int -> term Gen_Base.gen -> 'a Gen_Base.gen) ->
       ('a list -> (tag * 'b) list) ->
         (tag * (int -> term Gen_Base.gen)) list ->
           (int * Random.rand list) list -> (tag list * 'b) list

Output (line 127 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
val dn_bench = fn:
   (tag * (int -> term Gen_Base.gen)) list ->
     (int * Random.rand list) list -> (tag list * Time.time) list
val pi_bench = fn:
   (tag * (int -> term Gen_Base.gen)) list ->
     (int * Random.rand list) list -> (tag list * Time.time) list
val pitt_bench = fn:
   (tag * (int -> term Gen_Base.gen)) list ->
     (int * Random.rand list) list -> (tag list * Time.time) list
val tt_bench = fn:
   (tag * (int -> term Gen_Base.gen)) list ->
     (int * Random.rand list) list -> (tag list * Time.time) list
val benches = [fn, fn, fn, fn]:
   ((tag * (int -> term Gen_Base.gen)) list ->
      (int * Random.rand list) list -> (tag list * Time.time) list
   )
   list
val gc = fn: unit -> Time.time
val it = (): unit
val it = 0.133: Time.time
val benchmarks =
   [([Test "Content of net", Index "PI_", Gen "NR",
      Size "Size: 5000 Runs: 10"],
     0.001),
    ([Test "Insert terms", Index "PI_", Gen "NR",
      Size "Size: 5000 Runs: 10"],
     1.029),
    ([Test "Delete terms", Index "PI_", Gen "NR",
      Size "Size: 5000 Runs: 10"],
     1.939),
    ([Test "Q: lookup existing term", Index "PI_", Gen "NR",
      Size "Size: 5000 Runs: 10"],
     0.330),
    ([Test "Q: instances existing term", Index "PI_", Gen "NR",
      Size "Size: 5000 Runs: 10"],
     0.347),
    ([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
      Size "Size: 5000 Runs: 10"],
     0.508),
    ([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
      Size "Size: 5000 Runs: 10"],
     0.579),
    ([Test "Content of net", Index "PI_", Gen "NR",
      Size "Size: 1000 Runs: 10"],
     0.000),
    ([Test "Insert terms", Index "PI_", Gen "NR",
      Size "Size: 1000 Runs: 10"],
     0.160),
    ([Test "Delete terms", Index "PI_", Gen "NR",
      Size "Size: 1000 Runs: 10"],
     0.514),
    ([Test "Q: lookup existing term", Index "PI_", Gen "NR",
      Size "Size: 1000 Runs: 10"],
     0.133),
    ([Test "Q: instances existing term", Index "PI_", Gen "NR",
      Size "Size: 1000 Runs: 10"],
     0.187),
    ([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
      Size "Size: 1000 Runs: 10"],
     0.257),
    ([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
      Size "Size: 1000 Runs: 10"],
     0.255),
    ([Test "Content of net", Index "PI_", Gen "NR",
      Size "Size: 500 Runs: 100"],
     0.001),
    ([Test "Insert terms", Index "PI_", Gen "NR", Size "..."], 0.690),
    ([Test "Delete terms", Index "PI_", Gen "...", ...], 1.470),
    ([Test "Q: lookup existing term", Index "...", ...], 0.639),
    ([Test "...", ...], 0.625), ([...], 0.955), ...]:
   (tag list * Time.time) list

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
([Test "Q: lookup existing term", Index "TT_", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Content of net", Index "TT_", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.011)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.012)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.010)
([Test "Content of net", Index "TT_", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.019)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.021)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.018)
([Test "Content of net", Index "TT_", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: lookup existing term", Index "TT_", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.043)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Size: 100 Runs: 1000"],
 0.050)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Size: 100 Runs: 1000"],
 0.039)
([Test "Content of net", Index "TT_", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: lookup existing term", Index "TT_", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.009)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Size: 200 Runs: 100"],
 0.011)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Size: 200 Runs: 100"],
 0.008)
([Test "Content of net", Index "TT_", Gen "HV", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: lookup existing term", Index "TT_", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.030)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Size: 500 Runs: 100"],
 0.035)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Size: 500 Runs: 100"],
 0.027)
([Test "Content of net", Index "TT_", Gen "HV", Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.008)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.007)
([Test "Content of net", Index "TT_", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: lookup existing term", Index "TT_", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.019)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.022)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.015)
([Test "Content of net", Index "TT_", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Content of net", Index "TT_", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.011)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.013)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.011)
([Test "Content of net", Index "TT_", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: lookup existing term", Index "TT_", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.020)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.023)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.018)
([Test "Content of net", Index "TT_", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: lookup existing term", Index "TT_", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.041)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Size: 100 Runs: 1000"],
 0.048)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Size: 100 Runs: 1000"],
 0.038)
([Test "Content of net", Index "TT_", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: lookup existing term", Index "TT_", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.011)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Size: 200 Runs: 100"],
 0.013)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Size: 200 Runs: 100"],
 0.010)
([Test "Content of net", Index "TT_", Gen "MV", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: lookup existing term", Index "TT_", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.032)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Size: 500 Runs: 100"],
 0.037)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Size: 500 Runs: 100"],
 0.028)
([Test "Content of net", Index "TT_", Gen "MV", Size "Size: 500 Runs: 100"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.008)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.007)
([Test "Content of net", Index "TT_", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: lookup existing term", Index "TT_", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.018)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.020)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.014)
([Test "Content of net", Index "TT_", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Content of net", Index "TT_", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.012)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.014)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.011)
([Test "Content of net", Index "TT_", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: lookup existing term", Index "TT_", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.021)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.027)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.020)
([Test "Content of net", Index "TT_", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.006)
([Test "Q: lookup existing term", Index "TT_", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 0.040)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Size: 100 Runs: 1000"],
 0.051)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Size: 100 Runs: 1000"],
 0.037)
([Test "Content of net", Index "TT_", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 0.008)
([Test "Q: lookup existing term", Index "TT_", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.012)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Size: 200 Runs: 100"],
 0.014)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Size: 200 Runs: 100"],
 0.010)
([Test "Content of net", Index "TT_", Gen "LV", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: lookup existing term", Index "TT_", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.036)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Size: 500 Runs: 100"],
 0.041)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Size: 500 Runs: 100"],
 0.032)
([Test "Content of net", Index "TT_", Gen "LV", Size "Size: 500 Runs: 100"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.007)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.007)
([Test "Content of net", Index "TT_", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: lookup existing term", Index "TT_", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.022)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.024)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.018)
([Test "Content of net", Index "TT_", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.006)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Content of net", Index "TT_", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.015)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.017)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.014)
([Test "Content of net", Index "TT_", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: lookup existing term", Index "TT_", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.018)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Size: 50 Runs: 1000"],
 0.020)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Size: 50 Runs: 1000"],
 0.017)
([Test "Content of net", Index "TT_", Gen "NV", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: lookup existing term", Index "TT_", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 0.044)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Size: 100 Runs: 1000"],
 0.050)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Size: 100 Runs: 1000"],
 0.040)
([Test "Content of net", Index "TT_", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: lookup existing term", Index "TT_", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.012)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Size: 200 Runs: 100"],
 0.014)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Size: 200 Runs: 100"],
 0.010)
([Test "Content of net", Index "TT_", Gen "NV", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: lookup existing term", Index "TT_", Gen "NV",
  Size "Size: 500 Runs: 100"],
 0.030)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Size: 500 Runs: 100"],
 0.034)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Size: 500 Runs: 100"],
 0.026)
([Test "Content of net", Index "TT_", Gen "NV", Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.008)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.007)
([Test "Content of net", Index "TT_", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: lookup existing term", Index "TT_", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.023)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Size: 5000 Runs: 10"],
 0.025)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Size: 5000 Runs: 10"],
 0.017)
([Test "Content of net", Index "TT_", Gen "NV", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Delete terms", Index "TT_", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.006)
([Test "Insert terms", Index "TT_", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Content of net", Index "TT_", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.013)
([Test "Delete terms", Index "TT_", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.016)
([Test "Insert terms", Index "TT_", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.013)
([Test "Content of net", Index "TT_", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: lookup existing term", Index "TT_", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.018)
([Test "Delete terms", Index "TT_", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.021)
([Test "Insert terms", Index "TT_", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.017)
([Test "Content of net", Index "TT_", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.004)
([Test "Q: lookup existing term", Index "TT_", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.043)
([Test "Delete terms", Index "TT_", Gen "HR", Size "Size: 100 Runs: 1000"],
 0.050)
([Test "Insert terms", Index "TT_", Gen "HR", Size "Size: 100 Runs: 1000"],
 0.039)
([Test "Content of net", Index "TT_", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: lookup existing term", Index "TT_", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.011)
([Test "Delete terms", Index "TT_", Gen "HR", Size "Size: 200 Runs: 100"],
 0.012)
([Test "Insert terms", Index "TT_", Gen "HR", Size "Size: 200 Runs: 100"],
 0.010)
([Test "Content of net", Index "TT_", Gen "HR", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: lookup existing term", Index "TT_", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.033)
([Test "Delete terms", Index "TT_", Gen "HR", Size "Size: 500 Runs: 100"],
 0.038)
([Test "Insert terms", Index "TT_", Gen "HR", Size "Size: 500 Runs: 100"],
 0.030)
([Test "Content of net", Index "TT_", Gen "HR", Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.008)
([Test "Delete terms", Index "TT_", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Insert terms", Index "TT_", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.007)
([Test "Content of net", Index "TT_", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: lookup existing term", Index "TT_", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.019)
([Test "Delete terms", Index "TT_", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.022)
([Test "Insert terms", Index "TT_", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.015)
([Test "Content of net", Index "TT_", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Delete terms", Index "TT_", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Insert terms", Index "TT_", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Content of net", Index "TT_", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.012)
([Test "Delete terms", Index "TT_", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.013)
([Test "Insert terms", Index "TT_", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.011)
([Test "Content of net", Index "TT_", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.020)
([Test "Delete terms", Index "TT_", Gen "MR", Size "Size: 50 Runs: 1000"],
 0.023)
([Test "Insert terms", Index "TT_", Gen "MR", Size "Size: 50 Runs: 1000"],
 0.019)
([Test "Content of net", Index "TT_", Gen "MR", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: lookup existing term", Index "TT_", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.043)
([Test "Delete terms", Index "TT_", Gen "MR", Size "Size: 100 Runs: 1000"],
 0.049)
([Test "Insert terms", Index "TT_", Gen "MR", Size "Size: 100 Runs: 1000"],
 0.039)
([Test "Content of net", Index "TT_", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: lookup existing term", Index "TT_", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.012)
([Test "Delete terms", Index "TT_", Gen "MR", Size "Size: 200 Runs: 100"],
 0.014)
([Test "Insert terms", Index "TT_", Gen "MR", Size "Size: 200 Runs: 100"],
 0.011)
([Test "Content of net", Index "TT_", Gen "MR", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: lookup existing term", Index "TT_", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.027)
([Test "Delete terms", Index "TT_", Gen "MR", Size "Size: 500 Runs: 100"],
 0.031)
([Test "Insert terms", Index "TT_", Gen "MR", Size "Size: 500 Runs: 100"],
 0.024)
([Test "Content of net", Index "TT_", Gen "MR", Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Delete terms", Index "TT_", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.010)
([Test "Insert terms", Index "TT_", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Content of net", Index "TT_", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: lookup existing term", Index "TT_", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.018)
([Test "Delete terms", Index "TT_", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.021)
([Test "Insert terms", Index "TT_", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.014)
([Test "Content of net", Index "TT_", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Delete terms", Index "TT_", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Insert terms", Index "TT_", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Content of net", Index "TT_", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.013)
([Test "Delete terms", Index "TT_", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.015)
([Test "Insert terms", Index "TT_", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.012)
([Test "Content of net", Index "TT_", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: lookup existing term", Index "TT_", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.019)
([Test "Delete terms", Index "TT_", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.022)
([Test "Insert terms", Index "TT_", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.018)
([Test "Content of net", Index "TT_", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.004)
([Test "Q: lookup existing term", Index "TT_", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.041)
([Test "Delete terms", Index "TT_", Gen "LR", Size "Size: 100 Runs: 1000"],
 0.049)
([Test "Insert terms", Index "TT_", Gen "LR", Size "Size: 100 Runs: 1000"],
 0.037)
([Test "Content of net", Index "TT_", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: lookup existing term", Index "TT_", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.010)
([Test "Delete terms", Index "TT_", Gen "LR", Size "Size: 200 Runs: 100"],
 0.011)
([Test "Insert terms", Index "TT_", Gen "LR", Size "Size: 200 Runs: 100"],
 0.009)
([Test "Content of net", Index "TT_", Gen "LR", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: lookup existing term", Index "TT_", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.027)
([Test "Delete terms", Index "TT_", Gen "LR", Size "Size: 500 Runs: 100"],
 0.034)
([Test "Insert terms", Index "TT_", Gen "LR", Size "Size: 500 Runs: 100"],
 0.025)
([Test "Content of net", Index "TT_", Gen "LR", Size "Size: 500 Runs: 100"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.008)
([Test "Delete terms", Index "TT_", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Insert terms", Index "TT_", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.007)
([Test "Content of net", Index "TT_", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: lookup existing term", Index "TT_", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.018)
([Test "Delete terms", Index "TT_", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.021)
([Test "Insert terms", Index "TT_", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.015)
([Test "Content of net", Index "TT_", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Delete terms", Index "TT_", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Insert terms", Index "TT_", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.005)
([Test "Content of net", Index "TT_", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: lookup existing term", Index "TT_", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.012)
([Test "Delete terms", Index "TT_", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.013)
([Test "Insert terms", Index "TT_", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.011)
([Test "Content of net", Index "TT_", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: lookup existing term", Index "TT_", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.020)
([Test "Delete terms", Index "TT_", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.023)
([Test "Insert terms", Index "TT_", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.018)
([Test "Content of net", Index "TT_", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: lookup existing term", Index "TT_", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.041)
([Test "Delete terms", Index "TT_", Gen "NR", Size "Size: 100 Runs: 1000"],
 0.047)
([Test "Insert terms", Index "TT_", Gen "NR", Size "Size: 100 Runs: 1000"],
 0.037)
([Test "Content of net", Index "TT_", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: lookup existing term", Index "TT_", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.011)
([Test "Delete terms", Index "TT_", Gen "NR", Size "Size: 200 Runs: 100"],
 0.012)
([Test "Insert terms", Index "TT_", Gen "NR", Size "Size: 200 Runs: 100"],
 0.009)
([Test "Content of net", Index "TT_", Gen "NR", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: lookup existing term", Index "TT_", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.032)
([Test "Delete terms", Index "TT_", Gen "NR", Size "Size: 500 Runs: 100"],
 0.037)
([Test "Insert terms", Index "TT_", Gen "NR", Size "Size: 500 Runs: 100"],
 0.031)
([Test "Content of net", Index "TT_", Gen "NR", Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: lookup existing term", Index "TT_", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.008)
([Test "Delete terms", Index "TT_", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.009)
([Test "Insert terms", Index "TT_", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.007)
([Test "Content of net", Index "TT_", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: lookup existing term", Index "TT_", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.018)
([Test "Delete terms", Index "TT_", Gen "NR", Size "Size: 5000 Runs: 10"],
 0.021)
([Test "Insert terms", Index "TT_", Gen "NR", Size "Size: 5000 Runs: 10"],
 0.014)
([Test "Content of net", Index "TT_", Gen "NR", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "DN", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.066)
([Test "Q: generalisations existing term", Index "DN", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.057)
([Test "Q: instances existing term", Index "DN", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.060)
([Test "Q: lookup existing term", Index "DN", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.050)
([Test "Delete terms", Index "DN", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.061)
([Test "Insert terms", Index "DN", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.055)
([Test "Content of net", Index "DN", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.053)
([Test "Q: unifiables existing term", Index "DN", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.138)
([Test "Q: generalisations existing term", Index "DN", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.074)
([Test "Q: instances existing term", Index "DN", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 1.439)
([Test "Q: lookup existing term", Index "DN", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.123)
([Test "Delete terms", Index "DN", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.153)
([Test "Insert terms", Index "DN", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.129)
([Test "Content of net", Index "DN", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.141)
([Test "Q: unifiables existing term", Index "DN", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.291)
([Test "Q: generalisations existing term", Index "DN", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.123)
([Test "Q: instances existing term", Index "DN", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.294)
([Test "Q: lookup existing term", Index "DN", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.146)
([Test "Delete terms", Index "DN", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.212)
([Test "Insert terms", Index "DN", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.172)
([Test "Content of net", Index "DN", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.228)
([Test "Q: unifiables existing term", Index "DN", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.968)
([Test "Q: generalisations existing term", Index "DN", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.283)
([Test "Q: instances existing term", Index "DN", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 1.260)
([Test "Q: lookup existing term", Index "DN", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.299)
([Test "Delete terms", Index "DN", Gen "HV", Size "Size: 100 Runs: 1000"],
 0.453)
([Test "Insert terms", Index "DN", Gen "HV", Size "Size: 100 Runs: 1000"],
 0.394)
([Test "Content of net", Index "DN", Gen "HV", Size "Size: 100 Runs: 1000"],
 0.464)
([Test "Q: unifiables existing term", Index "DN", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.322)
([Test "Q: generalisations existing term", Index "DN", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.076)
([Test "Q: instances existing term", Index "DN", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.321)
([Test "Q: lookup existing term", Index "DN", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.094)
([Test "Delete terms", Index "DN", Gen "HV", Size "Size: 200 Runs: 100"],
 0.117)
([Test "Insert terms", Index "DN", Gen "HV", Size "Size: 200 Runs: 100"],
 0.100)
([Test "Content of net", Index "DN", Gen "HV", Size "Size: 200 Runs: 100"],
 0.091)
([Test "Q: unifiables existing term", Index "DN", Gen "HV",
  Size "Size: 500 Runs: 100"],
 2.850)
([Test "Q: generalisations existing term", Index "DN", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.170)
([Test "Q: instances existing term", Index "DN", Gen "HV",
  Size "Size: 500 Runs: 100"],
 2.016)
([Test "Q: lookup existing term", Index "DN", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.189)
([Test "Delete terms", Index "DN", Gen "HV", Size "Size: 500 Runs: 100"],
 0.261)
([Test "Insert terms", Index "DN", Gen "HV", Size "Size: 500 Runs: 100"],
 0.220)
([Test "Content of net", Index "DN", Gen "HV", Size "Size: 500 Runs: 100"],
 0.226)
([Test "Q: unifiables existing term", Index "DN", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.709)
([Test "Q: generalisations existing term", Index "DN", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.034)
([Test "Q: instances existing term", Index "DN", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 1.293)
([Test "Q: lookup existing term", Index "DN", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.050)
([Test "Delete terms", Index "DN", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.062)
([Test "Insert terms", Index "DN", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.054)
([Test "Content of net", Index "DN", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.045)
([Test "Q: unifiables existing term", Index "DN", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 4.855)
([Test "Q: generalisations existing term", Index "DN", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.065)
([Test "Q: instances existing term", Index "DN", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 5.975)
([Test "Q: lookup existing term", Index "DN", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.060)
([Test "Delete terms", Index "DN", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.085)
([Test "Insert terms", Index "DN", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.073)
([Test "Content of net", Index "DN", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.218)
([Test "Q: unifiables existing term", Index "DN", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.042)
([Test "Q: generalisations existing term", Index "DN", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.037)
([Test "Q: instances existing term", Index "DN", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.051)
([Test "Q: lookup existing term", Index "DN", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.064)
([Test "Delete terms", Index "DN", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.103)
([Test "Insert terms", Index "DN", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.091)
([Test "Content of net", Index "DN", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.097)
([Test "Q: unifiables existing term", Index "DN", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.141)
([Test "Q: generalisations existing term", Index "DN", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.101)
([Test "Q: instances existing term", Index "DN", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.174)
([Test "Q: lookup existing term", Index "DN", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.126)
([Test "Delete terms", Index "DN", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.188)
([Test "Insert terms", Index "DN", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.147)
([Test "Content of net", Index "DN", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.262)
([Test "Q: unifiables existing term", Index "DN", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.343)
([Test "Q: generalisations existing term", Index "DN", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.276)
([Test "Q: instances existing term", Index "DN", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.382)
([Test "Q: lookup existing term", Index "DN", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.207)
([Test "Delete terms", Index "DN", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.390)
([Test "Insert terms", Index "DN", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.276)
([Test "Content of net", Index "DN", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.460)
([Test "Q: unifiables existing term", Index "DN", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.805)
([Test "Q: generalisations existing term", Index "DN", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.377)
([Test "Q: instances existing term", Index "DN", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.815)
([Test "Q: lookup existing term", Index "DN", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.403)
([Test "Delete terms", Index "DN", Gen "MV", Size "Size: 100 Runs: 1000"],
 0.612)
([Test "Insert terms", Index "DN", Gen "MV", Size "Size: 100 Runs: 1000"],
 0.655)
([Test "Content of net", Index "DN", Gen "MV", Size "Size: 100 Runs: 1000"],
 1.511)
([Test "Q: unifiables existing term", Index "DN", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.244)
([Test "Q: generalisations existing term", Index "DN", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.075)
([Test "Q: instances existing term", Index "DN", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.245)
([Test "Q: lookup existing term", Index "DN", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.115)
([Test "Delete terms", Index "DN", Gen "MV", Size "Size: 200 Runs: 100"],
 0.210)
([Test "Insert terms", Index "DN", Gen "MV", Size "Size: 200 Runs: 100"],
 0.182)
([Test "Content of net", Index "DN", Gen "MV", Size "Size: 200 Runs: 100"],
 0.180)
([Test "Q: unifiables existing term", Index "DN", Gen "MV",
  Size "Size: 500 Runs: 100"],
 1.335)
([Test "Q: generalisations existing term", Index "DN", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.235)
([Test "Q: instances existing term", Index "DN", Gen "MV",
  Size "Size: 500 Runs: 100"],
 1.918)
([Test "Q: lookup existing term", Index "DN", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.242)
([Test "Delete terms", Index "DN", Gen "MV", Size "Size: 500 Runs: 100"],
 0.411)
([Test "Insert terms", Index "DN", Gen "MV", Size "Size: 500 Runs: 100"],
 0.359)
([Test "Content of net", Index "DN", Gen "MV", Size "Size: 500 Runs: 100"],
 0.446)
([Test "Q: unifiables existing term", Index "DN", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.489)
([Test "Q: generalisations existing term", Index "DN", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.046)
([Test "Q: instances existing term", Index "DN", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 1.291)
([Test "Q: lookup existing term", Index "DN", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.083)
([Test "Delete terms", Index "DN", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.104)
([Test "Insert terms", Index "DN", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.090)
([Test "Content of net", Index "DN", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.089)
([Test "Q: unifiables existing term", Index "DN", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 3.077)
([Test "Q: generalisations existing term", Index "DN", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.102)
([Test "Q: instances existing term", Index "DN", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 3.850)
([Test "Q: lookup existing term", Index "DN", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.105)
([Test "Delete terms", Index "DN", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.116)
([Test "Insert terms", Index "DN", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.101)
([Test "Content of net", Index "DN", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.444)
([Test "Q: unifiables existing term", Index "DN", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.046)
([Test "Q: generalisations existing term", Index "DN", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.043)
([Test "Q: instances existing term", Index "DN", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.056)
([Test "Q: lookup existing term", Index "DN", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.052)
([Test "Delete terms", Index "DN", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.079)
([Test "Insert terms", Index "DN", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.063)
([Test "Content of net", Index "DN", Gen "LV", Size "Size: 10 Runs: 1000"],
 1.134)
([Test "Q: unifiables existing term", Index "DN", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.135)
([Test "Q: generalisations existing term", Index "DN", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.118)
([Test "Q: instances existing term", Index "DN", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.164)
([Test "Q: lookup existing term", Index "DN", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.147)
([Test "Delete terms", Index "DN", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.227)
([Test "Insert terms", Index "DN", Gen "LV", Size "Size: 30 Runs: 1000"],
 3.148)
([Test "Content of net", Index "DN", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.359)
([Test "Q: unifiables existing term", Index "DN", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.275)
([Test "Q: generalisations existing term", Index "DN", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.229)
([Test "Q: instances existing term", Index "DN", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.360)
([Test "Q: lookup existing term", Index "DN", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.292)
([Test "Delete terms", Index "DN", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.439)
([Test "Insert terms", Index "DN", Gen "LV", Size "Size: 50 Runs: 1000"],
 8.814)
([Test "Content of net", Index "DN", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.572)
([Test "Q: unifiables existing term", Index "DN", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 0.613)
([Test "Q: generalisations existing term", Index "DN", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 0.452)
([Test "Q: instances existing term", Index "DN", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 0.644)
([Test "Q: lookup existing term", Index "DN", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 0.470)
([Test "Delete terms", Index "DN", Gen "LV", Size "Size: 100 Runs: 1000"],
 0.766)
([Test "Insert terms", Index "DN", Gen "LV", Size "Size: 100 Runs: 1000"],
 0.683)
([Test "Content of net", Index "DN", Gen "LV", Size "Size: 100 Runs: 1000"],
 1.679)
([Test "Q: unifiables existing term", Index "DN", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.158)
([Test "Q: generalisations existing term", Index "DN", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.087)
([Test "Q: instances existing term", Index "DN", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.175)
([Test "Q: lookup existing term", Index "DN", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.104)
([Test "Delete terms", Index "DN", Gen "LV", Size "Size: 200 Runs: 100"],
 0.266)
([Test "Insert terms", Index "DN", Gen "LV", Size "Size: 200 Runs: 100"],
 0.233)
([Test "Content of net", Index "DN", Gen "LV", Size "Size: 200 Runs: 100"],
 0.238)
([Test "Q: unifiables existing term", Index "DN", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.765)
([Test "Q: generalisations existing term", Index "DN", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.316)
([Test "Q: instances existing term", Index "DN", Gen "LV",
  Size "Size: 500 Runs: 100"],
 1.112)
([Test "Q: lookup existing term", Index "DN", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.319)
([Test "Delete terms", Index "DN", Gen "LV", Size "Size: 500 Runs: 100"],
 0.558)
([Test "Insert terms", Index "DN", Gen "LV", Size "Size: 500 Runs: 100"],
 0.370)
([Test "Content of net", Index "DN", Gen "LV", Size "Size: 500 Runs: 100"],
 0.562)
([Test "Q: unifiables existing term", Index "DN", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.265)
([Test "Q: generalisations existing term", Index "DN", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.095)
([Test "Q: instances existing term", Index "DN", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.242)
([Test "Q: lookup existing term", Index "DN", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.083)
([Test "Delete terms", Index "DN", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.115)
([Test "Insert terms", Index "DN", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.098)
([Test "Content of net", Index "DN", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.114)
([Test "Q: unifiables existing term", Index "DN", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 1.218)
([Test "Q: generalisations existing term", Index "DN", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.091)
([Test "Q: instances existing term", Index "DN", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 1.307)
([Test "Q: lookup existing term", Index "DN", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.105)
([Test "Delete terms", Index "DN", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.128)
([Test "Insert terms", Index "DN", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.144)
([Test "Content of net", Index "DN", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.964)
([Test "Q: unifiables existing term", Index "DN", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.047)
([Test "Q: generalisations existing term", Index "DN", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.047)
([Test "Q: instances existing term", Index "DN", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.057)
([Test "Q: lookup existing term", Index "DN", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.055)
([Test "Delete terms", Index "DN", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.128)
([Test "Insert terms", Index "DN", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.123)
([Test "Content of net", Index "DN", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.140)
([Test "Q: unifiables existing term", Index "DN", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.127)
([Test "Q: generalisations existing term", Index "DN", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.135)
([Test "Q: instances existing term", Index "DN", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.159)
([Test "Q: lookup existing term", Index "DN", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.153)
([Test "Delete terms", Index "DN", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.251)
([Test "Insert terms", Index "DN", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.233)
([Test "Content of net", Index "DN", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.397)
([Test "Q: unifiables existing term", Index "DN", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.247)
([Test "Q: generalisations existing term", Index "DN", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.248)
([Test "Q: instances existing term", Index "DN", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.253)
([Test "Q: lookup existing term", Index "DN", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.352)
([Test "Delete terms", Index "DN", Gen "NV", Size "Size: 50 Runs: 1000"],
 0.443)
([Test "Insert terms", Index "DN", Gen "NV", Size "Size: 50 Runs: 1000"],
 0.459)
([Test "Content of net", Index "DN", Gen "NV", Size "Size: 50 Runs: 1000"],
 0.698)
([Test "Q: unifiables existing term", Index "DN", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 0.473)
([Test "Q: generalisations existing term", Index "DN", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 0.471)
([Test "Q: instances existing term", Index "DN", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 0.528)
([Test "Q: lookup existing term", Index "DN", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 0.518)
([Test "Delete terms", Index "DN", Gen "NV", Size "Size: 100 Runs: 1000"],
 0.820)
([Test "Insert terms", Index "DN", Gen "NV", Size "Size: 100 Runs: 1000"],
 0.704)
([Test "Content of net", Index "DN", Gen "NV", Size "Size: 100 Runs: 1000"],
 2.145)
([Test "Q: unifiables existing term", Index "DN", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.091)
([Test "Q: generalisations existing term", Index "DN", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.093)
([Test "Q: instances existing term", Index "DN", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.112)
([Test "Q: lookup existing term", Index "DN", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.110)
([Test "Delete terms", Index "DN", Gen "NV", Size "Size: 200 Runs: 100"],
 0.256)
([Test "Insert terms", Index "DN", Gen "NV", Size "Size: 200 Runs: 100"],
 0.204)
([Test "Content of net", Index "DN", Gen "NV", Size "Size: 200 Runs: 100"],
 0.262)
([Test "Q: unifiables existing term", Index "DN", Gen "NV",
  Size "Size: 500 Runs: 100"],
 0.280)
([Test "Q: generalisations existing term", Index "DN", Gen "NV",
  Size "Size: 500 Runs: 100"],
 0.281)
([Test "Q: instances existing term", Index "DN", Gen "NV",
  Size "Size: 500 Runs: 100"],
 0.304)
([Test "Q: lookup existing term", Index "DN", Gen "NV",
  Size "Size: 500 Runs: 100"],
 0.290)
([Test "Delete terms", Index "DN", Gen "NV", Size "Size: 500 Runs: 100"],
 0.531)
([Test "Insert terms", Index "DN", Gen "NV", Size "Size: 500 Runs: 100"],
 0.452)
([Test "Content of net", Index "DN", Gen "NV", Size "Size: 500 Runs: 100"],
 1.104)
([Test "Q: unifiables existing term", Index "DN", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.053)
([Test "Q: generalisations existing term", Index "DN", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.053)
([Test "Q: instances existing term", Index "DN", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.068)
([Test "Q: lookup existing term", Index "DN", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.065)
([Test "Delete terms", Index "DN", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.098)
([Test "Insert terms", Index "DN", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.099)
([Test "Content of net", Index "DN", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.135)
([Test "Q: unifiables existing term", Index "DN", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.094)
([Test "Q: generalisations existing term", Index "DN", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.093)
([Test "Q: instances existing term", Index "DN", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.098)
([Test "Q: lookup existing term", Index "DN", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.102)
([Test "Delete terms", Index "DN", Gen "NV", Size "Size: 5000 Runs: 10"],
 0.158)
([Test "Insert terms", Index "DN", Gen "NV", Size "Size: 5000 Runs: 10"],
 0.150)
([Test "Content of net", Index "DN", Gen "NV", Size "Size: 5000 Runs: 10"],
 1.098)
([Test "Q: unifiables existing term", Index "DN", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.042)
([Test "Q: generalisations existing term", Index "DN", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.038)
([Test "Q: instances existing term", Index "DN", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.093)
([Test "Q: lookup existing term", Index "DN", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.079)
([Test "Delete terms", Index "DN", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.105)
([Test "Insert terms", Index "DN", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.093)
([Test "Content of net", Index "DN", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.094)
([Test "Q: unifiables existing term", Index "DN", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.145)
([Test "Q: generalisations existing term", Index "DN", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.103)
([Test "Q: instances existing term", Index "DN", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.170)
([Test "Q: lookup existing term", Index "DN", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.126)
([Test "Delete terms", Index "DN", Gen "HR", Size "Size: 30 Runs: 1000"],
 1.327)
([Test "Insert terms", Index "DN", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.203)
([Test "Content of net", Index "DN", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.280)
([Test "Q: unifiables existing term", Index "DN", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.280)
([Test "Q: generalisations existing term", Index "DN", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.177)
([Test "Q: instances existing term", Index "DN", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.317)
([Test "Q: lookup existing term", Index "DN", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.207)
([Test "Delete terms", Index "DN", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.316)
([Test "Insert terms", Index "DN", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.247)
([Test "Content of net", Index "DN", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.462)
([Test "Q: unifiables existing term", Index "DN", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.812)
([Test "Q: generalisations existing term", Index "DN", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.378)
([Test "Q: instances existing term", Index "DN", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.805)
([Test "Q: lookup existing term", Index "DN", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.400)
([Test "Delete terms", Index "DN", Gen "HR", Size "Size: 100 Runs: 1000"],
 0.627)
([Test "Insert terms", Index "DN", Gen "HR", Size "Size: 100 Runs: 1000"],
 0.633)
([Test "Content of net", Index "DN", Gen "HR", Size "Size: 100 Runs: 1000"],
 1.005)
([Test "Q: unifiables existing term", Index "DN", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.244)
([Test "Q: generalisations existing term", Index "DN", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.076)
([Test "Q: instances existing term", Index "DN", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.247)
([Test "Q: lookup existing term", Index "DN", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.090)
([Test "Delete terms", Index "DN", Gen "HR", Size "Size: 200 Runs: 100"],
 0.132)
([Test "Insert terms", Index "DN", Gen "HR", Size "Size: 200 Runs: 100"],
 0.109)
([Test "Content of net", Index "DN", Gen "HR", Size "Size: 200 Runs: 100"],
 1.916)
([Test "Q: unifiables existing term", Index "DN", Gen "HR",
  Size "Size: 500 Runs: 100"],
 1.623)
([Test "Q: generalisations existing term", Index "DN", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.358)
([Test "Q: instances existing term", Index "DN", Gen "HR",
  Size "Size: 500 Runs: 100"],
 1.444)
([Test "Q: lookup existing term", Index "DN", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.331)
([Test "Delete terms", Index "DN", Gen "HR", Size "Size: 500 Runs: 100"],
 0.355)
([Test "Insert terms", Index "DN", Gen "HR", Size "Size: 500 Runs: 100"],
 0.290)
([Test "Content of net", Index "DN", Gen "HR", Size "Size: 500 Runs: 100"],
 0.427)
([Test "Q: unifiables existing term", Index "DN", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.496)
([Test "Q: generalisations existing term", Index "DN", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.046)
([Test "Q: instances existing term", Index "DN", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.458)
([Test "Q: lookup existing term", Index "DN", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.054)
([Test "Delete terms", Index "DN", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.074)
([Test "Insert terms", Index "DN", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.061)
([Test "Content of net", Index "DN", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.089)
([Test "Q: unifiables existing term", Index "DN", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 3.393)
([Test "Q: generalisations existing term", Index "DN", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.098)
([Test "Q: instances existing term", Index "DN", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 4.166)
([Test "Q: lookup existing term", Index "DN", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.099)
([Test "Delete terms", Index "DN", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.126)
([Test "Insert terms", Index "DN", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.107)
([Test "Content of net", Index "DN", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.426)
([Test "Q: unifiables existing term", Index "DN", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.103)
([Test "Q: generalisations existing term", Index "DN", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.098)
([Test "Q: instances existing term", Index "DN", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.091)
([Test "Q: lookup existing term", Index "DN", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.084)
([Test "Delete terms", Index "DN", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.102)
([Test "Insert terms", Index "DN", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.086)
([Test "Content of net", Index "DN", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.095)
([Test "Q: unifiables existing term", Index "DN", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.141)
([Test "Q: generalisations existing term", Index "DN", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.102)
([Test "Q: instances existing term", Index "DN", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.168)
([Test "Q: lookup existing term", Index "DN", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.125)
([Test "Delete terms", Index "DN", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.187)
([Test "Insert terms", Index "DN", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.251)
([Test "Content of net", Index "DN", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.273)
([Test "Q: unifiables existing term", Index "DN", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.504)
([Test "Q: generalisations existing term", Index "DN", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.245)
([Test "Q: instances existing term", Index "DN", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.325)
([Test "Q: lookup existing term", Index "DN", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.275)
([Test "Delete terms", Index "DN", Gen "MR", Size "Size: 50 Runs: 1000"],
 7.672)
([Test "Insert terms", Index "DN", Gen "MR", Size "Size: 50 Runs: 1000"],
 0.251)
([Test "Content of net", Index "DN", Gen "MR", Size "Size: 50 Runs: 1000"],
 3.245)
([Test "Q: unifiables existing term", Index "DN", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.814)
([Test "Q: generalisations existing term", Index "DN", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.370)
([Test "Q: instances existing term", Index "DN", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.806)
([Test "Q: lookup existing term", Index "DN", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.407)
([Test "Delete terms", Index "DN", Gen "MR", Size "Size: 100 Runs: 1000"],
 0.619)
([Test "Insert terms", Index "DN", Gen "MR", Size "Size: 100 Runs: 1000"],
 0.556)
([Test "Content of net", Index "DN", Gen "MR", Size "Size: 100 Runs: 1000"],
 1.479)
([Test "Q: unifiables existing term", Index "DN", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.241)
([Test "Q: generalisations existing term", Index "DN", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.074)
([Test "Q: instances existing term", Index "DN", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.290)
([Test "Q: lookup existing term", Index "DN", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.130)
([Test "Delete terms", Index "DN", Gen "MR", Size "Size: 200 Runs: 100"],
 0.176)
([Test "Insert terms", Index "DN", Gen "MR", Size "Size: 200 Runs: 100"],
 0.139)
([Test "Content of net", Index "DN", Gen "MR", Size "Size: 200 Runs: 100"],
 0.176)
([Test "Q: unifiables existing term", Index "DN", Gen "MR",
  Size "Size: 500 Runs: 100"],
 1.372)
([Test "Q: generalisations existing term", Index "DN", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.322)
([Test "Q: instances existing term", Index "DN", Gen "MR",
  Size "Size: 500 Runs: 100"],
 1.691)
([Test "Q: lookup existing term", Index "DN", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.284)
([Test "Delete terms", Index "DN", Gen "MR", Size "Size: 500 Runs: 100"],
 0.425)
([Test "Insert terms", Index "DN", Gen "MR", Size "Size: 500 Runs: 100"],
 0.317)
([Test "Content of net", Index "DN", Gen "MR", Size "Size: 500 Runs: 100"],
 0.430)
([Test "Q: unifiables existing term", Index "DN", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 1.425)
([Test "Q: generalisations existing term", Index "DN", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.101)
([Test "Q: instances existing term", Index "DN", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.511)
([Test "Q: lookup existing term", Index "DN", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.080)
([Test "Delete terms", Index "DN", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.102)
([Test "Insert terms", Index "DN", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.088)
([Test "Content of net", Index "DN", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.088)
([Test "Q: unifiables existing term", Index "DN", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 3.271)
([Test "Q: generalisations existing term", Index "DN", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.086)
([Test "Q: instances existing term", Index "DN", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 4.254)
([Test "Q: lookup existing term", Index "DN", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.075)
([Test "Delete terms", Index "DN", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.128)
([Test "Insert terms", Index "DN", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.124)
([Test "Content of net", Index "DN", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.442)
([Test "Q: unifiables existing term", Index "DN", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.042)
([Test "Q: generalisations existing term", Index "DN", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.037)
([Test "Q: instances existing term", Index "DN", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.051)
([Test "Q: lookup existing term", Index "DN", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.045)
([Test "Delete terms", Index "DN", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.107)
([Test "Insert terms", Index "DN", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.093)
([Test "Content of net", Index "DN", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.097)
([Test "Q: unifiables existing term", Index "DN", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.142)
([Test "Q: generalisations existing term", Index "DN", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.101)
([Test "Q: instances existing term", Index "DN", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.165)
([Test "Q: lookup existing term", Index "DN", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.129)
([Test "Delete terms", Index "DN", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.191)
([Test "Insert terms", Index "DN", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.151)
([Test "Content of net", Index "DN", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.262)
([Test "Q: unifiables existing term", Index "DN", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.312)
([Test "Q: generalisations existing term", Index "DN", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.269)
([Test "Q: instances existing term", Index "DN", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.409)
([Test "Q: lookup existing term", Index "DN", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.203)
([Test "Delete terms", Index "DN", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.387)
([Test "Insert terms", Index "DN", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.281)
([Test "Content of net", Index "DN", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.461)
([Test "Q: unifiables existing term", Index "DN", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.806)
([Test "Q: generalisations existing term", Index "DN", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.377)
([Test "Q: instances existing term", Index "DN", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.819)
([Test "Q: lookup existing term", Index "DN", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.398)
([Test "Delete terms", Index "DN", Gen "LR", Size "Size: 100 Runs: 1000"],
 0.611)
([Test "Insert terms", Index "DN", Gen "LR", Size "Size: 100 Runs: 1000"],
 0.658)
([Test "Content of net", Index "DN", Gen "LR", Size "Size: 100 Runs: 1000"],
 0.887)
([Test "Q: unifiables existing term", Index "DN", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.244)
([Test "Q: generalisations existing term", Index "DN", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.074)
([Test "Q: instances existing term", Index "DN", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.244)
([Test "Q: lookup existing term", Index "DN", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.090)
([Test "Delete terms", Index "DN", Gen "LR", Size "Size: 200 Runs: 100"],
 0.200)
([Test "Insert terms", Index "DN", Gen "LR", Size "Size: 200 Runs: 100"],
 0.181)
([Test "Content of net", Index "DN", Gen "LR", Size "Size: 200 Runs: 100"],
 0.180)
([Test "Q: unifiables existing term", Index "DN", Gen "LR",
  Size "Size: 500 Runs: 100"],
 1.328)
([Test "Q: generalisations existing term", Index "DN", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.226)
([Test "Q: instances existing term", Index "DN", Gen "LR",
  Size "Size: 500 Runs: 100"],
 1.768)
([Test "Q: lookup existing term", Index "DN", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.256)
([Test "Delete terms", Index "DN", Gen "LR", Size "Size: 500 Runs: 100"],
 0.379)
([Test "Insert terms", Index "DN", Gen "LR", Size "Size: 500 Runs: 100"],
 0.388)
([Test "Content of net", Index "DN", Gen "LR", Size "Size: 500 Runs: 100"],
 10.234)
([Test "Q: unifiables existing term", Index "DN", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.493)
([Test "Q: generalisations existing term", Index "DN", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.047)
([Test "Q: instances existing term", Index "DN", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.457)
([Test "Q: lookup existing term", Index "DN", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.052)
([Test "Delete terms", Index "DN", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.105)
([Test "Insert terms", Index "DN", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.091)
([Test "Content of net", Index "DN", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.089)
([Test "Q: unifiables existing term", Index "DN", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 3.535)
([Test "Q: generalisations existing term", Index "DN", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.098)
([Test "Q: instances existing term", Index "DN", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 3.677)
([Test "Q: lookup existing term", Index "DN", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.103)
([Test "Delete terms", Index "DN", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.123)
([Test "Insert terms", Index "DN", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.106)
([Test "Content of net", Index "DN", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.450)
([Test "Q: unifiables existing term", Index "DN", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.103)
([Test "Q: generalisations existing term", Index "DN", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.098)
([Test "Q: instances existing term", Index "DN", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.091)
([Test "Q: lookup existing term", Index "DN", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.082)
([Test "Delete terms", Index "DN", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.097)
([Test "Insert terms", Index "DN", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.085)
([Test "Content of net", Index "DN", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.095)
([Test "Q: unifiables existing term", Index "DN", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.141)
([Test "Q: generalisations existing term", Index "DN", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.101)
([Test "Q: instances existing term", Index "DN", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.167)
([Test "Q: lookup existing term", Index "DN", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.124)
([Test "Delete terms", Index "DN", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.203)
([Test "Insert terms", Index "DN", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.243)
([Test "Content of net", Index "DN", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.272)
([Test "Q: unifiables existing term", Index "DN", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.501)
([Test "Q: generalisations existing term", Index "DN", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.227)
([Test "Q: instances existing term", Index "DN", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.360)
([Test "Q: lookup existing term", Index "DN", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.274)
([Test "Delete terms", Index "DN", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.317)
([Test "Insert terms", Index "DN", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.248)
([Test "Content of net", Index "DN", Gen "NR", Size "Size: 50 Runs: 1000"],
 2.881)
([Test "Q: unifiables existing term", Index "DN", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.819)
([Test "Q: generalisations existing term", Index "DN", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.374)
([Test "Q: instances existing term", Index "DN", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.808)
([Test "Q: lookup existing term", Index "DN", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.405)
([Test "Delete terms", Index "DN", Gen "NR", Size "Size: 100 Runs: 1000"],
 0.624)
([Test "Insert terms", Index "DN", Gen "NR", Size "Size: 100 Runs: 1000"],
 0.588)
([Test "Content of net", Index "DN", Gen "NR", Size "Size: 100 Runs: 1000"],
 1.309)
([Test "Q: unifiables existing term", Index "DN", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.249)
([Test "Q: generalisations existing term", Index "DN", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.076)
([Test "Q: instances existing term", Index "DN", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.248)
([Test "Q: lookup existing term", Index "DN", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.090)
([Test "Delete terms", Index "DN", Gen "NR", Size "Size: 200 Runs: 100"],
 0.133)
([Test "Insert terms", Index "DN", Gen "NR", Size "Size: 200 Runs: 100"],
 0.107)
([Test "Content of net", Index "DN", Gen "NR", Size "Size: 200 Runs: 100"],
 0.172)
([Test "Q: unifiables existing term", Index "DN", Gen "NR",
  Size "Size: 500 Runs: 100"],
 1.592)
([Test "Q: generalisations existing term", Index "DN", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.358)
([Test "Q: instances existing term", Index "DN", Gen "NR",
  Size "Size: 500 Runs: 100"],
 1.467)
([Test "Q: lookup existing term", Index "DN", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.331)
([Test "Delete terms", Index "DN", Gen "NR", Size "Size: 500 Runs: 100"],
 0.354)
([Test "Insert terms", Index "DN", Gen "NR", Size "Size: 500 Runs: 100"],
 0.286)
([Test "Content of net", Index "DN", Gen "NR", Size "Size: 500 Runs: 100"],
 2.872)
([Test "Q: unifiables existing term", Index "DN", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.490)
([Test "Q: generalisations existing term", Index "DN", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.046)
([Test "Q: instances existing term", Index "DN", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.457)
([Test "Q: lookup existing term", Index "DN", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.080)
([Test "Delete terms", Index "DN", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.102)
([Test "Insert terms", Index "DN", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.087)
([Test "Content of net", Index "DN", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.088)
([Test "Q: unifiables existing term", Index "DN", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 3.411)
([Test "Q: generalisations existing term", Index "DN", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.099)
([Test "Q: instances existing term", Index "DN", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 3.891)
([Test "Q: lookup existing term", Index "DN", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.087)
([Test "Delete terms", Index "DN", Gen "NR", Size "Size: 5000 Runs: 10"],
 0.121)
([Test "Insert terms", Index "DN", Gen "NR", Size "Size: 5000 Runs: 10"],
 0.136)
([Test "Content of net", Index "DN", Gen "NR", Size "Size: 5000 Runs: 10"],
 9.494)
([Test "Q: unifiables existing term", Index "PITT", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.106)
([Test "Q: generalisations existing term", Index "PITT", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.108)
([Test "Q: instances existing term", Index "PITT", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.079)
([Test "Q: lookup existing term", Index "PITT", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.082)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.095)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.007)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.239)
([Test "Q: generalisations existing term", Index "PITT", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.247)
([Test "Q: instances existing term", Index "PITT", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.169)
([Test "Q: lookup existing term", Index "PITT", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.172)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.204)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.021)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.337)
([Test "Q: generalisations existing term", Index "PITT", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.349)
([Test "Q: instances existing term", Index "PITT", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.232)
([Test "Q: lookup existing term", Index "PITT", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.237)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.287)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.035)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.006)
([Test "Q: unifiables existing term", Index "PITT", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 1.045)
([Test "Q: generalisations existing term", Index "PITT", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.826)
([Test "Q: instances existing term", Index "PITT", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.565)
([Test "Q: lookup existing term", Index "PITT", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.570)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Size: 100 Runs: 1000"],
 0.722)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Size: 100 Runs: 1000"],
 0.087)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.009)
([Test "Q: unifiables existing term", Index "PITT", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.200)
([Test "Q: generalisations existing term", Index "PITT", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.202)
([Test "Q: instances existing term", Index "PITT", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.142)
([Test "Q: lookup existing term", Index "PITT", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.141)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Size: 200 Runs: 100"],
 0.189)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Size: 200 Runs: 100"],
 0.029)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PITT", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.536)
([Test "Q: generalisations existing term", Index "PITT", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.523)
([Test "Q: instances existing term", Index "PITT", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.365)
([Test "Q: lookup existing term", Index "PITT", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.344)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Size: 500 Runs: 100"],
 0.492)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Size: 500 Runs: 100"],
 0.059)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: unifiables existing term", Index "PITT", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.218)
([Test "Q: generalisations existing term", Index "PITT", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.191)
([Test "Q: instances existing term", Index "PITT", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.141)
([Test "Q: lookup existing term", Index "PITT", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.114)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.183)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.025)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PITT", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 8.659)
([Test "Q: generalisations existing term", Index "PITT", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.387)
([Test "Q: instances existing term", Index "PITT", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.290)
([Test "Q: lookup existing term", Index "PITT", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.167)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.384)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.174)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "PITT", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.198)
([Test "Q: generalisations existing term", Index "PITT", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.199)
([Test "Q: instances existing term", Index "PITT", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.136)
([Test "Q: lookup existing term", Index "PITT", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.137)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.160)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.009)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 2.242)
([Test "Q: generalisations existing term", Index "PITT", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.489)
([Test "Q: instances existing term", Index "PITT", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.317)
([Test "Q: lookup existing term", Index "PITT", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.321)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.383)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.029)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.656)
([Test "Q: generalisations existing term", Index "PITT", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.661)
([Test "Q: instances existing term", Index "PITT", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 3.076)
([Test "Q: lookup existing term", Index "PITT", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.695)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.916)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.077)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.006)
([Test "Q: unifiables existing term", Index "PITT", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 1.657)
([Test "Q: generalisations existing term", Index "PITT", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 1.334)
([Test "Q: instances existing term", Index "PITT", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 1.133)
([Test "Q: lookup existing term", Index "PITT", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 1.149)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Size: 100 Runs: 1000"],
 9.884)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Size: 100 Runs: 1000"],
 0.168)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.009)
([Test "Q: unifiables existing term", Index "PITT", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.493)
([Test "Q: generalisations existing term", Index "PITT", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.495)
([Test "Q: instances existing term", Index "PITT", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.304)
([Test "Q: lookup existing term", Index "PITT", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.305)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Size: 200 Runs: 100"],
 0.420)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Size: 200 Runs: 100"],
 0.040)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PITT", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.818)
([Test "Q: generalisations existing term", Index "PITT", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.818)
([Test "Q: instances existing term", Index "PITT", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.542)
([Test "Q: lookup existing term", Index "PITT", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.537)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Size: 500 Runs: 100"],
 4.144)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Size: 500 Runs: 100"],
 0.111)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.257)
([Test "Q: generalisations existing term", Index "PITT", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.253)
([Test "Q: instances existing term", Index "PITT", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.175)
([Test "Q: lookup existing term", Index "PITT", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.170)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.261)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.034)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PITT", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.543)
([Test "Q: generalisations existing term", Index "PITT", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.487)
([Test "Q: instances existing term", Index "PITT", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.341)
([Test "Q: lookup existing term", Index "PITT", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.303)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.626)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.266)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.153)
([Test "Q: generalisations existing term", Index "PITT", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 1.669)
([Test "Q: instances existing term", Index "PITT", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.172)
([Test "Q: lookup existing term", Index "PITT", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.173)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.203)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.008)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.506)
([Test "Q: generalisations existing term", Index "PITT", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.508)
([Test "Q: instances existing term", Index "PITT", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.295)
([Test "Q: lookup existing term", Index "PITT", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.290)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.343)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.031)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.884)
([Test "Q: generalisations existing term", Index "PITT", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 1.897)
([Test "Q: instances existing term", Index "PITT", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.773)
([Test "Q: lookup existing term", Index "PITT", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.768)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Size: 50 Runs: 1000"],
 1.036)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.090)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.006)
([Test "Q: unifiables existing term", Index "PITT", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 1.885)
([Test "Q: generalisations existing term", Index "PITT", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 1.819)
([Test "Q: instances existing term", Index "PITT", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 1.151)
([Test "Q: lookup existing term", Index "PITT", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 1.126)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Size: 100 Runs: 1000"],
 2.907)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Size: 100 Runs: 1000"],
 0.130)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 0.008)
([Test "Q: unifiables existing term", Index "PITT", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.371)
([Test "Q: generalisations existing term", Index "PITT", Gen "LV",
  Size "Size: 200 Runs: 100"],
 3.184)
([Test "Q: instances existing term", Index "PITT", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.365)
([Test "Q: lookup existing term", Index "PITT", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.365)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Size: 200 Runs: 100"],
 0.475)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Size: 200 Runs: 100"],
 0.037)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PITT", Gen "LV",
  Size "Size: 500 Runs: 100"],
 1.547)
([Test "Q: generalisations existing term", Index "PITT", Gen "LV",
  Size "Size: 500 Runs: 100"],
 1.237)
([Test "Q: instances existing term", Index "PITT", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.746)
([Test "Q: lookup existing term", Index "PITT", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.739)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Size: 500 Runs: 100"],
 2.382)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Size: 500 Runs: 100"],
 0.152)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.342)
([Test "Q: generalisations existing term", Index "PITT", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.340)
([Test "Q: instances existing term", Index "PITT", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.241)
([Test "Q: lookup existing term", Index "PITT", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.240)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.356)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.047)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PITT", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 2.146)
([Test "Q: generalisations existing term", Index "PITT", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.541)
([Test "Q: instances existing term", Index "PITT", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.397)
([Test "Q: lookup existing term", Index "PITT", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.381)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.755)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.311)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "PITT", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.204)
([Test "Q: generalisations existing term", Index "PITT", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.204)
([Test "Q: instances existing term", Index "PITT", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.118)
([Test "Q: lookup existing term", Index "PITT", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.118)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.135)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.008)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.866)
([Test "Q: generalisations existing term", Index "PITT", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 4.133)
([Test "Q: instances existing term", Index "PITT", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.496)
([Test "Q: lookup existing term", Index "PITT", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.494)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.680)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.056)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 1.003)
([Test "Q: generalisations existing term", Index "PITT", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 1.345)
([Test "Q: instances existing term", Index "PITT", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.807)
([Test "Q: lookup existing term", Index "PITT", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.801)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Size: 50 Runs: 1000"],
 1.094)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Size: 50 Runs: 1000"],
 0.099)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.006)
([Test "Q: unifiables existing term", Index "PITT", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 2.064)
([Test "Q: generalisations existing term", Index "PITT", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 2.041)
([Test "Q: instances existing term", Index "PITT", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 1.228)
([Test "Q: lookup existing term", Index "PITT", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 1.226)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Size: 100 Runs: 1000"],
 4.148)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Size: 100 Runs: 1000"],
 0.161)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 0.008)
([Test "Q: unifiables existing term", Index "PITT", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.440)
([Test "Q: generalisations existing term", Index "PITT", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.436)
([Test "Q: instances existing term", Index "PITT", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.275)
([Test "Q: lookup existing term", Index "PITT", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.274)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Size: 200 Runs: 100"],
 0.356)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Size: 200 Runs: 100"],
 0.031)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PITT", Gen "NV",
  Size "Size: 500 Runs: 100"],
 1.274)
([Test "Q: generalisations existing term", Index "PITT", Gen "NV",
  Size "Size: 500 Runs: 100"],
 1.573)
([Test "Q: instances existing term", Index "PITT", Gen "NV",
  Size "Size: 500 Runs: 100"],
 1.043)
([Test "Q: lookup existing term", Index "PITT", Gen "NV",
  Size "Size: 500 Runs: 100"],
 1.037)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Size: 500 Runs: 100"],
 13.442)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Size: 500 Runs: 100"],
 0.153)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Size: 500 Runs: 100"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 1.921)
([Test "Q: generalisations existing term", Index "PITT", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.395)
([Test "Q: instances existing term", Index "PITT", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.286)
([Test "Q: lookup existing term", Index "PITT", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.287)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.416)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.054)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PITT", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.521)
([Test "Q: generalisations existing term", Index "PITT", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.511)
([Test "Q: instances existing term", Index "PITT", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.412)
([Test "Q: lookup existing term", Index "PITT", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.412)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Size: 5000 Runs: 10"],
 0.782)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Size: 5000 Runs: 10"],
 0.335)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "PITT", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.200)
([Test "Q: generalisations existing term", Index "PITT", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.201)
([Test "Q: instances existing term", Index "PITT", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.136)
([Test "Q: lookup existing term", Index "PITT", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.138)
([Test "Delete terms", Index "PITT", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.164)
([Test "Insert terms", Index "PITT", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.008)
([Test "Content of net", Index "PITT", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.377)
([Test "Q: generalisations existing term", Index "PITT", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 4.384)
([Test "Q: instances existing term", Index "PITT", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.492)
([Test "Q: lookup existing term", Index "PITT", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.498)
([Test "Delete terms", Index "PITT", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.644)
([Test "Insert terms", Index "PITT", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.046)
([Test "Content of net", Index "PITT", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PITT", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 1.217)
([Test "Q: generalisations existing term", Index "PITT", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 1.037)
([Test "Q: instances existing term", Index "PITT", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.602)
([Test "Q: lookup existing term", Index "PITT", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.602)
([Test "Delete terms", Index "PITT", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.819)
([Test "Insert terms", Index "PITT", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.074)
([Test "Content of net", Index "PITT", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.006)
([Test "Q: unifiables existing term", Index "PITT", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 1.422)
([Test "Q: generalisations existing term", Index "PITT", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 1.431)
([Test "Q: instances existing term", Index "PITT", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.908)
([Test "Q: lookup existing term", Index "PITT", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.909)
([Test "Delete terms", Index "PITT", Gen "HR", Size "Size: 100 Runs: 1000"],
 3.208)
([Test "Insert terms", Index "PITT", Gen "HR", Size "Size: 100 Runs: 1000"],
 0.166)
([Test "Content of net", Index "PITT", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.009)
([Test "Q: unifiables existing term", Index "PITT", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.319)
([Test "Q: generalisations existing term", Index "PITT", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.323)
([Test "Q: instances existing term", Index "PITT", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.210)
([Test "Q: lookup existing term", Index "PITT", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.209)
([Test "Delete terms", Index "PITT", Gen "HR", Size "Size: 200 Runs: 100"],
 0.273)
([Test "Insert terms", Index "PITT", Gen "HR", Size "Size: 200 Runs: 100"],
 0.027)
([Test "Content of net", Index "PITT", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PITT", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.905)
([Test "Q: generalisations existing term", Index "PITT", Gen "HR",
  Size "Size: 500 Runs: 100"],
 1.199)
([Test "Q: instances existing term", Index "PITT", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.755)
([Test "Q: lookup existing term", Index "PITT", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.740)
([Test "Delete terms", Index "PITT", Gen "HR", Size "Size: 500 Runs: 100"],
 1.096)
([Test "Insert terms", Index "PITT", Gen "HR", Size "Size: 500 Runs: 100"],
 0.112)
([Test "Content of net", Index "PITT", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.196)
([Test "Q: generalisations existing term", Index "PITT", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.194)
([Test "Q: instances existing term", Index "PITT", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.129)
([Test "Q: lookup existing term", Index "PITT", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 1.372)
([Test "Delete terms", Index "PITT", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.282)
([Test "Insert terms", Index "PITT", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.038)
([Test "Content of net", Index "PITT", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PITT", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.453)
([Test "Q: generalisations existing term", Index "PITT", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.427)
([Test "Q: instances existing term", Index "PITT", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.289)
([Test "Q: lookup existing term", Index "PITT", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.258)
([Test "Delete terms", Index "PITT", Gen "HR", Size "Size: 5000 Runs: 10"],
 2.620)
([Test "Insert terms", Index "PITT", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.274)
([Test "Content of net", Index "PITT", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.169)
([Test "Q: generalisations existing term", Index "PITT", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.172)
([Test "Q: instances existing term", Index "PITT", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.113)
([Test "Q: lookup existing term", Index "PITT", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.115)
([Test "Delete terms", Index "PITT", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.132)
([Test "Insert terms", Index "PITT", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.008)
([Test "Content of net", Index "PITT", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.417)
([Test "Q: generalisations existing term", Index "PITT", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.423)
([Test "Q: instances existing term", Index "PITT", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.261)
([Test "Q: lookup existing term", Index "PITT", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.262)
([Test "Delete terms", Index "PITT", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.311)
([Test "Insert terms", Index "PITT", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.028)
([Test "Content of net", Index "PITT", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.779)
([Test "Q: generalisations existing term", Index "PITT", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 1.014)
([Test "Q: instances existing term", Index "PITT", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.585)
([Test "Q: lookup existing term", Index "PITT", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.591)
([Test "Delete terms", Index "PITT", Gen "MR", Size "Size: 50 Runs: 1000"],
 10.372)
([Test "Insert terms", Index "PITT", Gen "MR", Size "Size: 50 Runs: 1000"],
 0.051)
([Test "Content of net", Index "PITT", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PITT", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 1.347)
([Test "Q: generalisations existing term", Index "PITT", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 1.328)
([Test "Q: instances existing term", Index "PITT", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.835)
([Test "Q: lookup existing term", Index "PITT", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.836)
([Test "Delete terms", Index "PITT", Gen "MR", Size "Size: 100 Runs: 1000"],
 2.564)
([Test "Insert terms", Index "PITT", Gen "MR", Size "Size: 100 Runs: 1000"],
 0.113)
([Test "Content of net", Index "PITT", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: unifiables existing term", Index "PITT", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.456)
([Test "Q: generalisations existing term", Index "PITT", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.457)
([Test "Q: instances existing term", Index "PITT", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.273)
([Test "Q: lookup existing term", Index "PITT", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.274)
([Test "Delete terms", Index "PITT", Gen "MR", Size "Size: 200 Runs: 100"],
 0.383)
([Test "Insert terms", Index "PITT", Gen "MR", Size "Size: 200 Runs: 100"],
 0.036)
([Test "Content of net", Index "PITT", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PITT", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.812)
([Test "Q: generalisations existing term", Index "PITT", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.815)
([Test "Q: instances existing term", Index "PITT", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.547)
([Test "Q: lookup existing term", Index "PITT", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.540)
([Test "Delete terms", Index "PITT", Gen "MR", Size "Size: 500 Runs: 100"],
 5.156)
([Test "Insert terms", Index "PITT", Gen "MR", Size "Size: 500 Runs: 100"],
 0.110)
([Test "Content of net", Index "PITT", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.276)
([Test "Q: generalisations existing term", Index "PITT", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.272)
([Test "Q: instances existing term", Index "PITT", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.189)
([Test "Q: lookup existing term", Index "PITT", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.184)
([Test "Delete terms", Index "PITT", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.280)
([Test "Insert terms", Index "PITT", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.038)
([Test "Content of net", Index "PITT", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PITT", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.438)
([Test "Q: generalisations existing term", Index "PITT", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.417)
([Test "Q: instances existing term", Index "PITT", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.281)
([Test "Q: lookup existing term", Index "PITT", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.259)
([Test "Delete terms", Index "PITT", Gen "MR", Size "Size: 5000 Runs: 10"],
 5.545)
([Test "Insert terms", Index "PITT", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.329)
([Test "Content of net", Index "PITT", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.258)
([Test "Q: generalisations existing term", Index "PITT", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.259)
([Test "Q: instances existing term", Index "PITT", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.163)
([Test "Q: lookup existing term", Index "PITT", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.165)
([Test "Delete terms", Index "PITT", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.206)
([Test "Insert terms", Index "PITT", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.010)
([Test "Content of net", Index "PITT", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.389)
([Test "Q: generalisations existing term", Index "PITT", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.396)
([Test "Q: instances existing term", Index "PITT", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.239)
([Test "Q: lookup existing term", Index "PITT", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.240)
([Test "Delete terms", Index "PITT", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.287)
([Test "Insert terms", Index "PITT", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.032)
([Test "Content of net", Index "PITT", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.628)
([Test "Q: generalisations existing term", Index "PITT", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.623)
([Test "Q: instances existing term", Index "PITT", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.376)
([Test "Q: lookup existing term", Index "PITT", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.376)
([Test "Delete terms", Index "PITT", Gen "LR", Size "Size: 50 Runs: 1000"],
 2.887)
([Test "Insert terms", Index "PITT", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.053)
([Test "Content of net", Index "PITT", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PITT", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 1.406)
([Test "Q: generalisations existing term", Index "PITT", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 1.411)
([Test "Q: instances existing term", Index "PITT", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.902)
([Test "Q: lookup existing term", Index "PITT", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 2.693)
([Test "Delete terms", Index "PITT", Gen "LR", Size "Size: 100 Runs: 1000"],
 1.681)
([Test "Insert terms", Index "PITT", Gen "LR", Size "Size: 100 Runs: 1000"],
 0.114)
([Test "Content of net", Index "PITT", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.008)
([Test "Q: unifiables existing term", Index "PITT", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.368)
([Test "Q: generalisations existing term", Index "PITT", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.373)
([Test "Q: instances existing term", Index "PITT", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.247)
([Test "Q: lookup existing term", Index "PITT", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.249)
([Test "Delete terms", Index "PITT", Gen "LR", Size "Size: 200 Runs: 100"],
 0.325)
([Test "Insert terms", Index "PITT", Gen "LR", Size "Size: 200 Runs: 100"],
 0.029)
([Test "Content of net", Index "PITT", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PITT", Gen "LR",
  Size "Size: 500 Runs: 100"],
 1.057)
([Test "Q: generalisations existing term", Index "PITT", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.899)
([Test "Q: instances existing term", Index "PITT", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.589)
([Test "Q: lookup existing term", Index "PITT", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.580)
([Test "Delete terms", Index "PITT", Gen "LR", Size "Size: 500 Runs: 100"],
 2.074)
([Test "Insert terms", Index "PITT", Gen "LR", Size "Size: 500 Runs: 100"],
 0.120)
([Test "Content of net", Index "PITT", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.264)
([Test "Q: generalisations existing term", Index "PITT", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.259)
([Test "Q: instances existing term", Index "PITT", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.179)
([Test "Q: lookup existing term", Index "PITT", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.175)
([Test "Delete terms", Index "PITT", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.266)
([Test "Insert terms", Index "PITT", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.035)
([Test "Content of net", Index "PITT", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PITT", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.486)
([Test "Q: generalisations existing term", Index "PITT", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.456)
([Test "Q: instances existing term", Index "PITT", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.309)
([Test "Q: lookup existing term", Index "PITT", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.278)
([Test "Delete terms", Index "PITT", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.559)
([Test "Insert terms", Index "PITT", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.243)
([Test "Content of net", Index "PITT", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "PITT", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.197)
([Test "Q: generalisations existing term", Index "PITT", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.200)
([Test "Q: instances existing term", Index "PITT", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.138)
([Test "Q: lookup existing term", Index "PITT", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.137)
([Test "Delete terms", Index "PITT", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.160)
([Test "Insert terms", Index "PITT", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.008)
([Test "Content of net", Index "PITT", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PITT", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 2.083)
([Test "Q: generalisations existing term", Index "PITT", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.478)
([Test "Q: instances existing term", Index "PITT", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.309)
([Test "Q: lookup existing term", Index "PITT", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.310)
([Test "Delete terms", Index "PITT", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.371)
([Test "Insert terms", Index "PITT", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.027)
([Test "Content of net", Index "PITT", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PITT", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.695)
([Test "Q: generalisations existing term", Index "PITT", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.729)
([Test "Q: instances existing term", Index "PITT", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.590)
([Test "Q: lookup existing term", Index "PITT", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.592)
([Test "Delete terms", Index "PITT", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.803)
([Test "Insert terms", Index "PITT", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.078)
([Test "Content of net", Index "PITT", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.006)
([Test "Q: unifiables existing term", Index "PITT", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 1.413)
([Test "Q: generalisations existing term", Index "PITT", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 1.454)
([Test "Q: instances existing term", Index "PITT", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.894)
([Test "Q: lookup existing term", Index "PITT", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.896)
([Test "Delete terms", Index "PITT", Gen "NR", Size "Size: 100 Runs: 1000"],
 2.286)
([Test "Insert terms", Index "PITT", Gen "NR", Size "Size: 100 Runs: 1000"],
 0.135)
([Test "Content of net", Index "PITT", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.009)
([Test "Q: unifiables existing term", Index "PITT", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.324)
([Test "Q: generalisations existing term", Index "PITT", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.325)
([Test "Q: instances existing term", Index "PITT", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.213)
([Test "Q: lookup existing term", Index "PITT", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.213)
([Test "Delete terms", Index "PITT", Gen "NR", Size "Size: 200 Runs: 100"],
 0.278)
([Test "Insert terms", Index "PITT", Gen "NR", Size "Size: 200 Runs: 100"],
 0.026)
([Test "Content of net", Index "PITT", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PITT", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.835)
([Test "Q: generalisations existing term", Index "PITT", Gen "NR",
  Size "Size: 500 Runs: 100"],
 2.362)
([Test "Q: instances existing term", Index "PITT", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.622)
([Test "Q: lookup existing term", Index "PITT", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.616)
([Test "Delete terms", Index "PITT", Gen "NR", Size "Size: 500 Runs: 100"],
 0.876)
([Test "Insert terms", Index "PITT", Gen "NR", Size "Size: 500 Runs: 100"],
 0.087)
([Test "Content of net", Index "PITT", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: unifiables existing term", Index "PITT", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.283)
([Test "Q: generalisations existing term", Index "PITT", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.273)
([Test "Q: instances existing term", Index "PITT", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.172)
([Test "Q: lookup existing term", Index "PITT", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.164)
([Test "Delete terms", Index "PITT", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.264)
([Test "Insert terms", Index "PITT", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.034)
([Test "Content of net", Index "PITT", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PITT", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.481)
([Test "Q: generalisations existing term", Index "PITT", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.444)
([Test "Q: instances existing term", Index "PITT", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.303)
([Test "Q: lookup existing term", Index "PITT", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.269)
([Test "Delete terms", Index "PITT", Gen "NR", Size "Size: 5000 Runs: 10"],
 0.545)
([Test "Insert terms", Index "PITT", Gen "NR", Size "Size: 5000 Runs: 10"],
 0.251)
([Test "Content of net", Index "PITT", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "PI_", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.107)
([Test "Q: generalisations existing term", Index "PI_", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.111)
([Test "Q: instances existing term", Index "PI_", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.080)
([Test "Q: lookup existing term", Index "PI_", Gen "HV",
  Size "Size: 10 Runs: 1000"],
 0.083)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.095)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.082)
([Test "Content of net", Index "PI_", Gen "HV", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.205)
([Test "Q: generalisations existing term", Index "PI_", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.213)
([Test "Q: instances existing term", Index "PI_", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.138)
([Test "Q: lookup existing term", Index "PI_", Gen "HV",
  Size "Size: 30 Runs: 1000"],
 0.141)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Size: 30 Runs: 1000"],
 2.774)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.283)
([Test "Content of net", Index "PI_", Gen "HV", Size "Size: 30 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.530)
([Test "Q: generalisations existing term", Index "PI_", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.546)
([Test "Q: instances existing term", Index "PI_", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.339)
([Test "Q: lookup existing term", Index "PI_", Gen "HV",
  Size "Size: 50 Runs: 1000"],
 0.348)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.498)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Size: 50 Runs: 1000"],
 8.977)
([Test "Content of net", Index "PI_", Gen "HV", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.771)
([Test "Q: generalisations existing term", Index "PI_", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.790)
([Test "Q: instances existing term", Index "PI_", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.533)
([Test "Q: lookup existing term", Index "PI_", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.546)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Size: 100 Runs: 1000"],
 2.394)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Size: 100 Runs: 1000"],
 0.608)
([Test "Content of net", Index "PI_", Gen "HV",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: unifiables existing term", Index "PI_", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.160)
([Test "Q: generalisations existing term", Index "PI_", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.165)
([Test "Q: instances existing term", Index "PI_", Gen "HV",
  Size "Size: 200 Runs: 100"],
 1.316)
([Test "Q: lookup existing term", Index "PI_", Gen "HV",
  Size "Size: 200 Runs: 100"],
 0.154)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Size: 200 Runs: 100"],
 0.252)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Size: 200 Runs: 100"],
 0.155)
([Test "Content of net", Index "PI_", Gen "HV", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.484)
([Test "Q: generalisations existing term", Index "PI_", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.488)
([Test "Q: instances existing term", Index "PI_", Gen "HV",
  Size "Size: 500 Runs: 100"],
 0.320)
([Test "Q: lookup existing term", Index "PI_", Gen "HV",
  Size "Size: 500 Runs: 100"],
 1.247)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Size: 500 Runs: 100"],
 0.828)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Size: 500 Runs: 100"],
 0.390)
([Test "Content of net", Index "PI_", Gen "HV", Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: unifiables existing term", Index "PI_", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.170)
([Test "Q: generalisations existing term", Index "PI_", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.159)
([Test "Q: instances existing term", Index "PI_", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.112)
([Test "Q: lookup existing term", Index "PI_", Gen "HV",
  Size "Size: 1000 Runs: 10"],
 0.101)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.323)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.126)
([Test "Content of net", Index "PI_", Gen "HV", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.369)
([Test "Q: generalisations existing term", Index "PI_", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.322)
([Test "Q: instances existing term", Index "PI_", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 1.163)
([Test "Q: lookup existing term", Index "PI_", Gen "HV",
  Size "Size: 5000 Runs: 10"],
 0.159)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Size: 5000 Runs: 10"],
 1.476)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.710)
([Test "Content of net", Index "PI_", Gen "HV", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "PI_", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.125)
([Test "Q: generalisations existing term", Index "PI_", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 1.443)
([Test "Q: instances existing term", Index "PI_", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.138)
([Test "Q: lookup existing term", Index "PI_", Gen "MV",
  Size "Size: 10 Runs: 1000"],
 0.139)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.163)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.138)
([Test "Content of net", Index "PI_", Gen "MV", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.367)
([Test "Q: generalisations existing term", Index "PI_", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.371)
([Test "Q: instances existing term", Index "PI_", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 2.530)
([Test "Q: lookup existing term", Index "PI_", Gen "MV",
  Size "Size: 30 Runs: 1000"],
 0.340)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.415)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.339)
([Test "Content of net", Index "PI_", Gen "MV", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PI_", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.755)
([Test "Q: generalisations existing term", Index "PI_", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.699)
([Test "Q: instances existing term", Index "PI_", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 0.436)
([Test "Q: lookup existing term", Index "PI_", Gen "MV",
  Size "Size: 50 Runs: 1000"],
 1.010)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.836)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.625)
([Test "Content of net", Index "PI_", Gen "MV", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 1.419)
([Test "Q: generalisations existing term", Index "PI_", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 1.480)
([Test "Q: instances existing term", Index "PI_", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.897)
([Test "Q: lookup existing term", Index "PI_", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.903)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Size: 100 Runs: 1000"],
 2.132)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Size: 100 Runs: 1000"],
 0.964)
([Test "Content of net", Index "PI_", Gen "MV",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: unifiables existing term", Index "PI_", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.290)
([Test "Q: generalisations existing term", Index "PI_", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.295)
([Test "Q: instances existing term", Index "PI_", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.189)
([Test "Q: lookup existing term", Index "PI_", Gen "MV",
  Size "Size: 200 Runs: 100"],
 0.191)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Size: 200 Runs: 100"],
 0.294)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Size: 200 Runs: 100"],
 0.199)
([Test "Content of net", Index "PI_", Gen "MV", Size "Size: 200 Runs: 100"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.857)
([Test "Q: generalisations existing term", Index "PI_", Gen "MV",
  Size "Size: 500 Runs: 100"],
 2.114)
([Test "Q: instances existing term", Index "PI_", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.748)
([Test "Q: lookup existing term", Index "PI_", Gen "MV",
  Size "Size: 500 Runs: 100"],
 0.741)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Size: 500 Runs: 100"],
 1.323)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Size: 500 Runs: 100"],
 0.668)
([Test "Content of net", Index "PI_", Gen "MV", Size "Size: 500 Runs: 100"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 1.463)
([Test "Q: generalisations existing term", Index "PI_", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.296)
([Test "Q: instances existing term", Index "PI_", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.187)
([Test "Q: lookup existing term", Index "PI_", Gen "MV",
  Size "Size: 1000 Runs: 10"],
 0.188)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.454)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.221)
([Test "Content of net", Index "PI_", Gen "MV", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.933)
([Test "Q: generalisations existing term", Index "PI_", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.451)
([Test "Q: instances existing term", Index "PI_", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.291)
([Test "Q: lookup existing term", Index "PI_", Gen "MV",
  Size "Size: 5000 Runs: 10"],
 0.273)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Size: 5000 Runs: 10"],
 1.697)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.849)
([Test "Content of net", Index "PI_", Gen "MV", Size "Size: 5000 Runs: 10"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.168)
([Test "Q: generalisations existing term", Index "PI_", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.164)
([Test "Q: instances existing term", Index "PI_", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.092)
([Test "Q: lookup existing term", Index "PI_", Gen "LV",
  Size "Size: 10 Runs: 1000"],
 0.093)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.103)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.162)
([Test "Content of net", Index "PI_", Gen "LV", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.482)
([Test "Q: generalisations existing term", Index "PI_", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.485)
([Test "Q: instances existing term", Index "PI_", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 2.114)
([Test "Q: lookup existing term", Index "PI_", Gen "LV",
  Size "Size: 30 Runs: 1000"],
 0.378)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.462)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.376)
([Test "Content of net", Index "PI_", Gen "LV", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PI_", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.860)
([Test "Q: generalisations existing term", Index "PI_", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 1.361)
([Test "Q: instances existing term", Index "PI_", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.703)
([Test "Q: lookup existing term", Index "PI_", Gen "LV",
  Size "Size: 50 Runs: 1000"],
 0.575)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.678)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.535)
([Test "Content of net", Index "PI_", Gen "LV", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 1.793)
([Test "Q: generalisations existing term", Index "PI_", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 1.922)
([Test "Q: instances existing term", Index "PI_", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 1.121)
([Test "Q: lookup existing term", Index "PI_", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 1.106)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Size: 100 Runs: 1000"],
 1.531)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Size: 100 Runs: 1000"],
 3.424)
([Test "Content of net", Index "PI_", Gen "LV",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: unifiables existing term", Index "PI_", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.371)
([Test "Q: generalisations existing term", Index "PI_", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.372)
([Test "Q: instances existing term", Index "PI_", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.235)
([Test "Q: lookup existing term", Index "PI_", Gen "LV",
  Size "Size: 200 Runs: 100"],
 0.236)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Size: 200 Runs: 100"],
 0.354)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Size: 200 Runs: 100"],
 0.247)
([Test "Content of net", Index "PI_", Gen "LV", Size "Size: 200 Runs: 100"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "LV",
  Size "Size: 500 Runs: 100"],
 1.175)
([Test "Q: generalisations existing term", Index "PI_", Gen "LV",
  Size "Size: 500 Runs: 100"],
 1.544)
([Test "Q: instances existing term", Index "PI_", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.917)
([Test "Q: lookup existing term", Index "PI_", Gen "LV",
  Size "Size: 500 Runs: 100"],
 0.750)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Size: 500 Runs: 100"],
 1.379)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Size: 500 Runs: 100"],
 2.772)
([Test "Content of net", Index "PI_", Gen "LV", Size "Size: 500 Runs: 100"],
 0.004)
([Test "Q: unifiables existing term", Index "PI_", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.246)
([Test "Q: generalisations existing term", Index "PI_", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.246)
([Test "Q: instances existing term", Index "PI_", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.165)
([Test "Q: lookup existing term", Index "PI_", Gen "LV",
  Size "Size: 1000 Runs: 10"],
 0.164)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.398)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Size: 1000 Runs: 10"],
 1.728)
([Test "Content of net", Index "PI_", Gen "LV", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.496)
([Test "Q: generalisations existing term", Index "PI_", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.492)
([Test "Q: instances existing term", Index "PI_", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.352)
([Test "Q: lookup existing term", Index "PI_", Gen "LV",
  Size "Size: 5000 Runs: 10"],
 0.340)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Size: 5000 Runs: 10"],
 3.164)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Size: 5000 Runs: 10"],
 1.057)
([Test "Content of net", Index "PI_", Gen "LV", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "PI_", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.281)
([Test "Q: generalisations existing term", Index "PI_", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.281)
([Test "Q: instances existing term", Index "PI_", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.184)
([Test "Q: lookup existing term", Index "PI_", Gen "NV",
  Size "Size: 10 Runs: 1000"],
 0.183)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.215)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.183)
([Test "Content of net", Index "PI_", Gen "NV", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.537)
([Test "Q: generalisations existing term", Index "PI_", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.532)
([Test "Q: instances existing term", Index "PI_", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.295)
([Test "Q: lookup existing term", Index "PI_", Gen "NV",
  Size "Size: 30 Runs: 1000"],
 0.294)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.362)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Size: 30 Runs: 1000"],
 4.089)
([Test "Content of net", Index "PI_", Gen "NV", Size "Size: 30 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PI_", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 1.360)
([Test "Q: generalisations existing term", Index "PI_", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 1.017)
([Test "Q: instances existing term", Index "PI_", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.667)
([Test "Q: lookup existing term", Index "PI_", Gen "NV",
  Size "Size: 50 Runs: 1000"],
 0.830)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Size: 50 Runs: 1000"],
 1.166)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Size: 50 Runs: 1000"],
 12.468)
([Test "Content of net", Index "PI_", Gen "NV", Size "Size: 50 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PI_", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 1.952)
([Test "Q: generalisations existing term", Index "PI_", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 2.784)
([Test "Q: instances existing term", Index "PI_", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 1.201)
([Test "Q: lookup existing term", Index "PI_", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 1.313)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Size: 100 Runs: 1000"],
 15.710)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Size: 100 Runs: 1000"],
 1.229)
([Test "Content of net", Index "PI_", Gen "NV",
  Size "Size: 100 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "NV",
  Size "Size: 200 Runs: 100"],
 6.905)
([Test "Q: generalisations existing term", Index "PI_", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.454)
([Test "Q: instances existing term", Index "PI_", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.288)
([Test "Q: lookup existing term", Index "PI_", Gen "NV",
  Size "Size: 200 Runs: 100"],
 0.287)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Size: 200 Runs: 100"],
 0.424)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Size: 200 Runs: 100"],
 0.299)
([Test "Content of net", Index "PI_", Gen "NV", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "NV",
  Size "Size: 500 Runs: 100"],
 1.249)
([Test "Q: generalisations existing term", Index "PI_", Gen "NV",
  Size "Size: 500 Runs: 100"],
 1.228)
([Test "Q: instances existing term", Index "PI_", Gen "NV",
  Size "Size: 500 Runs: 100"],
 0.804)
([Test "Q: lookup existing term", Index "PI_", Gen "NV",
  Size "Size: 500 Runs: 100"],
 0.800)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Size: 500 Runs: 100"],
 2.783)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Size: 500 Runs: 100"],
 0.937)
([Test "Content of net", Index "PI_", Gen "NV", Size "Size: 500 Runs: 100"],
 0.002)
([Test "Q: unifiables existing term", Index "PI_", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.273)
([Test "Q: generalisations existing term", Index "PI_", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.269)
([Test "Q: instances existing term", Index "PI_", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.187)
([Test "Q: lookup existing term", Index "PI_", Gen "NV",
  Size "Size: 1000 Runs: 10"],
 0.186)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Size: 1000 Runs: 10"],
 2.153)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.370)
([Test "Content of net", Index "PI_", Gen "NV", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 7.696)
([Test "Q: generalisations existing term", Index "PI_", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.809)
([Test "Q: instances existing term", Index "PI_", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.565)
([Test "Q: lookup existing term", Index "PI_", Gen "NV",
  Size "Size: 5000 Runs: 10"],
 0.565)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Size: 5000 Runs: 10"],
 2.689)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Size: 5000 Runs: 10"],
 1.502)
([Test "Content of net", Index "PI_", Gen "NV", Size "Size: 5000 Runs: 10"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.195)
([Test "Q: generalisations existing term", Index "PI_", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.199)
([Test "Q: instances existing term", Index "PI_", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.135)
([Test "Q: lookup existing term", Index "PI_", Gen "HR",
  Size "Size: 10 Runs: 1000"],
 0.135)
([Test "Delete terms", Index "PI_", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.160)
([Test "Insert terms", Index "PI_", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.134)
([Test "Content of net", Index "PI_", Gen "HR", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.394)
([Test "Q: generalisations existing term", Index "PI_", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 4.756)
([Test "Q: instances existing term", Index "PI_", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.493)
([Test "Q: lookup existing term", Index "PI_", Gen "HR",
  Size "Size: 30 Runs: 1000"],
 0.499)
([Test "Delete terms", Index "PI_", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.658)
([Test "Insert terms", Index "PI_", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.516)
([Test "Content of net", Index "PI_", Gen "HR", Size "Size: 30 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.865)
([Test "Q: generalisations existing term", Index "PI_", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 1.002)
([Test "Q: instances existing term", Index "PI_", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.572)
([Test "Q: lookup existing term", Index "PI_", Gen "HR",
  Size "Size: 50 Runs: 1000"],
 0.575)
([Test "Delete terms", Index "PI_", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.808)
([Test "Insert terms", Index "PI_", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.608)
([Test "Content of net", Index "PI_", Gen "HR", Size "Size: 50 Runs: 1000"],
 0.006)
([Test "Q: unifiables existing term", Index "PI_", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 1.374)
([Test "Q: generalisations existing term", Index "PI_", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 1.346)
([Test "Q: instances existing term", Index "PI_", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.821)
([Test "Q: lookup existing term", Index "PI_", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.819)
([Test "Delete terms", Index "PI_", Gen "HR", Size "Size: 100 Runs: 1000"],
 2.466)
([Test "Insert terms", Index "PI_", Gen "HR", Size "Size: 100 Runs: 1000"],
 0.921)
([Test "Content of net", Index "PI_", Gen "HR",
  Size "Size: 100 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.298)
([Test "Q: generalisations existing term", Index "PI_", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.301)
([Test "Q: instances existing term", Index "PI_", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.191)
([Test "Q: lookup existing term", Index "PI_", Gen "HR",
  Size "Size: 200 Runs: 100"],
 0.193)
([Test "Delete terms", Index "PI_", Gen "HR", Size "Size: 200 Runs: 100"],
 0.297)
([Test "Insert terms", Index "PI_", Gen "HR", Size "Size: 200 Runs: 100"],
 0.201)
([Test "Content of net", Index "PI_", Gen "HR", Size "Size: 200 Runs: 100"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "HR",
  Size "Size: 500 Runs: 100"],
 9.876)
([Test "Q: generalisations existing term", Index "PI_", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.850)
([Test "Q: instances existing term", Index "PI_", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.546)
([Test "Q: lookup existing term", Index "PI_", Gen "HR",
  Size "Size: 500 Runs: 100"],
 0.548)
([Test "Delete terms", Index "PI_", Gen "HR", Size "Size: 500 Runs: 100"],
 1.081)
([Test "Insert terms", Index "PI_", Gen "HR", Size "Size: 500 Runs: 100"],
 0.603)
([Test "Content of net", Index "PI_", Gen "HR", Size "Size: 500 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.262)
([Test "Q: generalisations existing term", Index "PI_", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.257)
([Test "Q: instances existing term", Index "PI_", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.175)
([Test "Q: lookup existing term", Index "PI_", Gen "HR",
  Size "Size: 1000 Runs: 10"],
 0.174)
([Test "Delete terms", Index "PI_", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.432)
([Test "Insert terms", Index "PI_", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.209)
([Test "Content of net", Index "PI_", Gen "HR", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.511)
([Test "Q: generalisations existing term", Index "PI_", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.478)
([Test "Q: instances existing term", Index "PI_", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.320)
([Test "Q: lookup existing term", Index "PI_", Gen "HR",
  Size "Size: 5000 Runs: 10"],
 0.295)
([Test "Delete terms", Index "PI_", Gen "HR", Size "Size: 5000 Runs: 10"],
 1.852)
([Test "Insert terms", Index "PI_", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.934)
([Test "Content of net", Index "PI_", Gen "HR", Size "Size: 5000 Runs: 10"],
 0.002)
([Test "Q: unifiables existing term", Index "PI_", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.185)
([Test "Q: generalisations existing term", Index "PI_", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.187)
([Test "Q: instances existing term", Index "PI_", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.127)
([Test "Q: lookup existing term", Index "PI_", Gen "MR",
  Size "Size: 10 Runs: 1000"],
 0.128)
([Test "Delete terms", Index "PI_", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.151)
([Test "Insert terms", Index "PI_", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.129)
([Test "Content of net", Index "PI_", Gen "MR", Size "Size: 10 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.357)
([Test "Q: generalisations existing term", Index "PI_", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.372)
([Test "Q: instances existing term", Index "PI_", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.221)
([Test "Q: lookup existing term", Index "PI_", Gen "MR",
  Size "Size: 30 Runs: 1000"],
 0.221)
([Test "Delete terms", Index "PI_", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.271)
([Test "Insert terms", Index "PI_", Gen "MR", Size "Size: 30 Runs: 1000"],
 4.033)
([Test "Content of net", Index "PI_", Gen "MR", Size "Size: 30 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.799)
([Test "Q: generalisations existing term", Index "PI_", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.998)
([Test "Q: instances existing term", Index "PI_", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.572)
([Test "Q: lookup existing term", Index "PI_", Gen "MR",
  Size "Size: 50 Runs: 1000"],
 0.576)
([Test "Delete terms", Index "PI_", Gen "MR", Size "Size: 50 Runs: 1000"],
 10.769)
([Test "Insert terms", Index "PI_", Gen "MR", Size "Size: 50 Runs: 1000"],
 0.511)
([Test "Content of net", Index "PI_", Gen "MR", Size "Size: 50 Runs: 1000"],
 0.005)
([Test "Q: unifiables existing term", Index "PI_", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 1.405)
([Test "Q: generalisations existing term", Index "PI_", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 1.403)
([Test "Q: instances existing term", Index "PI_", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.908)
([Test "Q: lookup existing term", Index "PI_", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.915)
([Test "Delete terms", Index "PI_", Gen "MR", Size "Size: 100 Runs: 1000"],
 1.251)
([Test "Insert terms", Index "PI_", Gen "MR", Size "Size: 100 Runs: 1000"],
 3.425)
([Test "Content of net", Index "PI_", Gen "MR",
  Size "Size: 100 Runs: 1000"],
 0.008)
([Test "Q: unifiables existing term", Index "PI_", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.292)
([Test "Q: generalisations existing term", Index "PI_", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.298)
([Test "Q: instances existing term", Index "PI_", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.195)
([Test "Q: lookup existing term", Index "PI_", Gen "MR",
  Size "Size: 200 Runs: 100"],
 0.197)
([Test "Delete terms", Index "PI_", Gen "MR", Size "Size: 200 Runs: 100"],
 0.300)
([Test "Insert terms", Index "PI_", Gen "MR", Size "Size: 200 Runs: 100"],
 0.205)
([Test "Content of net", Index "PI_", Gen "MR", Size "Size: 200 Runs: 100"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.950)
([Test "Q: generalisations existing term", Index "PI_", Gen "MR",
  Size "Size: 500 Runs: 100"],
 1.181)
([Test "Q: instances existing term", Index "PI_", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.776)
([Test "Q: lookup existing term", Index "PI_", Gen "MR",
  Size "Size: 500 Runs: 100"],
 0.777)
([Test "Delete terms", Index "PI_", Gen "MR", Size "Size: 500 Runs: 100"],
 9.390)
([Test "Insert terms", Index "PI_", Gen "MR", Size "Size: 500 Runs: 100"],
 0.791)
([Test "Content of net", Index "PI_", Gen "MR", Size "Size: 500 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.202)
([Test "Q: generalisations existing term", Index "PI_", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.197)
([Test "Q: instances existing term", Index "PI_", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.128)
([Test "Q: lookup existing term", Index "PI_", Gen "MR",
  Size "Size: 1000 Runs: 10"],
 0.128)
([Test "Delete terms", Index "PI_", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.338)
([Test "Insert terms", Index "PI_", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.765)
([Test "Content of net", Index "PI_", Gen "MR", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.492)
([Test "Q: generalisations existing term", Index "PI_", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.449)
([Test "Q: instances existing term", Index "PI_", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.289)
([Test "Q: lookup existing term", Index "PI_", Gen "MR",
  Size "Size: 5000 Runs: 10"],
 0.261)
([Test "Delete terms", Index "PI_", Gen "MR", Size "Size: 5000 Runs: 10"],
 1.613)
([Test "Insert terms", Index "PI_", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.820)
([Test "Content of net", Index "PI_", Gen "MR", Size "Size: 5000 Runs: 10"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.128)
([Test "Q: generalisations existing term", Index "PI_", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.130)
([Test "Q: instances existing term", Index "PI_", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.078)
([Test "Q: lookup existing term", Index "PI_", Gen "LR",
  Size "Size: 10 Runs: 1000"],
 0.078)
([Test "Delete terms", Index "PI_", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.090)
([Test "Insert terms", Index "PI_", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.079)
([Test "Content of net", Index "PI_", Gen "LR", Size "Size: 10 Runs: 1000"],
 0.002)
([Test "Q: unifiables existing term", Index "PI_", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.376)
([Test "Q: generalisations existing term", Index "PI_", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.377)
([Test "Q: instances existing term", Index "PI_", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.215)
([Test "Q: lookup existing term", Index "PI_", Gen "LR",
  Size "Size: 30 Runs: 1000"],
 0.215)
([Test "Delete terms", Index "PI_", Gen "LR", Size "Size: 30 Runs: 1000"],
 1.356)
([Test "Insert terms", Index "PI_", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.275)
([Test "Content of net", Index "PI_", Gen "LR", Size "Size: 30 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.608)
([Test "Q: generalisations existing term", Index "PI_", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.637)
([Test "Q: instances existing term", Index "PI_", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.384)
([Test "Q: lookup existing term", Index "PI_", Gen "LR",
  Size "Size: 50 Runs: 1000"],
 0.386)
([Test "Delete terms", Index "PI_", Gen "LR", Size "Size: 50 Runs: 1000"],
 1.524)
([Test "Insert terms", Index "PI_", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.438)
([Test "Content of net", Index "PI_", Gen "LR", Size "Size: 50 Runs: 1000"],
 0.004)
([Test "Q: unifiables existing term", Index "PI_", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 1.345)
([Test "Q: generalisations existing term", Index "PI_", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 1.379)
([Test "Q: instances existing term", Index "PI_", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.847)
([Test "Q: lookup existing term", Index "PI_", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 1.052)
([Test "Delete terms", Index "PI_", Gen "LR", Size "Size: 100 Runs: 1000"],
 1.422)
([Test "Insert terms", Index "PI_", Gen "LR", Size "Size: 100 Runs: 1000"],
 1.775)
([Test "Content of net", Index "PI_", Gen "LR",
  Size "Size: 100 Runs: 1000"],
 0.007)
([Test "Q: unifiables existing term", Index "PI_", Gen "LR",
  Size "Size: 200 Runs: 100"],
 4.302)
([Test "Q: generalisations existing term", Index "PI_", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.315)
([Test "Q: instances existing term", Index "PI_", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.204)
([Test "Q: lookup existing term", Index "PI_", Gen "LR",
  Size "Size: 200 Runs: 100"],
 0.206)
([Test "Delete terms", Index "PI_", Gen "LR", Size "Size: 200 Runs: 100"],
 0.314)
([Test "Insert terms", Index "PI_", Gen "LR", Size "Size: 200 Runs: 100"],
 0.214)
([Test "Content of net", Index "PI_", Gen "LR", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.806)
([Test "Q: generalisations existing term", Index "PI_", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.816)
([Test "Q: instances existing term", Index "PI_", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.693)
([Test "Q: lookup existing term", Index "PI_", Gen "LR",
  Size "Size: 500 Runs: 100"],
 0.550)
([Test "Delete terms", Index "PI_", Gen "LR", Size "Size: 500 Runs: 100"],
 1.080)
([Test "Insert terms", Index "PI_", Gen "LR", Size "Size: 500 Runs: 100"],
 0.597)
([Test "Content of net", Index "PI_", Gen "LR", Size "Size: 500 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.204)
([Test "Q: generalisations existing term", Index "PI_", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 1.033)
([Test "Q: instances existing term", Index "PI_", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.198)
([Test "Q: lookup existing term", Index "PI_", Gen "LR",
  Size "Size: 1000 Runs: 10"],
 0.195)
([Test "Delete terms", Index "PI_", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.479)
([Test "Insert terms", Index "PI_", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.235)
([Test "Content of net", Index "PI_", Gen "LR", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.449)
([Test "Q: generalisations existing term", Index "PI_", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.543)
([Test "Q: instances existing term", Index "PI_", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.290)
([Test "Q: lookup existing term", Index "PI_", Gen "LR",
  Size "Size: 5000 Runs: 10"],
 0.274)
([Test "Delete terms", Index "PI_", Gen "LR", Size "Size: 5000 Runs: 10"],
 1.821)
([Test "Insert terms", Index "PI_", Gen "LR", Size "Size: 5000 Runs: 10"],
 1.085)
([Test "Content of net", Index "PI_", Gen "LR", Size "Size: 5000 Runs: 10"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.123)
([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.235)
([Test "Q: instances existing term", Index "PI_", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.074)
([Test "Q: lookup existing term", Index "PI_", Gen "NR",
  Size "Size: 10 Runs: 1000"],
 0.075)
([Test "Delete terms", Index "PI_", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.086)
([Test "Insert terms", Index "PI_", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.076)
([Test "Content of net", Index "PI_", Gen "NR", Size "Size: 10 Runs: 1000"],
 0.002)
([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.379)
([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.507)
([Test "Q: instances existing term", Index "PI_", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.217)
([Test "Q: lookup existing term", Index "PI_", Gen "NR",
  Size "Size: 30 Runs: 1000"],
 0.219)
([Test "Delete terms", Index "PI_", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.441)
([Test "Insert terms", Index "PI_", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.232)
([Test "Content of net", Index "PI_", Gen "NR", Size "Size: 30 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.756)
([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.621)
([Test "Q: instances existing term", Index "PI_", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.383)
([Test "Q: lookup existing term", Index "PI_", Gen "NR",
  Size "Size: 50 Runs: 1000"],
 0.384)
([Test "Delete terms", Index "PI_", Gen "NR", Size "Size: 50 Runs: 1000"],
 1.080)
([Test "Insert terms", Index "PI_", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.426)
([Test "Content of net", Index "PI_", Gen "NR", Size "Size: 50 Runs: 1000"],
 0.003)
([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 1.470)
([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 1.491)
([Test "Q: instances existing term", Index "PI_", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.977)
([Test "Q: lookup existing term", Index "PI_", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.872)
([Test "Delete terms", Index "PI_", Gen "NR", Size "Size: 100 Runs: 1000"],
 1.480)
([Test "Insert terms", Index "PI_", Gen "NR", Size "Size: 100 Runs: 1000"],
 1.104)
([Test "Content of net", Index "PI_", Gen "NR",
  Size "Size: 100 Runs: 1000"],
 0.006)
([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.424)
([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.427)
([Test "Q: instances existing term", Index "PI_", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.216)
([Test "Q: lookup existing term", Index "PI_", Gen "NR",
  Size "Size: 200 Runs: 100"],
 0.205)
([Test "Delete terms", Index "PI_", Gen "NR", Size "Size: 200 Runs: 100"],
 0.314)
([Test "Insert terms", Index "PI_", Gen "NR", Size "Size: 200 Runs: 100"],
 0.210)
([Test "Content of net", Index "PI_", Gen "NR", Size "Size: 200 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.950)
([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.955)
([Test "Q: instances existing term", Index "PI_", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.625)
([Test "Q: lookup existing term", Index "PI_", Gen "NR",
  Size "Size: 500 Runs: 100"],
 0.639)
([Test "Delete terms", Index "PI_", Gen "NR", Size "Size: 500 Runs: 100"],
 1.470)
([Test "Insert terms", Index "PI_", Gen "NR", Size "Size: 500 Runs: 100"],
 0.690)
([Test "Content of net", Index "PI_", Gen "NR", Size "Size: 500 Runs: 100"],
 0.001)
([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.255)
([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.257)
([Test "Q: instances existing term", Index "PI_", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.187)
([Test "Q: lookup existing term", Index "PI_", Gen "NR",
  Size "Size: 1000 Runs: 10"],
 0.133)
([Test "Delete terms", Index "PI_", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.514)
([Test "Insert terms", Index "PI_", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.160)
([Test "Content of net", Index "PI_", Gen "NR", Size "Size: 1000 Runs: 10"],
 0.000)
([Test "Q: unifiables existing term", Index "PI_", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.579)
([Test "Q: generalisations existing term", Index "PI_", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.508)
([Test "Q: instances existing term", Index "PI_", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.347)
([Test "Q: lookup existing term", Index "PI_", Gen "NR",
  Size "Size: 5000 Runs: 10"],
 0.330)
([Test "Delete terms", Index "PI_", Gen "NR", Size "Size: 5000 Runs: 10"],
 1.939)
([Test "Insert terms", Index "PI_", Gen "NR", Size "Size: 5000 Runs: 10"],
 1.029)
([Test "Content of net", Index "PI_", Gen "NR", Size "Size: 5000 Runs: 10"],
 0.001)


Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
     PI_    PITT      DN     TT_    Test

   0.496   2.146   1.218     N/A	 Size: 5000 Runs: 10
   0.246   0.342   0.265     N/A	 Size: 1000 Runs: 10
   1.175   1.547   0.765     N/A	 Size: 500 Runs: 100
   0.371   0.371   0.158     N/A	 Size: 200 Runs: 100
   1.793   1.885   0.613     N/A	 Size: 100 Runs: 1000
   0.860   0.884   0.275     N/A	 Size: 50 Runs: 1000
   0.482   0.506   0.135     N/A	 Size: 30 Runs: 1000
   0.168   0.153   0.046     N/A	 Size: 10 Runs: 1000

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
     PI_    PITT      DN     TT_    All Indices Size 100

   0.007   0.008   1.679   0.008	 Content of net
   3.424   0.130   0.683   0.037	 Insert terms
   1.531   2.907   0.766   0.051	 Delete terms
   1.106   1.126   0.470   0.040	 Q: lookup existing term
   1.121   1.151   0.644	 Q: instances existing term
   1.922   1.819   0.452	 Q: generalisations existing term
   1.793   1.885   0.613	 Q: unifiables existing term

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
     PI_    PITT      DN     TT_    All Indices Size 1000

   0.019   0.021   3.858   0.020	 Content of net
   6.225   0.306  12.806   0.081	 Insert terms
   3.173   4.845   1.626   0.105	 Delete terms
   2.316   2.597   1.044   0.086	 Q: lookup existing term
   4.193   2.634   1.465	 Q: instances existing term
   4.178   6.235   0.938	 Q: generalisations existing term
   3.549   3.771   1.334	 Q: unifiables existing term

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
     PI_    PITT      DN     TT_    All Indices sum of all sizes

   0.025   0.028   5.622   0.026	 Content of net
  10.301   0.806  13.554   0.140	 Insert terms
   8.070   8.458   2.577   0.184	 Delete terms
   3.642   4.082   1.572   0.155	 Q: lookup existing term
   5.698   4.143   4.060	 Q: instances existing term
   6.587  11.197   1.431	 Q: generalisations existing term
   5.591   7.836   3.475	 Q: unifiables existing term

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
      NV      LV      MV      HV    Path Indexing

   4.458   3.642   3.785   2.780	 Q: lookup existing term
   4.189   5.698   5.417   4.001	 Q: instances existing term
   7.373   6.587   7.150   2.794	 Q: generalisations existing term
  20.253   5.591   6.209   2.795	 Q: unifiables existing term

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
      NR      LR      MR      HR      NV      LV      MV      HV    Discrimination Net

  17.182  12.659   6.230   4.699   5.979   5.622   3.487   1.465	 Content of net
   1.779   1.949   1.811   1.743   2.424  13.554   1.901   1.196	 Insert terms
   1.950   2.103   9.409   3.064   2.684   2.577   2.134   1.404	 Delete terms
   1.475   1.275   1.462   1.386   1.646   1.572   1.343   1.013	 Q: lookup existing term
   7.488   7.591   8.136   7.699   1.578   4.060   8.724  12.657	 Q: instances existing term
   1.381   1.229   1.399   1.273   1.421   1.431   1.248   0.882	 Q: generalisations existing term
   7.307   6.902   7.872   7.034   1.412   3.475   6.476  10.201	 Q: unifiables existing term

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
      NR      LR      MR      HR      NV      LV      MV      HV    Termtable

   0.024   0.023   0.023   0.025   0.025   0.026   0.023   0.024	 Content of net
   0.134   0.128   0.132   0.135   0.137   0.140   0.132   0.129	 Insert terms
   0.168   0.166   0.166   0.175   0.176   0.184   0.168   0.166	 Delete terms
   0.147   0.142   0.145   0.151   0.153   0.155   0.146   0.143	 Q: lookup existing term
     N/A     N/A     N/A     N/A     N/A     N/A     N/A     N/A	 Q: instances existing term
     N/A     N/A     N/A     N/A     N/A     N/A     N/A     N/A	 Q: generalisations existing term
     N/A     N/A     N/A     N/A     N/A     N/A     N/A     N/A	 Q: unifiables existing term

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
      NR      LR      MR      HR    Unifiables over Reuse

   4.936   8.217   4.682  13.774	 PI_
   6.311   4.857   4.695   5.089	 PITT
   7.307   6.902   7.872   7.034	 DN
     N/A     N/A     N/A     N/A	 TT_

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
      NV      LV      MV      HV    Unifiables over Variables

  20.253   5.591   6.209   2.795	 PI_
   8.294   7.836   6.863  11.340	 PITT
   1.412   3.475   6.476  10.201	 DN
     N/A     N/A     N/A     N/A	 TT_

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
      NV      LV      MV      HV    Lookup over Vars

   4.458   3.642   3.785   2.780	 PI_
   4.649   4.082   3.617   1.827	 PITT
   1.646   1.572   1.343   1.013	 DN
   0.153   0.155   0.146   0.143	 TT_

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
      NV      LV      MV      HV    Instances over Vars

   4.189   5.698   5.417   4.001	 PI_
   4.667   4.143   6.024   1.982	 PITT
   1.578   4.060   8.724  12.657	 DN
     N/A     N/A     N/A     N/A	 TT_

Output (line 153 of "/home/sewi/Documents/BT/bachelorthesis/src/Test.thy"):
      NV      LV      MV      HV    Generalisations over Vars

   7.373   6.587   7.150   2.794	 PI_
  10.638  11.197   4.736   2.833	 PITT
   1.421   1.431   1.248   0.882	 DN
     N/A     N/A     N/A     N/A	 TT_
