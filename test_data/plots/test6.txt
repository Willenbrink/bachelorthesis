
Theory "Path_Indexing.Test":

Warning (line 6 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 48 of "~/03_sebastian/bachelorthesis/src/util.ML"):
### Pattern is not exhaustive.

Output (line 6 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
val encode_type = fn: typ -> term
val apply_def = fn: ('a -> 'b) -> 'b -> 'a option -> 'b
val cross = fn: 'a list -> 'b list -> ('a * 'b) list
val lookup_all = fn: ('a * 'b -> bool) -> ('b * 'c) list -> 'a -> 'c list
val print_size = fn: string -> 'a -> unit
val check_termination = fn: int -> (unit -> 'a) -> 'a
val inters_orig = fn: ('a * 'a -> order) -> 'a list list -> 'a list
val inters = fn: ('a * 'a -> order) -> 'a list list -> 'a list
val inters' = fn: ('a * 'a -> order) -> 'a list list -> 'a list

Output (line 7 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
signature TERM_INDEX =
  sig
    exception DELETE
    exception INSERT
    type 'a T
    val content: 'a T -> 'a list
    val delete: ('a -> bool) -> term -> 'a T -> 'a T
    val delete_safe: ('a -> bool) -> term -> 'a T -> 'a T
    val empty: 'a T
    val generalisations: 'a T -> term -> 'a list
    val insert: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val insert_safe: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val instances: 'a T -> term -> 'a list
    val is_empty: 'a T -> bool
    val merge: ('a * 'a -> bool) -> 'a T -> 'a T -> 'a T
    val unifiables: 'a T -> term -> 'a list
    val variants: 'a T -> term -> 'a list
  end

Warning (line 8 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 32 of "~/03_sebastian/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 8 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 74 of "~/03_sebastian/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 8 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 103 of "~/03_sebastian/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 8 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 130 of "~/03_sebastian/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 8 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 145 of "~/03_sebastian/bachelorthesis/src/net.ML"):
### Value identifier (k) has not been referenced.

Warning (line 8 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 192 of "~/03_sebastian/bachelorthesis/src/net.ML"):
### Matches are not exhaustive.

Warning (line 8 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 205 of "~/03_sebastian/bachelorthesis/src/net.ML"):
### Value identifier (var) has not been referenced.

Output (line 8 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
structure NetIndex:
  sig
    exception DELETE
    exception INSERT
    datatype 'a T
    =
         Leaf of 'a list
       | Net of {atoms: 'a T Symtab.table, comb: 'a T, var: 'a T}
    val add_key_of_terms: term * key list -> key list
    val cons_fst: 'a -> 'a list * 'b -> 'a list * 'b
    val content: 'a T -> 'a list
    val delete: ('a -> bool) -> term -> 'a T -> 'a T
    val delete_safe: ('a -> bool) -> term -> 'a T -> 'a T
    val dest: 'a T -> (key list * 'a) list
    val empty: 'a T
    val emptynet: 'a T
    val extract_leaves: 'a T list -> 'a list
    val generalisations: 'a T -> term -> 'a list
    val insert: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val insert_key: ('a * 'a -> bool) -> 'a -> key list * 'a T -> 'a T
    val insert_safe: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val instances: 'a T -> term -> 'a list
    val is_empty: 'a T -> bool
    datatype key = AtomK of string | CombK | VarK
    val key_of_term: term -> key list
    val look1: 'a Symtab.table * Symtab.key -> 'a list -> 'a list
    val match_term: 'a T -> term -> 'a list
    val matching: bool -> term -> 'a T -> 'a T list -> 'a T list
    val merge: ('a * 'a -> bool) -> 'a T -> 'a T -> 'a T
    val net_skip: 'a T -> 'a T list -> 'a T list
    val newnet: {atoms: 'a T Symtab.table, comb: 'a T, var: 'a T} -> 'a T
    val query: key list -> 'a T -> 'a list
    val unifiables: 'a T -> term -> 'a list
    val unify_term: 'a T -> term -> 'a list
    val variants: 'a T -> term -> 'a list
    val variants_aux: 'a T -> key list -> 'a list
  end

Output (line 9 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
structure PathIndex:
  sig
    exception DELETE
    exception INSERT
    exception NoConstraint_exn
    structure Stab: TABLE
    type 'a T = int * (term * ('a * int) list) list * 'a tree
    val compute_set: (int * 'a) term_set -> (int * 'a) list
    val content: 'a * ('b * ('c * 'd) list) list * 'e -> 'c list
    type 'a content = (int * 'a) list
    val delete:
       ('a -> bool) ->
         term -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val delete_safe:
       ('a -> bool) ->
         term -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val empty: int * 'a list * 'b tree
    val empty_node: 'a tree
    val generalisations:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val insert:
       ('a * 'a -> bool) ->
         term * 'a -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val insert_safe:
       ('a * 'a -> bool) ->
         term * 'a -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val instances:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val is_empty: 'a * ('b * ('c * 'd) list) list * 'e -> bool
    val map_child:
       ('a -> 'b tree -> 'b tree) ->
         Stab.key * 'a list ->
           ('c list * 'b tree list) Stab.table ->
             ('c list * 'b tree list) Stab.table
    val merge:
       ('a * 'a -> bool) ->
         'a T -> 'b * (term * ('a * 'c) list) list * 'd -> 'a T
    val ord: (int * 'a) * (int * 'b) -> order
    val query: query_type -> term -> 'a tree -> (int * 'a) term_set
    datatype query_type
    = Generalisations | Instances | Unifiables | Variants
    val query_wrapper:
       query_type ->
         term -> 'a * ('b * ('c * 'd) list) list * 'c tree -> 'c list
    val sym_ord: symbol * symbol -> order
    datatype symbol = AtomS of string | VarS
    val symbol_of_term: term -> symbol
    datatype 'a term_set
    =
         Intersection of 'a term_set list
       | List of 'a list
       | NoConstraint
       | Union of 'a term_set list
    datatype 'a tree = Node of ('a content * 'a tree list) Stab.table
    val unifiables:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val variants:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
  end

Output (line 10 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
structure PathTT:
  sig
    exception DELETE
    exception INSERT
    exception NO_CONSTRAINT
    structure Symboltab: TABLE
    type 'a T = int * 'a content Termtab.table * 'a node
    val compute_set: (int * 'a) term_set -> (int * 'a) list
    val content: 'a * ('b * 'c) list Termtab.table * 'd -> 'c list
    type 'a content = (int * 'a) list
    val content_ord: (int * 'a) * (int * 'b) -> order
    val delete:
       ('a -> bool) ->
         Termtab.key ->
           'b * (int * 'a) list Termtab.table * 'c node ->
             'b * (int * 'a) list Termtab.table * 'c node
    val delete_safe:
       ('a -> bool) ->
         Termtab.key ->
           'b * (int * 'a) list Termtab.table * 'c node ->
             'b * (int * 'a) list Termtab.table * 'c node
    val empty: int * 'a Termtab.table * 'b node
    val empty_node: 'a node
    val generalisations:
       'a * ('b * 'c) list Termtab.table * 'c node -> term -> 'c list
    val insert:
       ('a * 'a -> bool) ->
         Termtab.key * 'a ->
           int * (int * 'a) list Termtab.table * 'a node ->
             int * (int * 'a) list Termtab.table * 'a node
    val insert_safe:
       ('a * 'a -> bool) ->
         Termtab.key * 'a ->
           int * (int * 'a) list Termtab.table * 'a node ->
             int * (int * 'a) list Termtab.table * 'a node
    val instances:
       'a * ('b * 'c) list Termtab.table * 'c node -> term -> 'c list
    val is_empty: 'a * ('b * 'c) list Termtab.table * 'd -> bool
    val map_args:
       ('a -> 'b node -> 'b node) -> 'a list -> 'b node list -> 'b node list
    val merge:
       ('a * 'a -> bool) ->
         int * (int * 'a) list Termtab.table * 'a node ->
           'b * ('c * 'a) list Termtab.table * 'd ->
             int * (int * 'a) list Termtab.table * 'a node
    datatype 'a node = Node of ('a content * 'a node list) Symboltab.table
    val query: query_type -> term -> 'a node -> (int * 'a) term_set
    datatype query_type
    = Generalisations | Instances | Unifiables | Variants
    val query_wrapper:
       query_type ->
         term -> 'a * ('b * 'c) list Termtab.table * 'c node -> 'c list
    datatype symbol = AtomS of string | VarS
    val symbol_of_term: term -> symbol
    val symbol_ord: symbol * symbol -> order
    datatype 'a term_set
    =
         Intersection of 'a term_set list
       | List of 'a list
       | NoConstraint
       | Union of 'a term_set list
    val unifiables:
       'a * ('b * 'c) list Termtab.table * 'c node -> term -> 'c list
    val variants:
       'a * ('b * 'c) list Termtab.table * 'c node -> term -> 'c list
  end

Warning (line 11 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 24 of "~/03_sebastian/bachelorthesis/src/termtab.ML"):
### Value identifier (x) has not been referenced.

Warning (line 11 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 24 of "~/03_sebastian/bachelorthesis/src/termtab.ML"):
### Value identifier (t) has not been referenced.

Warning (line 11 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 25 of "~/03_sebastian/bachelorthesis/src/termtab.ML"):
### Value identifier (x) has not been referenced.

Warning (line 11 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 25 of "~/03_sebastian/bachelorthesis/src/termtab.ML"):
### Value identifier (t) has not been referenced.

Warning (line 11 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 26 of "~/03_sebastian/bachelorthesis/src/termtab.ML"):
### Value identifier (x) has not been referenced.

Warning (line 11 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 26 of "~/03_sebastian/bachelorthesis/src/termtab.ML"):
### Value identifier (t) has not been referenced.

Output (line 11 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
structure TT_Index: TERM_INDEX

Output (line 12 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
structure Pprinter:
  sig
    val pterm: term -> Pretty.T
    val raw_pp_typ: typ -> Pretty.T
    val term_pat_setup: theory -> theory
    val type_pat_setup: theory -> theory
  end

Warning (line 13 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 51 of "~/03_sebastian/bachelorthesis/src/term_gen.ML"):
### Value identifier (i) has not been referenced.

Warning (line 13 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 53 of "~/03_sebastian/bachelorthesis/src/term_gen.ML"):
### Value identifier (i) has not been referenced.

Warning (line 13 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 55 of "~/03_sebastian/bachelorthesis/src/term_gen.ML"):
### Value identifier (i) has not been referenced.

Output (line 13 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
structure Term_Gen:
  sig
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val var_gen: int -> (term, Random.rand) gen_state
  end

Output (line 14 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
functor Net_Gen (Index: TERM_INDEX): 
  sig
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term Index.T * Random.rand
    val terms_in_net_gen:
       int ->
         (''a Index.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a Index.T) * Random.rand
    val terms_not_in_net_gen:
       (term, 'a) gen_state ->
         int ->
           ('b -> term Index.T * 'a) ->
             'b -> (term list * term Index.T) * 'a
  end

Warning (line 15 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (file "~/03_sebastian/bachelorthesis/src/tester.ML"):
### The type of (Tester().test_hol) contains a free type variable. Setting it to
###    a unique monotype.

Output (line 15 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
functor Tester (Index: TERM_INDEX): 
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term Index.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a Index.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a Index.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term Index.T * 'a) ->
                 'b -> (term list * term Index.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a Index.T -> 'a list
    val con_eq: term Index.T -> term Index.T -> bool
    val def_net_gen: Random.rand -> term Index.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term Index.T -> term Index.T
    val del': term -> term Index.T -> term Index.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
    val ins: term -> term Index.T -> term Index.T
    val ins': term -> term Index.T -> term Index.T
    val mem: term -> term Index.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term Index.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b Index.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term Index.T, Random.rand) gen_state ->
         Random.rand -> (term * term Index.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_not_in_net_gen:
       (term Index.T, Random.rand) gen_state ->
         Random.rand -> (term * term Index.T) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a Index.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a Index.T) * Random.rand
    val terms_not_in_net_gen:
       (term, 'a) gen_state ->
         int ->
           ('b -> term Index.T * 'a) ->
             'b -> (term list * term Index.T) * 'a
    val test: ('a -> 'b -> 'b) list -> 'a -> 'b -> 'b
    val test_all: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries_non_existing:
       (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
    val var_gen: int -> (term, Random.rand) gen_state
  end

Warning (line 16 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 64 of "~/03_sebastian/bachelorthesis/src/benchmark_util.ML"):
### Value identifier (ylabels) has not been referenced.

Warning (line 16 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 73 of "~/03_sebastian/bachelorthesis/src/benchmark_util.ML"):
### Value identifier (v) has not been referenced.

Output (line 16 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
datatype tag
= Gen of string | Index of string | Size of string | Test of string
constructor Gen: string -> tag
constructor Index: string -> tag
constructor Size: string -> tag
constructor Test: string -> tag
val string_of_tag = fn: tag -> string
val is_subtag = fn: tag -> tag -> bool
val exists_supertag = fn: tag * tag list -> bool
val sum_timings = fn: Timing.timing list -> Timing.timing option
val print_real = fn: real -> string
val get_table = fn:
   (tag list * 'a) list ->
     tag ->
       tag ->
         tag list * tag list *
         (tag * (tag * (tag list * 'a) list) list) list
val print_table = fn:
   string ->
     ('a list -> string) ->
       tag list * 'b * (tag * (tag * 'a list) list) list -> unit
val table = fn:
   (tag list * 'a) list ->
     ((tag list * 'a) list -> string) -> string -> tag -> tag -> unit
val print_values = fn: tag list -> (tag list * Time.time) list -> string
val print_timing = fn: Timing.timing -> string
val timer = fn:
   string -> ('a -> 'b) -> (Random.rand -> 'a * 'c) list -> tag * Time.time

Warning (line 17 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 24 of "~/03_sebastian/bachelorthesis/src/benchmark.ML"):
### Value identifier (net_list) has not been referenced.

Warning (line 17 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 34 of "~/03_sebastian/bachelorthesis/src/benchmark.ML"):
### Value identifier (net_list) has not been referenced.

Warning (line 17 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
### ML warning (line 95 of "~/03_sebastian/bachelorthesis/src/benchmark.ML"):
### Value identifier (t) has not been referenced.

Output (line 17 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
functor Benchmark (Index: TERM_INDEX): 
  sig
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term Index.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a Index.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a Index.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term Index.T * 'a) ->
                 'b -> (term list * term Index.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val benchmark:
       ((term Index.T * (term, 'a) gen_state) list ->
          (Random.rand -> (term list * term Index.T) * Random.rand) list ->
            ('a -> (term list * term Index.T) * 'a) list -> 'b list
       )
       list
         -> (term Index.T * (term, 'a) gen_state) list -> 'b list
    val benchmark_basic:
       ('a Index.T * 'b) list ->
         (Random.rand -> (term list * term Index.T) * 'c) list ->
           (Random.rand -> (term list * term Index.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_queries:
       'a ->
         (Random.rand -> (term list * 'b Index.T) * Random.rand) list ->
           (Random.rand -> (term list * 'c Index.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_variants:
       'a ->
         (Random.rand -> (term list * 'b Index.T) * 'c) list ->
           (Random.rand -> (term list * 'd Index.T) * 'e) list ->
             (tag * Time.time) list
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term Index.T * 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val var_gen: int -> (term, Random.rand) gen_state
  end

Output (line 19 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
val type_pat_setup = fn: theory -> theory
val term_pat_setup = fn: theory -> theory
val pterm = fn: term -> Pretty.T
val raw_pp_typ = fn: typ -> Pretty.T
val symbol_gen = fn:
   (int * 'a -> bool) ->
     int * int ->
       (int -> (term, Random.rand) gen_state) ->
         int -> 'a -> Random.rand -> (term * int) * Random.rand
val term_with_var = fn:
   int -> int -> int -> int * int -> (term, Random.rand) gen_state
val term_unif_gen = fn:
   ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
val aterm = fn: int -> int * int * int -> term Gen_Types.gen
val var_gen = fn: int -> (term, Random.rand) gen_state
val term_gen_def = fn: int -> Random.rand -> term * Random.rand
val term_gen = fn:
   int * int * int ->
     int ->
       (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
val replace_subterm = fn:
   (Random.rand -> term * 'a) -> term -> Random.rand -> term * Random.rand
val term_instance_gen = fn:
   ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
val term_ground = fn:
   int -> int -> int * int -> (term, Random.rand) gen_state
val add_aterm_name_suffix = fn: string -> term -> term
val replace_subterm_aux = fn:
   (Random.rand -> term * 'a) -> term -> Random.rand -> term * Random.rand
val term_var_reuse = fn:
   int -> int -> int * int -> (term, Random.rand) gen_state

Output (line 25 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
structure G:
  sig
    val aterm:
       term gen ->
         term gen ->
           term gen -> term gen -> int * int * int * int -> term gen
    val aterm': int gen -> int gen -> int * int * int * int -> term gen
    val atyp: typ gen -> typ gen -> int * int -> typ gen
    val atyp': int gen -> int gen -> int * int -> typ gen
    val basic_name: string -> int gen -> string gen
    val bernoulli: real -> bool gen
    val binom_dist: real -> int -> int gen
    val bound: (int, 'a) gen_state -> (term, 'a) gen_state
    val char: char gen
    val char_of: string -> char gen
    val cobool: (bool, 'a) cogen
    val cochar: (char, 'a) cogen
    type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
    type ('a, 'b, 'c) cogen_state =
       'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
    val coint: (int, 'a) cogen
    val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
    val const:
       (string, 'a) gen_state -> (typ, 'a) gen_state -> (term, 'a) gen_state
    val const': int gen -> term gen
    val const_name: int gen -> string gen
    val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
    val costring: (string, 'a) cogen
    val cosubstring: (substring, 'a) cogen
    val digit: char gen
    val dummyS: (sort, 'a) gen_state
    val dummyT: (typ, 'a) gen_state
    val elements: 'a vector -> 'a gen
    val elementsL: 'a list -> 'a gen
    val elementsW: (int * 'a) vector -> 'a gen
    val elementsWL: (int * 'a) list -> 'a gen
    val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
    val filter_bounded:
       int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
    val free:
       (string, 'a) gen_state -> (typ, 'a) gen_state -> (term, 'a) gen_state
    val free': int gen -> term gen
    val free_name: int gen -> string gen
    val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
    val function': 'a gen -> (''b -> 'a) gen
    type 'a gen = ('a, Random.rand) gen_state
    type ('a, 'b) gen_state = 'b -> 'a * 'b
    val indexname:
       (string, 'a) gen_state ->
         (int, 'a) gen_state -> (indexname, 'a) gen_state
    val letter: char gen
    val lift: 'a -> ('a, 'b) gen_state
    val list:
       (int, 'a) gen_state -> ('b, 'a) gen_state -> ('b list, 'a) gen_state
    val lowercase_letter: char gen
    val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
    val map2:
       ('a -> 'b -> 'c) ->
         ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
    val map3:
       ('a -> 'b -> 'c -> 'd) ->
         ('a, 'e) gen_state ->
           ('b, 'e) gen_state -> ('c, 'e) gen_state -> ('d, 'e) gen_state
    val map4:
       ('a -> 'b -> 'c -> 'd -> 'e) ->
         ('a, 'f) gen_state ->
           ('b, 'f) gen_state ->
             ('c, 'f) gen_state -> ('d, 'f) gen_state -> ('e, 'f) gen_state
    val neg: int -> int gen
    val nonneg: int -> int gen
    val nonpos: int -> int gen
    val of_seq: ('a option, 'a Seq.seq) gen_state
    val one_of: 'a gen vector -> 'a gen
    val one_ofL: 'a gen list -> 'a gen
    val one_ofW: (int * 'a gen) vector -> 'a gen
    val one_ofWL: (int * 'a gen) list -> 'a gen
    val option:
       (bool, 'a) gen_state ->
         ('b, 'a) gen_state -> ('b option, 'a) gen_state
    val pos: int -> int gen
    val range_char: char * char -> char gen
    val range_int: int * int -> int gen
    val range_real: real * real -> real gen
    val real: real gen
    val real_finite: real gen
    val real_neg: real gen
    val real_nonneg: real gen
    val real_nonpos: real gen
    val real_pos: real gen
    val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
    val seq: ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
    val shuffle: 'a list -> 'a list gen
    val sort:
       (int, 'a) gen_state -> (class, 'a) gen_state -> (sort, 'a) gen_state
    val string: int gen -> char gen -> string gen
    val substring: string gen -> substring gen
    val term_tree:
       (int -> int -> (term * int, 'a) gen_state) -> (term, 'a) gen_state
    val term_tree_path:
       ((term * int) list -> (term * int, 'a) gen_state) ->
         (term, 'a) gen_state
    val tfree:
       (string, 'a) gen_state -> (sort, 'a) gen_state -> (typ, 'a) gen_state
    val tfree': int gen -> typ gen
    val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
    val tfree_name': int gen -> string gen
    val tvar:
       (indexname, 'a) gen_state ->
         (sort, 'a) gen_state -> (typ, 'a) gen_state
    val tvar': int gen -> int gen -> typ gen
    val tvar_name: (indexname, 'a) gen_state -> (indexname, 'a) gen_state
    val tvar_name': int gen -> int gen -> indexname gen
    val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
    val typ':
       int gen ->
         int gen -> typ gen -> typ gen -> int * int * int -> typ gen
    val typ'': int gen -> int gen -> int gen -> int * int * int -> typ gen
    val type':
       string gen ->
         int gen -> typ gen -> typ gen -> int * int * int -> typ gen
    val type'':
       int gen ->
         int gen -> typ gen -> typ gen -> int * int * int -> typ gen
    val type_name: int gen -> string gen
    val unfold_while:
       ('a -> (bool, 'b) gen_state) ->
         ('a, 'b) gen_state -> ('a list, 'b) gen_state
    val unit: (unit, 'a) gen_state
    val uppercase_letter: char gen
    val var:
       (indexname, 'a) gen_state ->
         (typ, 'a) gen_state -> (term, 'a) gen_state
    val var': int gen -> int gen -> term gen
    val var_name: int gen -> int gen -> indexname gen
    val variant: (int, 'a) cogen
    val vector:
       (int, 'a) gen_state ->
         ('b, 'a) gen_state -> ('b vector, 'a) gen_state
    val zip:
       ('a, 'b) gen_state -> ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
    val zip3:
       ('a, 'b) gen_state ->
         ('c, 'b) gen_state ->
           ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
    val zip4:
       ('a, 'b) gen_state ->
         ('c, 'b) gen_state ->
           ('d, 'b) gen_state ->
             ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
  end
structure N:
  sig
    exception DELETE
    exception INSERT
    datatype 'a T
    =
         Leaf of 'a list
       | Net of {atoms: 'a T Symtab.table, comb: 'a T, var: 'a T}
    val add_key_of_terms: term * key list -> key list
    val cons_fst: 'a -> 'a list * 'b -> 'a list * 'b
    val content: 'a T -> 'a list
    val delete: ('a -> bool) -> term -> 'a T -> 'a T
    val delete_safe: ('a -> bool) -> term -> 'a T -> 'a T
    val dest: 'a T -> (key list * 'a) list
    val empty: 'a T
    val emptynet: 'a T
    val extract_leaves: 'a T list -> 'a list
    val generalisations: 'a T -> term -> 'a list
    val insert: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val insert_key: ('a * 'a -> bool) -> 'a -> key list * 'a T -> 'a T
    val insert_safe: ('a * 'a -> bool) -> term * 'a -> 'a T -> 'a T
    val instances: 'a T -> term -> 'a list
    val is_empty: 'a T -> bool
    datatype key = AtomK of string | CombK | VarK
    val key_of_term: term -> key list
    val look1: 'a Symtab.table * Symtab.key -> 'a list -> 'a list
    val match_term: 'a T -> term -> 'a list
    val matching: bool -> term -> 'a T -> 'a T list -> 'a T list
    val merge: ('a * 'a -> bool) -> 'a T -> 'a T -> 'a T
    val net_skip: 'a T -> 'a T list -> 'a T list
    val newnet: {atoms: 'a T Symtab.table, comb: 'a T, var: 'a T} -> 'a T
    val query: key list -> 'a T -> 'a list
    val unifiables: 'a T -> term -> 'a list
    val unify_term: 'a T -> term -> 'a list
    val variants: 'a T -> term -> 'a list
    val variants_aux: 'a T -> key list -> 'a list
  end
structure P:
  sig
    exception DELETE
    exception INSERT
    exception NoConstraint_exn
    structure Stab: TABLE
    type 'a T = int * (term * ('a * int) list) list * 'a tree
    val compute_set: (int * 'a) term_set -> (int * 'a) list
    val content: 'a * ('b * ('c * 'd) list) list * 'e -> 'c list
    type 'a content = (int * 'a) list
    val delete:
       ('a -> bool) ->
         term -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val delete_safe:
       ('a -> bool) ->
         term -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val empty: int * 'a list * 'b tree
    val empty_node: 'a tree
    val generalisations:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val insert:
       ('a * 'a -> bool) ->
         term * 'a -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val insert_safe:
       ('a * 'a -> bool) ->
         term * 'a -> 'a T -> int * (term * ('a * int) list) list * 'a tree
    val instances:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val is_empty: 'a * ('b * ('c * 'd) list) list * 'e -> bool
    val map_child:
       ('a -> 'b tree -> 'b tree) ->
         Stab.key * 'a list ->
           ('c list * 'b tree list) Stab.table ->
             ('c list * 'b tree list) Stab.table
    val merge:
       ('a * 'a -> bool) ->
         'a T -> 'b * (term * ('a * 'c) list) list * 'd -> 'a T
    val ord: (int * 'a) * (int * 'b) -> order
    val query: query_type -> term -> 'a tree -> (int * 'a) term_set
    datatype query_type
    = Generalisations | Instances | Unifiables | Variants
    val query_wrapper:
       query_type ->
         term -> 'a * ('b * ('c * 'd) list) list * 'c tree -> 'c list
    val sym_ord: symbol * symbol -> order
    datatype symbol = AtomS of string | VarS
    val symbol_of_term: term -> symbol
    datatype 'a term_set
    =
         Intersection of 'a term_set list
       | List of 'a list
       | NoConstraint
       | Union of 'a term_set list
    datatype 'a tree = Node of ('a content * 'a tree list) Stab.table
    val unifiables:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
    val variants:
       'a * ('b * ('c * 'd) list) list * 'c tree -> term -> 'c list
  end
structure PTT:
  sig
    exception DELETE
    exception INSERT
    exception NO_CONSTRAINT
    structure Symboltab: TABLE
    type 'a T = int * 'a content Termtab.table * 'a node
    val compute_set: (int * 'a) term_set -> (int * 'a) list
    val content: 'a * ('b * 'c) list Termtab.table * 'd -> 'c list
    type 'a content = (int * 'a) list
    val content_ord: (int * 'a) * (int * 'b) -> order
    val delete:
       ('a -> bool) ->
         Termtab.key ->
           'b * (int * 'a) list Termtab.table * 'c node ->
             'b * (int * 'a) list Termtab.table * 'c node
    val delete_safe:
       ('a -> bool) ->
         Termtab.key ->
           'b * (int * 'a) list Termtab.table * 'c node ->
             'b * (int * 'a) list Termtab.table * 'c node
    val empty: int * 'a Termtab.table * 'b node
    val empty_node: 'a node
    val generalisations:
       'a * ('b * 'c) list Termtab.table * 'c node -> term -> 'c list
    val insert:
       ('a * 'a -> bool) ->
         Termtab.key * 'a ->
           int * (int * 'a) list Termtab.table * 'a node ->
             int * (int * 'a) list Termtab.table * 'a node
    val insert_safe:
       ('a * 'a -> bool) ->
         Termtab.key * 'a ->
           int * (int * 'a) list Termtab.table * 'a node ->
             int * (int * 'a) list Termtab.table * 'a node
    val instances:
       'a * ('b * 'c) list Termtab.table * 'c node -> term -> 'c list
    val is_empty: 'a * ('b * 'c) list Termtab.table * 'd -> bool
    val map_args:
       ('a -> 'b node -> 'b node) -> 'a list -> 'b node list -> 'b node list
    val merge:
       ('a * 'a -> bool) ->
         int * (int * 'a) list Termtab.table * 'a node ->
           'b * ('c * 'a) list Termtab.table * 'd ->
             int * (int * 'a) list Termtab.table * 'a node
    datatype 'a node = Node of ('a content * 'a node list) Symboltab.table
    val query: query_type -> term -> 'a node -> (int * 'a) term_set
    datatype query_type
    = Generalisations | Instances | Unifiables | Variants
    val query_wrapper:
       query_type ->
         term -> 'a * ('b * 'c) list Termtab.table * 'c node -> 'c list
    datatype symbol = AtomS of string | VarS
    val symbol_of_term: term -> symbol
    val symbol_ord: symbol * symbol -> order
    datatype 'a term_set
    =
         Intersection of 'a term_set list
       | List of 'a list
       | NoConstraint
       | Union of 'a term_set list
    val unifiables:
       'a * ('b * 'c) list Termtab.table * 'c node -> term -> 'c list
    val variants:
       'a * ('b * 'c) list Termtab.table * 'c node -> term -> 'c list
  end
structure TT: TERM_INDEX
structure NetTest:
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term NetIndex.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term NetIndex.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a NetIndex.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a NetIndex.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term NetIndex.T * 'a) ->
                 'b -> (term list * term NetIndex.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a NetIndex.T -> 'a list
    val con_eq: term NetIndex.T -> term NetIndex.T -> bool
    val def_net_gen: Random.rand -> term NetIndex.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term NetIndex.T -> term NetIndex.T
    val del': term -> term NetIndex.T -> term NetIndex.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term NetIndex.T * 'a
    val ins: term -> term NetIndex.T -> term NetIndex.T
    val ins': term -> term NetIndex.T -> term NetIndex.T
    val mem: term -> term NetIndex.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term NetIndex.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b NetIndex.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term NetIndex.T, Random.rand) gen_state ->
         Random.rand -> (term * term NetIndex.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_not_in_net_gen:
       (term NetIndex.T, Random.rand) gen_state ->
         Random.rand -> (term * term NetIndex.T) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a NetIndex.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a NetIndex.T) * Random.rand
    val terms_not_in_net_gen:
       (term, 'a) gen_state ->
         int ->
           ('b -> term NetIndex.T * 'a) ->
             'b -> (term list * term NetIndex.T) * 'a
    val test: ('a -> 'b -> 'b) list -> 'a -> 'b -> 'b
    val test_all: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries_non_existing:
       (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
    val var_gen: int -> (term, Random.rand) gen_state
  end
val eq = fn: term * term -> bool
structure PathTest:
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term PathIndex.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term PathIndex.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a PathIndex.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a PathIndex.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term PathIndex.T * 'a) ->
                 'b -> (term list * term PathIndex.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a PathIndex.T -> 'a list
    val con_eq: term PathIndex.T -> term PathIndex.T -> bool
    val def_net_gen: Random.rand -> term PathIndex.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term PathIndex.T -> term PathIndex.T
    val del': term -> term PathIndex.T -> term PathIndex.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathIndex.T * 'a
    val ins: term -> term PathIndex.T -> term PathIndex.T
    val ins': term -> term PathIndex.T -> term PathIndex.T
    val mem: term -> term PathIndex.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term PathIndex.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b PathIndex.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term PathIndex.T, Random.rand) gen_state ->
         Random.rand -> (term * term PathIndex.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_not_in_net_gen:
       (term PathIndex.T, Random.rand) gen_state ->
         Random.rand -> (term * term PathIndex.T) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a PathIndex.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a PathIndex.T) * Random.rand
    val terms_not_in_net_gen:
       (term, 'a) gen_state ->
         int ->
           ('b -> term PathIndex.T * 'a) ->
             'b -> (term list * term PathIndex.T) * 'a
    val test: ('a -> 'b -> 'b) list -> 'a -> 'b -> 'b
    val test_all: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries_non_existing:
       (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
    val var_gen: int -> (term, Random.rand) gen_state
  end
structure PathTTTest:
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathTT.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term PathTT.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a PathTT.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a PathTT.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term PathTT.T * 'a) ->
                 'b -> (term list * term PathTT.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a PathTT.T -> 'a list
    val con_eq: term PathTT.T -> term PathTT.T -> bool
    val def_net_gen: Random.rand -> term PathTT.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term PathTT.T -> term PathTT.T
    val del': term -> term PathTT.T -> term PathTT.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathTT.T * 'a
    val ins: term -> term PathTT.T -> term PathTT.T
    val ins': term -> term PathTT.T -> term PathTT.T
    val mem: term -> term PathTT.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term PathTT.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b PathTT.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term PathTT.T, Random.rand) gen_state ->
         Random.rand -> (term * term PathTT.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_not_in_net_gen:
       (term PathTT.T, Random.rand) gen_state ->
         Random.rand -> (term * term PathTT.T) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a PathTT.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a PathTT.T) * Random.rand
    val terms_not_in_net_gen:
       (term, 'a) gen_state ->
         int ->
           ('b -> term PathTT.T * 'a) ->
             'b -> (term list * term PathTT.T) * 'a
    val test: ('a -> 'b -> 'b) list -> 'a -> 'b -> 'b
    val test_all: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries_non_existing:
       (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
    val var_gen: int -> (term, Random.rand) gen_state
  end
structure TTTest:
  sig
    val ==> : 'a Property.pred * 'a Property.pred -> 'a Property.prop
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term TT_Index.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term TT_Index.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a TT_Index.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a TT_Index.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term TT_Index.T * 'a) ->
                 'b -> (term list * term TT_Index.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val check:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.pred -> Proof.context -> 'b -> 'b
    val check_prop:
       'a Show_Base.show ->
         ('a, 'b) gen_state ->
           string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val check_prop_base:
       ('a, 'b) gen_state ->
         string -> 'a Property.prop -> Proof.context -> 'b -> 'b
    val con: 'a TT_Index.T -> 'a list
    val con_eq: term TT_Index.T -> term TT_Index.T -> bool
    val def_net_gen: Random.rand -> term TT_Index.T * Random.rand
    val def_term_gen: Random.rand -> term * Random.rand
    val del: term -> term TT_Index.T -> term TT_Index.T
    val del': term -> term TT_Index.T -> term TT_Index.T
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term TT_Index.T * 'a
    val ins: term -> term TT_Index.T -> term TT_Index.T
    val ins': term -> term TT_Index.T -> term TT_Index.T
    val mem: term -> term TT_Index.T -> bool
    val net_gen:
       int ->
         (Random.rand -> term * Random.rand) ->
           Random.rand -> term TT_Index.T * Random.rand
    val print_distribution:
       (term, 'a) gen_state ->
         ((term, 'a) gen_state -> ('b TT_Index.T, 'a) gen_state) ->
           Proof.context -> 'a -> 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val set_eq: term list -> term list -> bool
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_in_net_gen:
       (term TT_Index.T, Random.rand) gen_state ->
         Random.rand -> (term * term TT_Index.T) * Random.rand
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_not_in_net_gen:
       (term TT_Index.T, Random.rand) gen_state ->
         Random.rand -> (term * term TT_Index.T) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val terms_in_net_gen:
       int ->
         (''a TT_Index.T, Random.rand) gen_state ->
           Random.rand -> (''a list * ''a TT_Index.T) * Random.rand
    val terms_not_in_net_gen:
       (term, 'a) gen_state ->
         int ->
           ('b -> term TT_Index.T * 'a) ->
             'b -> (term list * term TT_Index.T) * 'a
    val test: ('a -> 'b -> 'b) list -> 'a -> 'b -> 'b
    val test_all: Proof.context -> Random.rand -> Random.rand
    val test_hol: (Proof.context -> _a -> _a) list
    val test_modifying: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries: (Proof.context -> Random.rand -> Random.rand) list
    val test_queries_non_existing:
       (Proof.context -> Random.rand -> Random.rand) list
    val test_util: (Proof.context -> Random.rand -> Random.rand) list
    val tests: (Proof.context -> Random.rand -> Random.rand) list
    val var_gen: int -> (term, Random.rand) gen_state
  end
structure NBench:
  sig
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term NetIndex.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term NetIndex.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a NetIndex.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a NetIndex.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term NetIndex.T * 'a) ->
                 'b -> (term list * term NetIndex.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val benchmark:
       ((term NetIndex.T * (term, 'a) gen_state) list ->
          (Random.rand -> (term list * term NetIndex.T) * Random.rand) list
            -> ('a -> (term list * term NetIndex.T) * 'a) list -> 'b list
       )
       list
         -> (term NetIndex.T * (term, 'a) gen_state) list -> 'b list
    val benchmark_basic:
       ('a NetIndex.T * 'b) list ->
         (Random.rand -> (term list * term NetIndex.T) * 'c) list ->
           (Random.rand -> (term list * term NetIndex.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_queries:
       'a ->
         (Random.rand -> (term list * 'b NetIndex.T) * Random.rand) list ->
           (Random.rand -> (term list * 'c NetIndex.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_variants:
       'a ->
         (Random.rand -> (term list * 'b NetIndex.T) * 'c) list ->
           (Random.rand -> (term list * 'd NetIndex.T) * 'e) list ->
             (tag * Time.time) list
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term NetIndex.T * 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val var_gen: int -> (term, Random.rand) gen_state
  end
structure PBench:
  sig
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term PathIndex.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term PathIndex.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a PathIndex.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a PathIndex.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term PathIndex.T * 'a) ->
                 'b -> (term list * term PathIndex.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val benchmark:
       ((term PathIndex.T * (term, 'a) gen_state) list ->
          (Random.rand -> (term list * term PathIndex.T) * Random.rand) list
            -> ('a -> (term list * term PathIndex.T) * 'a) list -> 'b list
       )
       list
         -> (term PathIndex.T * (term, 'a) gen_state) list -> 'b list
    val benchmark_basic:
       ('a PathIndex.T * 'b) list ->
         (Random.rand -> (term list * term PathIndex.T) * 'c) list ->
           (Random.rand -> (term list * term PathIndex.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_queries:
       'a ->
         (Random.rand -> (term list * 'b PathIndex.T) * Random.rand) list ->
           (Random.rand -> (term list * 'c PathIndex.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_variants:
       'a ->
         (Random.rand -> (term list * 'b PathIndex.T) * 'c) list ->
           (Random.rand -> (term list * 'd PathIndex.T) * 'e) list ->
             (tag * Time.time) list
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathIndex.T * 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val var_gen: int -> (term, Random.rand) gen_state
  end
structure PTTBench:
  sig
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathTT.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term PathTT.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a PathTT.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a PathTT.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term PathTT.T * 'a) ->
                 'b -> (term list * term PathTT.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val benchmark:
       ((term PathTT.T * (term, 'a) gen_state) list ->
          (Random.rand -> (term list * term PathTT.T) * Random.rand) list ->
            ('a -> (term list * term PathTT.T) * 'a) list -> 'b list
       )
       list
         -> (term PathTT.T * (term, 'a) gen_state) list -> 'b list
    val benchmark_basic:
       ('a PathTT.T * 'b) list ->
         (Random.rand -> (term list * term PathTT.T) * 'c) list ->
           (Random.rand -> (term list * term PathTT.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_queries:
       'a ->
         (Random.rand -> (term list * 'b PathTT.T) * Random.rand) list ->
           (Random.rand -> (term list * 'c PathTT.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_variants:
       'a ->
         (Random.rand -> (term list * 'b PathTT.T) * 'c) list ->
           (Random.rand -> (term list * 'd PathTT.T) * 'e) list ->
             (tag * Time.time) list
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term PathTT.T * 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val var_gen: int -> (term, Random.rand) gen_state
  end
structure TTBench:
  sig
    structure Gen:
      sig
        val aterm:
           term gen ->
             term gen ->
               term gen -> term gen -> int * int * int * int -> term gen
        val aterm': int gen -> int gen -> int * int * int * int -> term gen
        val atyp: typ gen -> typ gen -> int * int -> typ gen
        val atyp': int gen -> int gen -> int * int -> typ gen
        val basic_name: string -> int gen -> string gen
        val bernoulli: real -> bool gen
        val binom_dist: real -> int -> int gen
        val bound: (int, 'a) gen_state -> (term, 'a) gen_state
        val char: char gen
        val char_of: string -> char gen
        val cobool: (bool, 'a) cogen
        val cochar: (char, 'a) cogen
        type ('a, 'b) cogen = ('a, 'b, Random.rand) cogen_state
        type ('a, 'b, 'c) cogen_state =
           'a -> ('b, 'c) gen_state -> ('b, 'c) gen_state
        val coint: (int, 'a) cogen
        val colist: ('a, 'b) cogen -> ('a list, 'b) cogen
        val const:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val const': int gen -> term gen
        val const_name: int gen -> string gen
        val cooption: ('a, 'b) cogen -> ('a option, 'b) cogen
        val costring: (string, 'a) cogen
        val cosubstring: (substring, 'a) cogen
        val digit: char gen
        val dummyS: (sort, 'a) gen_state
        val dummyT: (typ, 'a) gen_state
        val elements: 'a vector -> 'a gen
        val elementsL: 'a list -> 'a gen
        val elementsW: (int * 'a) vector -> 'a gen
        val elementsWL: (int * 'a) list -> 'a gen
        val filter: ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val filter_bounded:
           int -> ('a -> bool) -> ('a, 'b) gen_state -> ('a, 'b) gen_state
        val free:
           (string, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val free': int gen -> term gen
        val free_name: int gen -> string gen
        val function: ('a, 'b) cogen -> 'b gen -> ('a -> 'b) gen
        val function': 'a gen -> (''b -> 'a) gen
        type 'a gen = ('a, Random.rand) gen_state
        type ('a, 'b) gen_state = 'b -> 'a * 'b
        val indexname:
           (string, 'a) gen_state ->
             (int, 'a) gen_state -> (indexname, 'a) gen_state
        val letter: char gen
        val lift: 'a -> ('a, 'b) gen_state
        val list:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b list, 'a) gen_state
        val lowercase_letter: char gen
        val map: ('a -> 'b) -> ('a, 'c) gen_state -> ('b, 'c) gen_state
        val map2:
           ('a -> 'b -> 'c) ->
             ('a, 'd) gen_state -> ('b, 'd) gen_state -> ('c, 'd) gen_state
        val map3:
           ('a -> 'b -> 'c -> 'd) ->
             ('a, 'e) gen_state ->
               ('b, 'e) gen_state ->
                 ('c, 'e) gen_state -> ('d, 'e) gen_state
        val map4:
           ('a -> 'b -> 'c -> 'd -> 'e) ->
             ('a, 'f) gen_state ->
               ('b, 'f) gen_state ->
                 ('c, 'f) gen_state ->
                   ('d, 'f) gen_state -> ('e, 'f) gen_state
        val neg: int -> int gen
        val nonneg: int -> int gen
        val nonpos: int -> int gen
        val of_seq: ('a option, 'a Seq.seq) gen_state
        val one_of: 'a gen vector -> 'a gen
        val one_ofL: 'a gen list -> 'a gen
        val one_ofW: (int * 'a gen) vector -> 'a gen
        val one_ofWL: (int * 'a gen) list -> 'a gen
        val option:
           (bool, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b option, 'a) gen_state
        val pos: int -> int gen
        val range_char: char * char -> char gen
        val range_int: int * int -> int gen
        val range_real: real * real -> real gen
        val real: real gen
        val real_finite: real gen
        val real_neg: real gen
        val real_nonneg: real gen
        val real_nonpos: real gen
        val real_pos: real gen
        val ref_gen: ('a, 'b) gen_state -> ('a ref, 'b) gen_state
        val seq:
           ('a option, 'b * Random.rand) gen_state -> 'b -> 'a Seq.seq gen
        val shuffle: 'a list -> 'a list gen
        val sort:
           (int, 'a) gen_state ->
             (class, 'a) gen_state -> (sort, 'a) gen_state
        val string: int gen -> char gen -> string gen
        val substring: string gen -> substring gen
        val term_tree:
           (int -> int -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val term_tree_path:
           ((term * int) list -> (term * int, 'a) gen_state) ->
             (term, 'a) gen_state
        val tfree:
           (string, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tfree': int gen -> typ gen
        val tfree_name: (string, 'a) gen_state -> (string, 'a) gen_state
        val tfree_name': int gen -> string gen
        val tvar:
           (indexname, 'a) gen_state ->
             (sort, 'a) gen_state -> (typ, 'a) gen_state
        val tvar': int gen -> int gen -> typ gen
        val tvar_name:
           (indexname, 'a) gen_state -> (indexname, 'a) gen_state
        val tvar_name': int gen -> int gen -> indexname gen
        val typ: typ gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val typ'':
           int gen -> int gen -> int gen -> int * int * int -> typ gen
        val type':
           string gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type'':
           int gen ->
             int gen -> typ gen -> typ gen -> int * int * int -> typ gen
        val type_name: int gen -> string gen
        val unfold_while:
           ('a -> (bool, 'b) gen_state) ->
             ('a, 'b) gen_state -> ('a list, 'b) gen_state
        val unit: (unit, 'a) gen_state
        val uppercase_letter: char gen
        val var:
           (indexname, 'a) gen_state ->
             (typ, 'a) gen_state -> (term, 'a) gen_state
        val var': int gen -> int gen -> term gen
        val var_name: int gen -> int gen -> indexname gen
        val variant: (int, 'a) cogen
        val vector:
           (int, 'a) gen_state ->
             ('b, 'a) gen_state -> ('b vector, 'a) gen_state
        val zip:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state -> ('a * 'c, 'b) gen_state
        val zip3:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state -> ('a * 'c * 'd, 'b) gen_state
        val zip4:
           ('a, 'b) gen_state ->
             ('c, 'b) gen_state ->
               ('d, 'b) gen_state ->
                 ('e, 'b) gen_state -> ('a * 'c * 'd * 'e, 'b) gen_state
      end
    structure NG:
      sig
        val index_gen:
           int -> ('a -> term * 'a) -> 'a -> term TT_Index.T * 'a
        val net_gen:
           int ->
             (Random.rand -> term * Random.rand) ->
               Random.rand -> term TT_Index.T * Random.rand
        val terms_in_net_gen:
           int ->
             (''a TT_Index.T, Random.rand) gen_state ->
               Random.rand -> (''a list * ''a TT_Index.T) * Random.rand
        val terms_not_in_net_gen:
           (term, 'a) gen_state ->
             int ->
               ('b -> term TT_Index.T * 'a) ->
                 'b -> (term list * term TT_Index.T) * 'a
      end
    val add_aterm_name_suffix: string -> term -> term
    val aterm: int -> int * int * int -> term Gen_Types.gen
    val benchmark:
       ((term TT_Index.T * (term, 'a) gen_state) list ->
          (Random.rand -> (term list * term TT_Index.T) * Random.rand) list
            -> ('a -> (term list * term TT_Index.T) * 'a) list -> 'b list
       )
       list
         -> (term TT_Index.T * (term, 'a) gen_state) list -> 'b list
    val benchmark_basic:
       ('a TT_Index.T * 'b) list ->
         (Random.rand -> (term list * term TT_Index.T) * 'c) list ->
           (Random.rand -> (term list * term TT_Index.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_queries:
       'a ->
         (Random.rand -> (term list * 'b TT_Index.T) * Random.rand) list ->
           (Random.rand -> (term list * 'c TT_Index.T) * 'd) list ->
             (tag * Time.time) list
    val benchmark_variants:
       'a ->
         (Random.rand -> (term list * 'b TT_Index.T) * 'c) list ->
           (Random.rand -> (term list * 'd TT_Index.T) * 'e) list ->
             (tag * Time.time) list
    val eq: term * term -> bool
    val index_gen: int -> ('a -> term * 'a) -> 'a -> term TT_Index.T * 'a
    val replace_subterm:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val replace_subterm_aux:
       (Random.rand -> term * 'a) ->
         term -> Random.rand -> term * Random.rand
    val symbol_gen:
       (int * 'a -> bool) ->
         int * int ->
           (int -> (term, Random.rand) gen_state) ->
             int -> 'a -> Random.rand -> (term * int) * Random.rand
    val term_gen:
       int * int * int ->
         int ->
           (int * int -> bool) -> int * int -> (term, Random.rand) gen_state
    val term_gen_def: int -> Random.rand -> term * Random.rand
    val term_ground:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_instance_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_unif_gen:
       ('a -> term * Random.rand) -> 'a -> (term * term) * Random.rand
    val term_var_reuse:
       int -> int -> int * int -> (term, Random.rand) gen_state
    val term_with_var:
       int -> int -> int -> int * int -> (term, Random.rand) gen_state
    val var_gen: int -> (term, Random.rand) gen_state
  end

Output (line 45 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
val f = Abs ("x", "'a", Bound 0): term
val a = Free ("a", "'a ⇒ 'b") $ (Free ("b", "'c ⇒ 'a") $ Free ("c", "'c")):
   term
val b = Free ("b", "'a"): term
val x = Var (("x", 0), "'a"): term
val y = Var (("y", 0), "'a"): term
val it = [true, true]: bool list

Output (line 58 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: 

Output (line 58 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 1000 tests.

Output (line 58 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.010s (run) / 0.833s (total)

Output (line 58 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: 

Output (line 58 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 1000 tests.

Output (line 58 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.008s (run) / 0.412s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Path

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Content of empty net is empty list

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.002s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Empty net is empty

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.001s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deleting all terms returns empty net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion adds value to content

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 12 discarded.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion of new term increases size

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 9 discarded.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Duplicate exception on insert

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Safe insert raises no exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion removes value from content

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion of contained term decreases size

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deleting twice raises exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Safe delete raises no exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Value saved under multiple keys gets deleted correctly

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion and deletion of new term returns identical net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion and insertion of contained term returns identical net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: variants includes the queried term

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: lookup ⊆ generalisations, instances and unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.010s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisation ⊆ unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances ⊆ unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.287s (run) / 0.299s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisation returns itself and generalisation

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances returns itself and instance

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.012s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: unifiables returns itself and unifiable

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: variants of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisations of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: unifiables of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
PathTT

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Content of empty net is empty list

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.001s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Empty net is empty

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.001s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deleting all terms returns empty net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion adds value to content

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 7 discarded.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion of new term increases size

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 9 discarded.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Duplicate exception on insert

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Safe insert raises no exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion removes value from content

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion of contained term decreases size

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deleting twice raises exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Safe delete raises no exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Value saved under multiple keys gets deleted correctly

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion and deletion of new term returns identical net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion and insertion of contained term returns identical net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: variants includes the queried term

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: lookup ⊆ generalisations, instances and unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisation ⊆ unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances ⊆ unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisation returns itself and generalisation

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances returns itself and instance

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: unifiables returns itself and unifiable

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: variants of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisations of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: unifiables of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Content of empty net is empty list

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.001s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Empty net is empty

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.001s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deleting all terms returns empty net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion adds value to content

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 8 discarded.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.002s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion of new term increases size

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 12 discarded.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.002s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Duplicate exception on insert

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Safe insert raises no exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion removes value from content

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion of contained term decreases size

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.005s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deleting twice raises exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Safe delete raises no exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.008s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Value saved under multiple keys gets deleted correctly

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion and deletion of new term returns identical net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion and insertion of contained term returns identical net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: variants includes the queried term

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: lookup ⊆ generalisations, instances and unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisation ⊆ unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances ⊆ unifiables

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisation returns itself and generalisation

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances returns itself and instance

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: unifiables returns itself and unifiable

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.004s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: variants of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: instances of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: generalisations of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: unifiables of nonexisting term succeeds

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
TT

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Content of empty net is empty list

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.001s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Empty net is empty

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.001s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deleting all terms returns empty net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.002s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion adds value to content

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 10 discarded.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion of new term increases size

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests; 14 discarded.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Duplicate exception on insert

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Safe insert raises no exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion removes value from content

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion of contained term decreases size

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deleting twice raises exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Safe delete raises no exception

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Value saved under multiple keys gets deleted correctly

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Insertion and deletion of new term returns identical net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):


Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Testing: Deletion and insertion of contained term returns identical net

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
OK, passed 100 tests.

Output (line 69 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Time: 0.001s (run) / 0.003s (total)

Output (line 81 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
val gen_seeds = fn:
   Random.rand -> (int * 'a) list -> ('a * Random.rand list) list
val sizes =
   [(5000,
     [753147514, 1116425881, 1947041, 216144703, 45786716, 1269495748,
      31147455, 1604736750, 186655125, 425248534, 791643520, 339760711,
      1590120850, 698124266, 532786910, 260229470, 532495890, 1552629797,
      1419824874, ...]),
    (3000,
     [1703329873, 1158422949, 986614467, 1218586755, 93707310, 590493102,
      860637548, 1770483174, 762218426, 1185262251, 363309897, 250478577,
      818491748, 148093916, 998230552, 1108219801, 1343106975, 1560548517,
      ...]),
    (1000,
     [1511661568, 1350485565, 6947638, 1060126819, 1375537760, 1347763142,
      223509716, 1027030617, 1760145377, 387093305, 617063262, 1855828531,
      29363997, 988902320, 536423666, 1284904249, 1692525851, ...]),
    (700,
     [1375385449, 1248387439, 1620990910, 887590047, 1418382654, 906825801,
      1646672769, 685416248, 1057383048, 1147281537, 1229990186, 1508949579,
      1579847550, 563274715, 1494540351, 1703117378, ...]),
    (500,
     [149359138, 2102485825, 1186740745, 938040024, 1220410580, 1573887303,
      1477800936, 2105083424, 1581451302, 753662164, 296770181, 983444312,
      757464555, 2123356262, 653182359, ...]),
    (200,
     [1511332815, 1958361675, 847013665, 1559093581, 1222833284, 1579719349,
      1343495832, 9262538, 1957027249, 1954768430, 103965886, 52785261,
      1035539775, 1166194604, ...]),
    (100,
     [42298681, 743191907, 825276420, 639068415, 947558591, 991474970,
      745960263, 1117651918, 1354712912, 765537606, 334359572, 883335850,
      1771602782, ...]),
    (70,
     [1769522374, 2008480807, 915166651, 748281804, 830819013, 1344850148,
      1374706027, 485295719, 1934233435, 820571958, 1023825919, 224068927,
      ...]),
    (50,
     [1453549611, 902477964, 569032850, 1729563599, 531519067, 897872346,
      1543072683, 1389688346, 1544410491, 1347681131, 1840025232, ...]),
    (40,
     [2033836930, 300635703, 1168295682, 1527631915, 1911744517, 1403973118,
      1423237891, 1856925218, 1467547506, 1652131646, ...]),
    (30,
     [1380887831, 528137432, 240708420, 314396892, 565560021, 1929920591,
      271379525, 844929427, 1585656948, ...]),
    (20,
     [18883441, 481663164, 637066512, 338511106, 1343312102, 1903364482,
      403391034, 1748707085, ...]),
    (10,
     [365211588, 900832145, 624443770, 196732999, 900760272, 456211179,
      1736627883, ...])]:
   (int * Random.rand list) list
val depth = 6: int
val argr = (0, 4): int * int
val test_single = fn: int -> (string * (term, Random.rand) gen_state) list
val gen_distinct =
   [(Gen "NR", fn), (Gen "LR", fn), (Gen "MR", fn), (Gen "HR", fn)]:
   (tag * (int -> (term, Random.rand) gen_state)) list
val gen_var =
   [(Gen "NV", fn), (Gen "LV", fn), (Gen "MV", fn), (Gen "HV", fn)]:
   (tag * (int -> (term, Random.rand) gen_state)) list
val gens = [(Gen "NV", fn), (Gen "LV", fn), (Gen "MV", fn), (Gen "HV", fn)]:
   (tag * (int -> (term, Random.rand) gen_state)) list
val bench = fn:
   tag ->
     (int -> term Gen_Base.gen -> 'a Gen_Base.gen) ->
       (('a * term Gen_Base.gen) list -> (tag * 'b) list) ->
         (tag * (int -> term Gen_Base.gen)) list ->
           (int * Random.rand list) list -> (tag list * 'b) list

Output (line 133 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.026)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.027)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:10-Runs:5000"],
 0.030)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:10-Runs:5000"],
 0.032)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:10-Runs:5000"],
 0.020)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.039)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.042)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:20-Runs:5000"],
 0.048)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:20-Runs:5000"],
 0.050)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:20-Runs:5000"],
 0.022)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.054)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.059)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:30-Runs:5000"],
 0.069)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:30-Runs:5000"],
 0.072)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:30-Runs:5000"],
 0.025)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.070)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.077)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:40-Runs:5000"],
 0.101)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:40-Runs:5000"],
 0.097)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:40-Runs:5000"],
 0.027)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.085)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.098)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:50-Runs:5000"],
 0.113)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:50-Runs:5000"],
 0.119)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:50-Runs:5000"],
 0.030)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.121)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.140)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:70-Runs:5000"],
 0.161)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:70-Runs:5000"],
 0.171)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:70-Runs:5000"],
 0.034)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 0.181)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 0.194)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:100-Runs:5000"],
 0.228)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:100-Runs:5000"],
 0.257)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:100-Runs:5000"],
 0.040)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.047)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.046)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:200-Runs:500"],
 0.063)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:200-Runs:500"],
 0.070)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:200-Runs:500"],
 0.006)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:500-Runs:500"],
 0.193)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:500-Runs:500"],
 0.144)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:500-Runs:500"],
 0.169)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:500-Runs:500"],
 0.252)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:500-Runs:500"],
 0.011)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:700-Runs:500"],
 0.320)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:700-Runs:500"],
 0.220)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:700-Runs:500"],
 0.260)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:700-Runs:500"],
 0.420)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:700-Runs:500"],
 0.015)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.051)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.035)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:1000-Runs:50"],
 0.043)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:1000-Runs:50"],
 0.067)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:1000-Runs:50"],
 0.002)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 0.204)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 0.145)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:3000-Runs:50"],
 0.172)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:3000-Runs:50"],
 0.260)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:3000-Runs:50"],
 0.005)
([Test "Q: variants of non-ex term", Index "TT_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 0.388)
([Test "Q: variants of existing term", Index "TT_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 0.270)
([Test "Delete terms", Index "TT_", Gen "HV", Size "Terms:5000-Runs:50"],
 0.325)
([Test "Insert terms", Index "TT_", Gen "HV", Size "Terms:5000-Runs:50"],
 0.486)
([Test "Content of net", Index "TT_", Gen "HV", Size "Terms:5000-Runs:50"],
 0.010)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.025)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.026)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:10-Runs:5000"],
 0.030)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:10-Runs:5000"],
 0.030)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:10-Runs:5000"],
 0.019)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.037)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.042)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:20-Runs:5000"],
 0.047)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:20-Runs:5000"],
 0.048)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:20-Runs:5000"],
 0.022)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.052)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.058)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:30-Runs:5000"],
 0.066)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:30-Runs:5000"],
 0.071)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:30-Runs:5000"],
 0.024)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.067)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.079)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:40-Runs:5000"],
 0.091)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:40-Runs:5000"],
 0.100)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:40-Runs:5000"],
 0.027)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.086)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.101)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:50-Runs:5000"],
 0.134)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:50-Runs:5000"],
 0.126)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:50-Runs:5000"],
 0.029)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 0.122)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 0.141)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:70-Runs:5000"],
 0.166)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:70-Runs:5000"],
 0.170)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:70-Runs:5000"],
 0.033)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 0.181)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 0.209)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:100-Runs:5000"],
 0.248)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:100-Runs:5000"],
 0.266)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:100-Runs:5000"],
 0.041)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.045)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.047)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:200-Runs:500"],
 0.054)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:200-Runs:500"],
 0.066)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:200-Runs:500"],
 0.004)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:500-Runs:500"],
 0.193)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:500-Runs:500"],
 0.144)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:500-Runs:500"],
 0.171)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:500-Runs:500"],
 0.254)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:500-Runs:500"],
 0.012)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:700-Runs:500"],
 0.320)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:700-Runs:500"],
 0.238)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:700-Runs:500"],
 0.288)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:700-Runs:500"],
 0.434)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:700-Runs:500"],
 0.024)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.051)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.035)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:1000-Runs:50"],
 0.043)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:1000-Runs:50"],
 0.067)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:1000-Runs:50"],
 0.002)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 0.211)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 0.144)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:3000-Runs:50"],
 0.184)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:3000-Runs:50"],
 0.275)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:3000-Runs:50"],
 0.006)
([Test "Q: variants of non-ex term", Index "TT_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 0.398)
([Test "Q: variants of existing term", Index "TT_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 0.278)
([Test "Delete terms", Index "TT_", Gen "MV", Size "Terms:5000-Runs:50"],
 0.333)
([Test "Insert terms", Index "TT_", Gen "MV", Size "Terms:5000-Runs:50"],
 0.506)
([Test "Content of net", Index "TT_", Gen "MV", Size "Terms:5000-Runs:50"],
 0.011)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.025)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.026)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:10-Runs:5000"],
 0.029)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:10-Runs:5000"],
 0.031)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:10-Runs:5000"],
 0.019)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.039)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.042)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:20-Runs:5000"],
 0.047)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:20-Runs:5000"],
 0.049)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:20-Runs:5000"],
 0.022)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.051)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.059)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:30-Runs:5000"],
 0.066)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:30-Runs:5000"],
 0.071)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:30-Runs:5000"],
 0.025)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.069)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.079)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:40-Runs:5000"],
 0.089)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:40-Runs:5000"],
 0.094)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:40-Runs:5000"],
 0.026)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.084)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.097)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:50-Runs:5000"],
 0.113)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:50-Runs:5000"],
 0.119)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:50-Runs:5000"],
 0.029)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 0.117)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 0.135)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:70-Runs:5000"],
 0.156)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:70-Runs:5000"],
 0.179)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:70-Runs:5000"],
 0.032)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 0.184)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 0.206)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:100-Runs:5000"],
 0.243)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:100-Runs:5000"],
 0.262)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:100-Runs:5000"],
 0.040)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.046)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.047)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:200-Runs:500"],
 0.059)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:200-Runs:500"],
 0.070)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:200-Runs:500"],
 0.006)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:500-Runs:500"],
 0.195)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:500-Runs:500"],
 0.150)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:500-Runs:500"],
 0.176)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:500-Runs:500"],
 0.270)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:500-Runs:500"],
 0.015)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:700-Runs:500"],
 0.320)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:700-Runs:500"],
 0.225)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:700-Runs:500"],
 0.283)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:700-Runs:500"],
 0.435)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:700-Runs:500"],
 0.018)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.052)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.035)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:1000-Runs:50"],
 0.042)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:1000-Runs:50"],
 0.069)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:1000-Runs:50"],
 0.002)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 0.215)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 0.146)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:3000-Runs:50"],
 0.173)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:3000-Runs:50"],
 0.278)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:3000-Runs:50"],
 0.005)
([Test "Q: variants of non-ex term", Index "TT_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 0.410)
([Test "Q: variants of existing term", Index "TT_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 0.280)
([Test "Delete terms", Index "TT_", Gen "LV", Size "Terms:5000-Runs:50"],
 0.338)
([Test "Insert terms", Index "TT_", Gen "LV", Size "Terms:5000-Runs:50"],
 0.514)
([Test "Content of net", Index "TT_", Gen "LV", Size "Terms:5000-Runs:50"],
 0.011)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.025)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.026)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:10-Runs:5000"],
 0.030)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:10-Runs:5000"],
 0.031)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:10-Runs:5000"],
 0.019)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.038)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.041)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:20-Runs:5000"],
 0.048)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:20-Runs:5000"],
 0.050)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:20-Runs:5000"],
 0.022)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.051)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.058)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:30-Runs:5000"],
 0.069)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:30-Runs:5000"],
 0.071)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:30-Runs:5000"],
 0.024)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.066)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.076)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:40-Runs:5000"],
 0.089)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:40-Runs:5000"],
 0.092)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:40-Runs:5000"],
 0.026)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.084)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.095)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:50-Runs:5000"],
 0.109)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:50-Runs:5000"],
 0.122)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:50-Runs:5000"],
 0.029)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 0.122)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 0.146)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:70-Runs:5000"],
 0.170)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:70-Runs:5000"],
 0.169)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:70-Runs:5000"],
 0.043)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 0.184)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 0.227)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:100-Runs:5000"],
 0.265)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:100-Runs:5000"],
 0.266)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:100-Runs:5000"],
 0.043)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.048)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.049)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:200-Runs:500"],
 0.058)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:200-Runs:500"],
 0.066)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:200-Runs:500"],
 0.004)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:500-Runs:500"],
 0.202)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:500-Runs:500"],
 0.147)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:500-Runs:500"],
 0.175)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:500-Runs:500"],
 0.264)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:500-Runs:500"],
 0.012)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:700-Runs:500"],
 0.323)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:700-Runs:500"],
 0.228)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:700-Runs:500"],
 0.269)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:700-Runs:500"],
 0.430)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:700-Runs:500"],
 0.026)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.051)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.032)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:1000-Runs:50"],
 0.038)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:1000-Runs:50"],
 0.067)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:1000-Runs:50"],
 0.002)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 0.213)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 0.145)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:3000-Runs:50"],
 0.172)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:3000-Runs:50"],
 0.269)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:3000-Runs:50"],
 0.005)
([Test "Q: variants of non-ex term", Index "TT_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 0.405)
([Test "Q: variants of existing term", Index "TT_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 0.277)
([Test "Delete terms", Index "TT_", Gen "NV", Size "Terms:5000-Runs:50"],
 0.330)
([Test "Insert terms", Index "TT_", Gen "NV", Size "Terms:5000-Runs:50"],
 0.507)
([Test "Content of net", Index "TT_", Gen "NV", Size "Terms:5000-Runs:50"],
 0.009)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.051)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.026)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.178)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.145)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.472)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.495)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.230)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.212)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.244)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.233)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:10-Runs:5000"],
 0.329)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:10-Runs:5000"],
 0.446)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:10-Runs:5000"],
 0.482)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.161)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.040)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.405)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.305)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 1.141)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 1.142)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.478)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.413)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.543)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.430)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:20-Runs:5000"],
 0.633)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:20-Runs:5000"],
 0.731)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:20-Runs:5000"],
 0.916)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.172)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.055)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.665)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.487)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.857)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.968)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.738)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.564)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.838)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.660)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:30-Runs:5000"],
 0.957)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:30-Runs:5000"],
 0.959)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:30-Runs:5000"],
 1.492)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.280)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.074)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.797)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.602)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 2.836)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 2.805)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 1.152)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.757)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 1.227)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.860)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:40-Runs:5000"],
 1.276)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:40-Runs:5000"],
 1.738)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:40-Runs:5000"],
 1.956)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.454)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.092)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 1.586)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.719)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 3.977)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 3.924)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 1.664)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 1.034)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 1.602)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:50-Runs:5000"],
 1.063)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:50-Runs:5000"],
 1.572)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:50-Runs:5000"],
 2.026)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:50-Runs:5000"],
 4.019)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 1.403)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.140)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 2.715)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 1.217)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 7.491)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 7.555)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 2.796)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 1.410)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 3.035)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:70-Runs:5000"],
 1.672)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:70-Runs:5000"],
 2.438)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:70-Runs:5000"],
 3.298)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:70-Runs:5000"],
 4.126)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 2.744)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 0.204)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 5.101)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 1.401)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 11.610)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 11.309)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 4.457)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 2.041)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 4.565)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:100-Runs:5000"],
 2.217)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:100-Runs:5000"],
 3.275)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:100-Runs:5000"],
 4.267)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:100-Runs:5000"],
 31.932)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.409)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.055)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.196)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.321)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 3.588)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 3.340)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.353)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.369)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.330)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.461)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:200-Runs:500"],
 0.672)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:200-Runs:500"],
 0.806)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:200-Runs:500"],
 0.895)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 4.887)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 0.253)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 6.969)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.387)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 18.092)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 16.953)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 6.692)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.115)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 6.343)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.099)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:500-Runs:500"],
 1.644)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:500-Runs:500"],
 3.355)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:500-Runs:500"],
 2.423)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 12.109)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 0.432)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 15.441)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 2.094)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 57.345)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 59.831)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 20.876)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 1.577)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 19.682)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:700-Runs:500"],
 1.511)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:700-Runs:500"],
 2.233)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:700-Runs:500"],
 3.831)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:700-Runs:500"],
 3.042)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 2.310)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.068)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 2.414)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.311)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 6.587)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 6.035)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 2.412)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.236)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 3.877)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.309)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:1000-Runs:50"],
 0.321)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:1000-Runs:50"],
 0.685)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:1000-Runs:50"],
 0.823)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 22.475)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 0.268)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 19.999)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 1.179)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 55.342)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 51.168)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 20.063)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 0.824)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 18.252)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:3000-Runs:50"],
 0.815)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:3000-Runs:50"],
 1.123)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:3000-Runs:50"],
 1.636)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:3000-Runs:50"],
 1.452)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 59.026)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 0.515)
([Test "Q: instances of non-ex term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 58.160)
([Test "Q: variants of non-ex term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 1.560)
([Test "Q: unifiables of generalised term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 157.441)
([Test "Q: instances of generalised term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 143.370)
([Test "Q: unifiables of existing term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 56.566)
([Test "Q: generalisations of existing term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 1.483)
([Test "Q: instances of existing term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 51.297)
([Test "Q: variants of existing term", Index "DN", Gen "HV",
  Size "Terms:5000-Runs:50"],
 1.432)
([Test "Delete terms", Index "DN", Gen "HV", Size "Terms:5000-Runs:50"],
 2.031)
([Test "Insert terms", Index "DN", Gen "HV", Size "Terms:5000-Runs:50"],
 2.796)
([Test "Content of net", Index "DN", Gen "HV", Size "Terms:5000-Runs:50"],
 2.317)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.029)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.026)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.186)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.160)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.550)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.573)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.245)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.227)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.268)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.250)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:10-Runs:5000"],
 0.379)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:10-Runs:5000"],
 0.523)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:10-Runs:5000"],
 1.102)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.055)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.038)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.333)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.327)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 1.366)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 1.420)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.509)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.516)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.561)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.527)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:20-Runs:5000"],
 0.778)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:20-Runs:5000"],
 1.665)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:20-Runs:5000"],
 2.314)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.154)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.057)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.509)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.458)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 2.198)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 2.294)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.782)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.684)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.865)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.769)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:30-Runs:5000"],
 1.150)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:30-Runs:5000"],
 1.928)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:30-Runs:5000"],
 4.098)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.231)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.072)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.783)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.548)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 3.232)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 3.326)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 1.006)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.832)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 1.186)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.997)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:40-Runs:5000"],
 1.534)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:40-Runs:5000"],
 1.838)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:40-Runs:5000"],
 2.574)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.138)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.089)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 1.229)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 1.114)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 22.674)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 4.853)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 1.279)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 1.102)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 1.517)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:50-Runs:5000"],
 1.246)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:50-Runs:5000"],
 1.975)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:50-Runs:5000"],
 2.595)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:50-Runs:5000"],
 2.903)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.738)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 0.125)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.585)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.193)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 9.759)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 15.178)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 2.054)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.600)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 2.229)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.860)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:70-Runs:5000"],
 2.789)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:70-Runs:5000"],
 5.398)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:70-Runs:5000"],
 7.124)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 0.406)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 0.199)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 2.512)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 1.761)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 39.212)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 28.599)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 3.227)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 2.271)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 8.869)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:100-Runs:5000"],
 2.652)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:100-Runs:5000"],
 4.023)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:100-Runs:5000"],
 10.598)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:100-Runs:5000"],
 16.999)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.302)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.051)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.679)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.460)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 3.576)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 3.481)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.797)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.488)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.851)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.490)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:200-Runs:500"],
 0.785)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:200-Runs:500"],
 1.099)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:200-Runs:500"],
 1.202)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 2.758)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 0.231)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 4.374)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 1.799)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 18.296)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 17.633)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 3.604)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 1.320)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 3.532)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:500-Runs:500"],
 1.374)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:500-Runs:500"],
 2.107)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:500-Runs:500"],
 3.762)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:500-Runs:500"],
 3.034)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 3.622)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 0.379)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 8.372)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 2.650)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 46.073)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 46.730)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 7.840)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 1.613)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 9.898)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:700-Runs:500"],
 3.904)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:700-Runs:500"],
 4.886)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:700-Runs:500"],
 5.291)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:700-Runs:500"],
 6.270)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.775)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.058)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 1.051)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.364)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 5.969)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 5.825)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 1.112)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.297)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 1.067)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.309)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:1000-Runs:50"],
 0.431)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:1000-Runs:50"],
 1.000)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:1000-Runs:50"],
 1.054)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 8.672)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 0.237)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 8.333)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 1.084)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 52.502)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 50.612)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 8.686)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 0.958)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 8.331)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:3000-Runs:50"],
 0.970)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:3000-Runs:50"],
 1.408)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:3000-Runs:50"],
 1.995)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:3000-Runs:50"],
 1.856)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 33.347)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 0.460)
([Test "Q: instances of non-ex term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 35.644)
([Test "Q: variants of non-ex term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 1.888)
([Test "Q: unifiables of generalised term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 250.520)
([Test "Q: instances of generalised term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 225.147)
([Test "Q: unifiables of existing term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 37.271)
([Test "Q: generalisations of existing term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 1.802)
([Test "Q: instances of existing term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 32.742)
([Test "Q: variants of existing term", Index "DN", Gen "MV",
  Size "Terms:5000-Runs:50"],
 1.679)
([Test "Delete terms", Index "DN", Gen "MV", Size "Terms:5000-Runs:50"],
 5.686)
([Test "Insert terms", Index "DN", Gen "MV", Size "Terms:5000-Runs:50"],
 3.378)
([Test "Content of net", Index "DN", Gen "MV", Size "Terms:5000-Runs:50"],
 6.454)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.030)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.025)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.187)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.165)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.607)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.618)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.308)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.294)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.296)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.276)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:10-Runs:5000"],
 0.413)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:10-Runs:5000"],
 0.479)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:10-Runs:5000"],
 2.380)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.042)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.040)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.352)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.299)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.447)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.522)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.548)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.529)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.557)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.531)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:20-Runs:5000"],
 0.864)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:20-Runs:5000"],
 1.458)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:20-Runs:5000"],
 2.452)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.077)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.054)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.490)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.516)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 2.322)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 2.453)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.774)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.756)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.848)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.808)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:30-Runs:5000"],
 1.231)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:30-Runs:5000"],
 1.755)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:30-Runs:5000"],
 3.719)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.078)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.070)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.780)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.707)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 3.222)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 3.360)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.956)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.886)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 1.090)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:40-Runs:5000"],
 1.013)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:40-Runs:5000"],
 1.593)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:40-Runs:5000"],
 2.474)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:40-Runs:5000"],
 2.468)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.313)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.089)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 1.065)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.866)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 4.646)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 5.140)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 1.282)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 1.121)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 1.424)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:50-Runs:5000"],
 1.310)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:50-Runs:5000"],
 2.115)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:50-Runs:5000"],
 3.071)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:50-Runs:5000"],
 3.374)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 0.154)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 0.120)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.245)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.393)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 7.259)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 7.391)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.870)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.709)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.940)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.743)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:70-Runs:5000"],
 2.816)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:70-Runs:5000"],
 4.267)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:70-Runs:5000"],
 4.645)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 0.207)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 0.178)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 1.998)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 3.242)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 19.230)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 23.962)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 4.019)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 2.291)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 2.984)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:100-Runs:5000"],
 2.603)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:100-Runs:5000"],
 5.514)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:100-Runs:5000"],
 10.857)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:100-Runs:5000"],
 12.457)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.225)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.049)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.751)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.513)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 4.114)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 4.226)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.688)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.478)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.799)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.552)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:200-Runs:500"],
 0.956)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:200-Runs:500"],
 1.650)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:200-Runs:500"],
 1.606)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.066)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 0.194)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.901)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.145)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 19.562)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 19.460)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.228)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 1.300)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.434)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:500-Runs:500"],
 1.514)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:500-Runs:500"],
 2.389)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:500-Runs:500"],
 3.914)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:500-Runs:500"],
 3.542)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 4.089)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 0.320)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 5.047)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 2.683)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 32.446)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 31.951)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 3.406)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 1.708)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 3.572)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:700-Runs:500"],
 2.025)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:700-Runs:500"],
 3.201)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:700-Runs:500"],
 27.712)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:700-Runs:500"],
 6.715)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.322)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.053)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.668)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.409)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 5.732)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 6.013)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.608)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.298)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.611)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.296)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:1000-Runs:50"],
 0.512)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:1000-Runs:50"],
 1.124)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:1000-Runs:50"],
 1.149)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 2.683)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 0.211)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.719)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 1.186)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 50.491)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 49.526)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.535)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 0.937)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.600)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:3000-Runs:50"],
 1.060)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:3000-Runs:50"],
 1.510)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:3000-Runs:50"],
 2.589)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:3000-Runs:50"],
 2.080)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 7.794)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 0.411)
([Test "Q: instances of non-ex term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 13.923)
([Test "Q: variants of non-ex term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 2.006)
([Test "Q: unifiables of generalised term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 225.075)
([Test "Q: instances of generalised term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 245.253)
([Test "Q: unifiables of existing term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 17.049)
([Test "Q: generalisations of existing term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 1.736)
([Test "Q: instances of existing term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 16.666)
([Test "Q: variants of existing term", Index "DN", Gen "LV",
  Size "Terms:5000-Runs:50"],
 1.887)
([Test "Delete terms", Index "DN", Gen "LV", Size "Terms:5000-Runs:50"],
 2.645)
([Test "Insert terms", Index "DN", Gen "LV", Size "Terms:5000-Runs:50"],
 3.798)
([Test "Content of net", Index "DN", Gen "LV", Size "Terms:5000-Runs:50"],
 26.059)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.026)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.027)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.209)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.212)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.671)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.678)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.298)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.287)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.340)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.414)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:10-Runs:5000"],
 0.494)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:10-Runs:5000"],
 0.848)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:10-Runs:5000"],
 0.825)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.039)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.039)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.401)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.377)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.480)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.534)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.521)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.541)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.561)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.532)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:20-Runs:5000"],
 0.839)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:20-Runs:5000"],
 1.020)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:20-Runs:5000"],
 2.792)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.053)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.053)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.564)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.553)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 2.338)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 2.450)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.689)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.701)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.814)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.795)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:30-Runs:5000"],
 1.266)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:30-Runs:5000"],
 1.686)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:30-Runs:5000"],
 2.247)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.068)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.069)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.724)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.725)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 3.445)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 3.580)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.950)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.951)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 1.061)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:40-Runs:5000"],
 1.033)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:40-Runs:5000"],
 1.670)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:40-Runs:5000"],
 2.495)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:40-Runs:5000"],
 2.795)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.085)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.086)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.923)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.984)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 4.992)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 6.415)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 1.200)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 1.207)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 1.427)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:50-Runs:5000"],
 1.395)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:50-Runs:5000"],
 4.556)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:50-Runs:5000"],
 3.934)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:50-Runs:5000"],
 6.137)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 0.118)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 0.120)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.221)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 2.523)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 12.981)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 9.771)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 2.774)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.636)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.861)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.866)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:70-Runs:5000"],
 4.120)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:70-Runs:5000"],
 5.361)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:70-Runs:5000"],
 8.330)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 0.176)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 0.179)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 1.891)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 4.041)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 22.111)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 19.049)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 4.257)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 2.419)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 2.769)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:100-Runs:5000"],
 2.788)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:100-Runs:5000"],
 4.349)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:100-Runs:5000"],
 9.999)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:100-Runs:5000"],
 11.196)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.047)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.045)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.553)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.715)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 4.258)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 4.300)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.484)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.516)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.571)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.618)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:200-Runs:500"],
 0.895)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:200-Runs:500"],
 1.759)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:200-Runs:500"],
 1.431)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 0.182)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 0.186)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 2.350)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 1.900)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 19.937)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 20.210)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 1.397)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 1.429)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 1.601)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:500-Runs:500"],
 1.604)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:500-Runs:500"],
 2.495)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:500-Runs:500"],
 4.543)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:500-Runs:500"],
 3.893)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 0.285)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 0.279)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 2.846)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 2.933)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 32.423)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 32.211)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 1.915)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 1.842)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 2.166)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:700-Runs:500"],
 2.236)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:700-Runs:500"],
 3.352)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:700-Runs:500"],
 5.958)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:700-Runs:500"],
 32.429)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.045)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.045)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.415)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.407)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 5.772)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 6.008)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.306)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.320)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.322)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.344)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:1000-Runs:50"],
 0.575)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:1000-Runs:50"],
 1.035)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:1000-Runs:50"],
 8.260)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 0.162)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 0.163)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 1.186)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 1.213)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 50.928)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 51.861)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 0.839)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 0.882)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 1.007)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:3000-Runs:50"],
 1.020)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:3000-Runs:50"],
 1.525)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:3000-Runs:50"],
 18.161)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:3000-Runs:50"],
 3.201)
([Test "Q: unifiables of non-ex term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 0.297)
([Test "Q: generalisations of non-ex term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 0.297)
([Test "Q: instances of non-ex term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 2.041)
([Test "Q: variants of non-ex term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 2.183)
([Test "Q: unifiables of generalised term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 147.034)
([Test "Q: instances of generalised term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 144.788)
([Test "Q: unifiables of existing term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 1.764)
([Test "Q: generalisations of existing term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 1.745)
([Test "Q: instances of existing term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 1.998)
([Test "Q: variants of existing term", Index "DN", Gen "NV",
  Size "Terms:5000-Runs:50"],
 2.053)
([Test "Delete terms", Index "DN", Gen "NV", Size "Terms:5000-Runs:50"],
 2.878)
([Test "Insert terms", Index "DN", Gen "NV", Size "Terms:5000-Runs:50"],
 4.072)
([Test "Content of net", Index "DN", Gen "NV", Size "Terms:5000-Runs:50"],
 3.418)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.082)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.079)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.076)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.077)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.915)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.533)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 1.075)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 1.064)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.581)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.580)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:10-Runs:5000"],
 10.287)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:10-Runs:5000"],
 0.406)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:10-Runs:5000"],
 0.020)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.163)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.178)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.168)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.172)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 1.112)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.632)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 1.423)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 1.362)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.822)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.815)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:20-Runs:5000"],
 0.185)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:20-Runs:5000"],
 0.988)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:20-Runs:5000"],
 0.024)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.294)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.272)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.231)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.250)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.660)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.947)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.886)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.967)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.148)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.222)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:30-Runs:5000"],
 0.319)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:30-Runs:5000"],
 1.508)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:30-Runs:5000"],
 0.028)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.454)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.442)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.391)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.392)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 2.221)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 1.397)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 5.141)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 2.769)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 1.658)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:40-Runs:5000"],
 1.679)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:40-Runs:5000"],
 0.463)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:40-Runs:5000"],
 4.462)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:40-Runs:5000"],
 0.032)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.576)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.599)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.425)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.560)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 2.758)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 1.710)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 3.423)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 3.203)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 2.003)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:50-Runs:5000"],
 2.011)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:50-Runs:5000"],
 0.615)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:50-Runs:5000"],
 2.571)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:50-Runs:5000"],
 0.033)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.855)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.863)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.764)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.772)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 4.073)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 2.435)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 4.537)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 4.606)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 2.703)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:70-Runs:5000"],
 2.787)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:70-Runs:5000"],
 1.035)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:70-Runs:5000"],
 2.951)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:70-Runs:5000"],
 0.037)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 1.760)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 1.808)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 40.158)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 1.369)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 48.048)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 4.566)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 47.423)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 47.703)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 45.449)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 5.115)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:100-Runs:5000"],
 1.868)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:100-Runs:5000"],
 44.482)
([Test "Content of net", Index "PITT", Gen "HV",
  Size "Terms:100-Runs:5000"],
 0.047)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.481)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.472)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.395)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.354)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.257)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.913)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.390)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.882)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.936)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.929)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:200-Runs:500"],
 0.456)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:200-Runs:500"],
 1.227)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:200-Runs:500"],
 0.005)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.990)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.952)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.576)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.475)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 4.108)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 2.992)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 4.802)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 4.552)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 2.677)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:500-Runs:500"],
 3.013)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:500-Runs:500"],
 1.605)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:500-Runs:500"],
 5.917)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:500-Runs:500"],
 0.014)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 3.641)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 3.546)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 8.280)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 2.723)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 6.347)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 9.644)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 6.812)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 12.062)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 4.443)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:700-Runs:500"],
 3.992)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:700-Runs:500"],
 8.154)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:700-Runs:500"],
 43.357)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:700-Runs:500"],
 0.025)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.623)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.584)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.477)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.423)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 1.407)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.880)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 1.434)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 1.386)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.756)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.602)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:1000-Runs:50"],
 0.443)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:1000-Runs:50"],
 1.419)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:1000-Runs:50"],
 0.003)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 3.174)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 3.358)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.182)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 1.916)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 4.807)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.947)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 4.369)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 4.210)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.794)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.234)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:3000-Runs:50"],
 2.681)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:3000-Runs:50"],
 8.078)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:3000-Runs:50"],
 0.004)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 7.976)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 6.430)
([Test "Q: instances of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 4.819)
([Test "Q: variants of non-ex term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 5.053)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 10.218)
([Test "Q: instances of generalised term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 7.436)
([Test "Q: unifiables of existing term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 8.792)
([Test "Q: generalisations of existing term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 8.265)
([Test "Q: instances of existing term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 5.103)
([Test "Q: variants of existing term", Index "PITT", Gen "HV",
  Size "Terms:5000-Runs:50"],
 4.662)
([Test "Delete terms", Index "PITT", Gen "HV", Size "Terms:5000-Runs:50"],
 4.863)
([Test "Insert terms", Index "PITT", Gen "HV", Size "Terms:5000-Runs:50"],
 18.168)
([Test "Content of net", Index "PITT", Gen "HV", Size "Terms:5000-Runs:50"],
 0.011)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.085)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.089)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.085)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.079)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.737)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.528)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 1.435)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 1.421)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.737)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.728)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:10-Runs:5000"],
 0.094)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:10-Runs:5000"],
 0.640)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:10-Runs:5000"],
 0.021)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.200)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.214)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.155)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.165)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 1.434)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.770)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 1.531)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 1.782)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.908)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.922)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:20-Runs:5000"],
 0.190)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:20-Runs:5000"],
 1.259)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:20-Runs:5000"],
 0.025)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.304)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.314)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.288)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.282)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 2.155)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 1.159)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 2.380)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 2.373)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 1.424)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:30-Runs:5000"],
 1.315)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:30-Runs:5000"],
 0.317)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:30-Runs:5000"],
 1.920)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:30-Runs:5000"],
 0.028)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.585)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.487)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.408)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.489)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 3.075)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 1.863)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 3.371)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 3.408)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 2.022)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:40-Runs:5000"],
 2.073)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:40-Runs:5000"],
 0.552)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:40-Runs:5000"],
 3.001)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:40-Runs:5000"],
 0.035)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.671)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.683)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.553)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.553)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 4.047)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 2.056)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 4.419)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 4.340)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 2.434)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:50-Runs:5000"],
 2.574)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:50-Runs:5000"],
 0.737)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:50-Runs:5000"],
 3.889)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:50-Runs:5000"],
 0.034)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.073)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.093)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 0.917)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 0.890)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 5.033)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 2.985)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 5.863)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 5.897)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 3.364)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:70-Runs:5000"],
 3.418)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:70-Runs:5000"],
 1.129)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:70-Runs:5000"],
 4.390)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:70-Runs:5000"],
 0.038)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 2.343)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 2.403)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 1.967)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 55.857)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 61.882)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 60.770)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 168.032)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 115.185)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 111.653)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 58.980)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:100-Runs:5000"],
 2.274)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:100-Runs:5000"],
 165.229)
([Test "Content of net", Index "PITT", Gen "MV",
  Size "Terms:100-Runs:5000"],
 0.055)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.710)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.921)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.587)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.548)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.652)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.136)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 2.087)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 2.220)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.303)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.438)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:200-Runs:500"],
 0.601)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:200-Runs:500"],
 2.255)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:200-Runs:500"],
 0.005)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 2.555)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 2.656)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 2.009)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 1.985)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 4.981)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 3.200)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 5.897)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 5.395)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 3.614)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:500-Runs:500"],
 3.600)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:500-Runs:500"],
 2.088)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:500-Runs:500"],
 6.711)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:500-Runs:500"],
 0.012)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 4.174)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 4.104)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 3.522)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 3.418)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 7.855)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 5.269)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 8.664)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 8.578)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 5.850)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:700-Runs:500"],
 5.832)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:700-Runs:500"],
 3.510)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:700-Runs:500"],
 11.281)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:700-Runs:500"],
 0.026)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.719)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.680)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.577)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.550)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 1.009)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.839)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 1.130)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 1.683)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.833)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.886)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:1000-Runs:50"],
 0.542)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:1000-Runs:50"],
 1.630)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:1000-Runs:50"],
 0.002)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 4.711)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 3.481)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 3.345)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 2.642)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 5.451)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 3.775)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 5.178)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 5.229)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 3.000)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:3000-Runs:50"],
 3.243)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:3000-Runs:50"],
 2.701)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:3000-Runs:50"],
 10.264)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:3000-Runs:50"],
 0.004)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 7.598)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 8.812)
([Test "Q: instances of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 6.189)
([Test "Q: variants of non-ex term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 5.470)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 10.254)
([Test "Q: instances of generalised term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 8.276)
([Test "Q: unifiables of existing term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 9.252)
([Test "Q: generalisations of existing term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 9.506)
([Test "Q: instances of existing term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 5.921)
([Test "Q: variants of existing term", Index "PITT", Gen "MV",
  Size "Terms:5000-Runs:50"],
 6.153)
([Test "Delete terms", Index "PITT", Gen "MV", Size "Terms:5000-Runs:50"],
 6.867)
([Test "Insert terms", Index "PITT", Gen "MV", Size "Terms:5000-Runs:50"],
 19.770)
([Test "Content of net", Index "PITT", Gen "MV", Size "Terms:5000-Runs:50"],
 0.018)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.083)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.082)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.076)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.086)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 1.405)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.729)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 1.185)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.902)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.537)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.530)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:10-Runs:5000"],
 0.080)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:10-Runs:5000"],
 0.921)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:10-Runs:5000"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.196)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.189)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.167)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.160)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.383)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.807)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.638)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.659)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.915)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.874)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:20-Runs:5000"],
 0.193)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:20-Runs:5000"],
 1.148)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:20-Runs:5000"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.337)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.353)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.293)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.307)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 2.228)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 1.279)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 2.573)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 2.527)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 1.449)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:30-Runs:5000"],
 1.478)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:30-Runs:5000"],
 0.360)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:30-Runs:5000"],
 2.985)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:30-Runs:5000"],
 0.027)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.559)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.654)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.447)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.485)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 3.315)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 1.894)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 3.678)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 3.695)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 2.156)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:40-Runs:5000"],
 2.075)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:40-Runs:5000"],
 0.568)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:40-Runs:5000"],
 2.726)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:40-Runs:5000"],
 0.036)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.877)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.726)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.686)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.593)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 4.305)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 2.655)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 4.862)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 5.262)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 2.654)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:50-Runs:5000"],
 2.868)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:50-Runs:5000"],
 0.815)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:50-Runs:5000"],
 4.578)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:50-Runs:5000"],
 0.035)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.267)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.233)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 0.978)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.036)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 5.577)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 3.316)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 6.401)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 6.352)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 3.450)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:70-Runs:5000"],
 3.729)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:70-Runs:5000"],
 1.198)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:70-Runs:5000"],
 6.894)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:70-Runs:5000"],
 0.038)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 2.277)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 115.780)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 58.500)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 58.382)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 236.993)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 6.128)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 181.975)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 239.961)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 64.423)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 6.789)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:100-Runs:5000"],
 60.681)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:100-Runs:5000"],
 234.710)
([Test "Content of net", Index "PITT", Gen "LV",
  Size "Terms:100-Runs:5000"],
 0.056)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.590)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.606)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.498)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.574)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.776)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.225)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 2.175)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.906)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.317)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.174)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:200-Runs:500"],
 0.545)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:200-Runs:500"],
 3.524)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:200-Runs:500"],
 0.005)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.577)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.614)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.236)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.116)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 5.308)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 3.075)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 5.872)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 5.578)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 3.995)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:500-Runs:500"],
 3.909)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:500-Runs:500"],
 2.162)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:500-Runs:500"],
 7.229)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:500-Runs:500"],
 0.013)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 4.809)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 4.863)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 3.931)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 4.061)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 49.413)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 5.590)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 49.683)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 49.465)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 46.759)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:700-Runs:500"],
 5.715)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:700-Runs:500"],
 3.722)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:700-Runs:500"],
 50.894)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:700-Runs:500"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.799)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.398)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.652)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.656)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.195)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.745)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.967)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.960)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.811)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.810)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:1000-Runs:50"],
 0.593)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:1000-Runs:50"],
 1.914)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:1000-Runs:50"],
 0.002)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 4.461)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.739)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.699)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 2.848)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 5.528)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.880)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 6.176)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 5.553)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.889)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.130)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:3000-Runs:50"],
 3.635)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:3000-Runs:50"],
 10.194)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:3000-Runs:50"],
 0.006)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 7.903)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 8.550)
([Test "Q: instances of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 6.185)
([Test "Q: variants of non-ex term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 6.024)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 10.962)
([Test "Q: instances of generalised term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 9.234)
([Test "Q: unifiables of existing term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 9.748)
([Test "Q: generalisations of existing term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 10.152)
([Test "Q: instances of existing term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 7.061)
([Test "Q: variants of existing term", Index "PITT", Gen "LV",
  Size "Terms:5000-Runs:50"],
 6.165)
([Test "Delete terms", Index "PITT", Gen "LV", Size "Terms:5000-Runs:50"],
 7.683)
([Test "Insert terms", Index "PITT", Gen "LV", Size "Terms:5000-Runs:50"],
 52.577)
([Test "Content of net", Index "PITT", Gen "LV", Size "Terms:5000-Runs:50"],
 0.019)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.090)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.092)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.072)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.084)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 1.478)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.766)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 1.696)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 1.012)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.545)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.559)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:10-Runs:5000"],
 0.082)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:10-Runs:5000"],
 1.107)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:10-Runs:5000"],
 0.021)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.186)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.204)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.186)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.167)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.516)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.875)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.741)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.761)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.953)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.065)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:20-Runs:5000"],
 0.193)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:20-Runs:5000"],
 1.081)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:20-Runs:5000"],
 0.025)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.327)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.371)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.308)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.290)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 2.221)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 1.220)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 2.704)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 2.736)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 1.463)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:30-Runs:5000"],
 1.385)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:30-Runs:5000"],
 0.451)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:30-Runs:5000"],
 2.647)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:30-Runs:5000"],
 0.028)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.571)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.556)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.482)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.483)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 3.411)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 1.922)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 4.221)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 3.614)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 2.651)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:40-Runs:5000"],
 2.049)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:40-Runs:5000"],
 0.555)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:40-Runs:5000"],
 5.885)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:40-Runs:5000"],
 0.035)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.779)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.711)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.665)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.652)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 4.614)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 2.346)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 5.266)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 5.259)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 2.845)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:50-Runs:5000"],
 2.654)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:50-Runs:5000"],
 0.770)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:50-Runs:5000"],
 3.974)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:50-Runs:5000"],
 0.034)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.352)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 4.968)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.181)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.137)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 9.674)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 7.140)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 10.634)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 10.643)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 3.982)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:70-Runs:5000"],
 4.171)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:70-Runs:5000"],
 1.299)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:70-Runs:5000"],
 8.455)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:70-Runs:5000"],
 0.040)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 2.351)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 2.468)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 2.064)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 1.920)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 17.407)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 9.621)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 22.599)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 18.894)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 10.567)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 10.587)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:100-Runs:5000"],
 6.128)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:100-Runs:5000"],
 15.751)
([Test "Content of net", Index "PITT", Gen "NV",
  Size "Terms:100-Runs:5000"],
 0.050)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.614)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.617)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.526)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.592)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 1.945)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 1.183)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 1.991)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 2.035)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 1.261)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:200-Runs:500"],
 1.307)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:200-Runs:500"],
 0.643)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:200-Runs:500"],
 1.752)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:200-Runs:500"],
 0.005)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 2.738)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 2.608)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 2.423)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 2.264)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 5.288)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 3.450)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 5.871)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 5.862)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 3.544)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:500-Runs:500"],
 3.637)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:500-Runs:500"],
 2.164)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:500-Runs:500"],
 7.159)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:500-Runs:500"],
 0.014)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 4.660)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 4.559)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 3.696)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 3.893)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 8.461)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 47.076)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 51.042)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 51.194)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 6.255)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:700-Runs:500"],
 46.597)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:700-Runs:500"],
 3.918)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:700-Runs:500"],
 12.242)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:700-Runs:500"],
 0.025)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.765)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.809)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.652)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.664)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 1.820)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 1.143)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 1.593)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 1.308)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.893)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.969)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:1000-Runs:50"],
 0.673)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:1000-Runs:50"],
 2.107)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:1000-Runs:50"],
 0.002)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.920)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.980)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.061)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.151)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 4.748)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.981)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 4.819)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 4.808)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.474)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:3000-Runs:50"],
 4.099)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:3000-Runs:50"],
 3.813)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:3000-Runs:50"],
 11.505)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:3000-Runs:50"],
 0.005)
([Test "Q: unifiables of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 7.823)
([Test "Q: generalisations of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 7.599)
([Test "Q: instances of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.163)
([Test "Q: variants of non-ex term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.417)
([Test "Q: unifiables of generalised term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 9.497)
([Test "Q: instances of generalised term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 7.548)
([Test "Q: unifiables of existing term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 9.224)
([Test "Q: generalisations of existing term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 9.408)
([Test "Q: instances of existing term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.575)
([Test "Q: variants of existing term", Index "PITT", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.767)
([Test "Delete terms", Index "PITT", Gen "NV", Size "Terms:5000-Runs:50"],
 7.350)
([Test "Insert terms", Index "PITT", Gen "NV", Size "Terms:5000-Runs:50"],
 21.779)
([Test "Content of net", Index "PITT", Gen "NV", Size "Terms:5000-Runs:50"],
 0.008)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.085)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.088)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.077)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.086)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.963)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.513)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 1.099)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.901)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.467)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:10-Runs:5000"],
 0.433)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:10-Runs:5000"],
 0.445)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:10-Runs:5000"],
 1.715)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:10-Runs:5000"],
 0.022)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.187)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.168)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.159)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.155)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 1.041)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.635)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 1.242)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 1.217)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.752)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:20-Runs:5000"],
 0.750)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:20-Runs:5000"],
 0.929)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:20-Runs:5000"],
 1.120)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:20-Runs:5000"],
 0.022)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.353)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.319)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.251)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 0.298)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.678)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.064)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.980)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.951)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.181)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:30-Runs:5000"],
 1.185)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:30-Runs:5000"],
 1.556)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:30-Runs:5000"],
 1.929)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:30-Runs:5000"],
 0.021)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.543)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.590)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.462)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 0.494)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 2.402)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 1.538)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 3.199)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 2.876)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 1.731)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:40-Runs:5000"],
 1.767)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:40-Runs:5000"],
 2.534)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:40-Runs:5000"],
 3.277)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:40-Runs:5000"],
 0.024)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.658)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.735)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.668)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 0.545)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 2.866)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 1.785)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 3.461)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 3.429)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 2.162)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:50-Runs:5000"],
 2.109)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:50-Runs:5000"],
 2.650)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:50-Runs:5000"],
 4.281)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:50-Runs:5000"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 1.043)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 1.055)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.802)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 0.841)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 4.156)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 2.419)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 4.691)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 4.815)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 2.961)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:70-Runs:5000"],
 2.806)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:70-Runs:5000"],
 4.009)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:70-Runs:5000"],
 4.991)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:70-Runs:5000"],
 0.028)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 1.855)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 1.911)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 1.642)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 1.605)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 52.268)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 3.980)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 53.123)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 52.820)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 51.857)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:100-Runs:5000"],
 49.452)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:100-Runs:5000"],
 51.208)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:100-Runs:5000"],
 141.718)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:100-Runs:5000"],
 0.041)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.544)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.545)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.454)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.479)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.396)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 0.963)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 2.569)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 2.730)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.498)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:200-Runs:500"],
 1.471)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:200-Runs:500"],
 2.416)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:200-Runs:500"],
 2.731)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:200-Runs:500"],
 0.004)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 2.877)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 2.238)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.882)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 1.614)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 3.719)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 2.590)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 4.426)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 4.943)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 3.326)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:500-Runs:500"],
 3.275)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:500-Runs:500"],
 5.831)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:500-Runs:500"],
 13.271)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:500-Runs:500"],
 0.014)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 9.039)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 3.938)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 2.870)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 2.776)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 5.715)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 3.670)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 6.283)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 11.747)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 4.116)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:700-Runs:500"],
 3.983)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:700-Runs:500"],
 14.671)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:700-Runs:500"],
 33.724)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:700-Runs:500"],
 0.012)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.616)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.606)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.473)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.461)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 1.332)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.811)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 1.432)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 1.409)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.823)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:1000-Runs:50"],
 0.696)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:1000-Runs:50"],
 1.665)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:1000-Runs:50"],
 13.182)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:1000-Runs:50"],
 0.001)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 3.249)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 3.364)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.506)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.362)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 4.163)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.828)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 4.182)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 3.925)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.516)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:3000-Runs:50"],
 2.466)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:3000-Runs:50"],
 12.320)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:3000-Runs:50"],
 34.252)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:3000-Runs:50"],
 0.007)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 7.463)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 7.182)
([Test "Q: instances of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 4.842)
([Test "Q: variants of non-ex term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 4.480)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 8.798)
([Test "Q: instances of generalised term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 5.837)
([Test "Q: unifiables of existing term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 8.780)
([Test "Q: generalisations of existing term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 10.718)
([Test "Q: instances of existing term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 5.204)
([Test "Q: variants of existing term", Index "PI_", Gen "HV",
  Size "Terms:5000-Runs:50"],
 4.468)
([Test "Delete terms", Index "PI_", Gen "HV", Size "Terms:5000-Runs:50"],
 34.275)
([Test "Insert terms", Index "PI_", Gen "HV", Size "Terms:5000-Runs:50"],
 83.641)
([Test "Content of net", Index "PI_", Gen "HV", Size "Terms:5000-Runs:50"],
 0.010)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.104)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.094)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.077)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.080)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.690)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.447)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.852)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.803)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.548)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:10-Runs:5000"],
 0.477)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:10-Runs:5000"],
 0.526)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:10-Runs:5000"],
 0.634)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:10-Runs:5000"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.246)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.226)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.184)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.187)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 1.377)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.815)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 1.667)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 1.670)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.965)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:20-Runs:5000"],
 0.959)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:20-Runs:5000"],
 1.126)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:20-Runs:5000"],
 2.076)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:20-Runs:5000"],
 0.025)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.438)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.331)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.325)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 0.371)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 2.146)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 1.222)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 2.451)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 2.490)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 1.514)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:30-Runs:5000"],
 1.766)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:30-Runs:5000"],
 3.068)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:30-Runs:5000"],
 18.898)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:30-Runs:5000"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.579)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.580)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.495)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 0.561)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 3.051)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 1.749)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 3.510)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 3.570)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 2.052)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:40-Runs:5000"],
 2.034)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:40-Runs:5000"],
 2.629)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:40-Runs:5000"],
 3.903)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:40-Runs:5000"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.964)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.913)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.699)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 0.741)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 3.790)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 2.448)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 4.547)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 4.741)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 2.661)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:50-Runs:5000"],
 2.500)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:50-Runs:5000"],
 3.899)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:50-Runs:5000"],
 4.613)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:50-Runs:5000"],
 0.025)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.271)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.353)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.079)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 1.015)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 5.231)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 3.169)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 5.976)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 6.132)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 3.787)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:70-Runs:5000"],
 3.670)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:70-Runs:5000"],
 4.890)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:70-Runs:5000"],
 5.993)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:70-Runs:5000"],
 0.028)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 2.486)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 49.887)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 2.139)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 2.041)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 55.870)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 5.715)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 105.752)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 58.364)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 54.600)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:100-Runs:5000"],
 54.241)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:100-Runs:5000"],
 57.505)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:100-Runs:5000"],
 201.313)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:100-Runs:5000"],
 0.036)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.608)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.665)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.533)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 0.519)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.673)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.482)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.842)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 2.382)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.208)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:200-Runs:500"],
 1.203)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:200-Runs:500"],
 2.271)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:200-Runs:500"],
 3.898)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:200-Runs:500"],
 0.004)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 2.774)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 2.618)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 2.210)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 2.566)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 5.081)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 3.706)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 5.933)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 5.778)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 3.881)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:500-Runs:500"],
 3.385)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:500-Runs:500"],
 7.174)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:500-Runs:500"],
 40.009)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:500-Runs:500"],
 0.013)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 4.664)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 4.992)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 3.962)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 4.010)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 9.929)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 5.325)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 10.954)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 11.289)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 5.721)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:700-Runs:500"],
 5.613)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:700-Runs:500"],
 14.050)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:700-Runs:500"],
 26.228)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:700-Runs:500"],
 0.012)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.808)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.797)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.621)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.645)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 1.153)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.847)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 1.305)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 2.230)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.743)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:1000-Runs:50"],
 0.744)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:1000-Runs:50"],
 1.838)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:1000-Runs:50"],
 4.877)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:1000-Runs:50"],
 0.001)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 4.900)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 4.949)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 2.921)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 4.019)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 6.318)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 3.086)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 5.614)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 5.570)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 4.280)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:3000-Runs:50"],
 3.067)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:3000-Runs:50"],
 15.362)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:3000-Runs:50"],
 34.624)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:3000-Runs:50"],
 0.003)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 8.131)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 9.175)
([Test "Q: instances of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 6.318)
([Test "Q: variants of non-ex term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 5.928)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 10.917)
([Test "Q: instances of generalised term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 7.502)
([Test "Q: unifiables of existing term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 9.965)
([Test "Q: generalisations of existing term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 10.868)
([Test "Q: instances of existing term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 5.957)
([Test "Q: variants of existing term", Index "PI_", Gen "MV",
  Size "Terms:5000-Runs:50"],
 7.022)
([Test "Delete terms", Index "PI_", Gen "MV", Size "Terms:5000-Runs:50"],
 37.484)
([Test "Insert terms", Index "PI_", Gen "MV", Size "Terms:5000-Runs:50"],
 90.606)
([Test "Content of net", Index "PI_", Gen "MV", Size "Terms:5000-Runs:50"],
 0.008)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.102)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.123)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.092)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.098)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 1.316)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.679)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 1.068)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.917)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.507)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:10-Runs:5000"],
 0.513)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:10-Runs:5000"],
 0.570)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:10-Runs:5000"],
 0.553)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:10-Runs:5000"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.239)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.244)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.203)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.215)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.709)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.865)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.803)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.852)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 1.013)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:20-Runs:5000"],
 0.983)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:20-Runs:5000"],
 1.304)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:20-Runs:5000"],
 1.869)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:20-Runs:5000"],
 0.023)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.430)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.384)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.315)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 0.358)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 2.282)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 1.266)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 2.639)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 2.667)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 1.473)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:30-Runs:5000"],
 1.474)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:30-Runs:5000"],
 1.815)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:30-Runs:5000"],
 2.477)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:30-Runs:5000"],
 0.026)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.713)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.620)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.566)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 0.583)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 3.365)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 1.990)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 3.731)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 3.785)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 2.263)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:40-Runs:5000"],
 2.204)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:40-Runs:5000"],
 2.646)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:40-Runs:5000"],
 3.195)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:40-Runs:5000"],
 0.029)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 1.017)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.905)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.763)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 0.881)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 4.408)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 2.342)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 5.387)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 4.909)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 3.059)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:50-Runs:5000"],
 2.908)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:50-Runs:5000"],
 3.833)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:50-Runs:5000"],
 5.995)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:50-Runs:5000"],
 0.026)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.307)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.361)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.215)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 1.228)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 5.767)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 3.571)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 6.780)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 6.613)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 3.829)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:70-Runs:5000"],
 3.986)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:70-Runs:5000"],
 5.176)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:70-Runs:5000"],
 6.552)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:70-Runs:5000"],
 0.029)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 2.677)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 57.861)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 2.167)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 58.143)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 232.500)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 63.094)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 234.257)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 178.378)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 63.397)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:100-Runs:5000"],
 118.051)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:100-Runs:5000"],
 176.456)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:100-Runs:5000"],
 121.846)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:100-Runs:5000"],
 0.048)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.743)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.739)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.595)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 0.578)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.922)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.242)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 2.260)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 2.124)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.437)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:200-Runs:500"],
 1.336)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:200-Runs:500"],
 3.203)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:200-Runs:500"],
 3.897)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:200-Runs:500"],
 0.005)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.956)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.958)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.251)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 2.305)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 4.823)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 3.192)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 5.499)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 5.587)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 3.535)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:500-Runs:500"],
 3.658)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:500-Runs:500"],
 6.526)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:500-Runs:500"],
 14.862)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:500-Runs:500"],
 0.008)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 5.208)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 5.466)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 4.179)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 4.015)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 7.738)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 5.225)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 48.390)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 48.321)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 5.322)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:700-Runs:500"],
 45.193)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:700-Runs:500"],
 50.411)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:700-Runs:500"],
 27.927)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:700-Runs:500"],
 0.014)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.784)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.814)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.667)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.669)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.144)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 0.970)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.961)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.937)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.109)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:1000-Runs:50"],
 1.109)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:1000-Runs:50"],
 2.232)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:1000-Runs:50"],
 5.718)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:1000-Runs:50"],
 0.001)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.872)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.961)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.197)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.227)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 5.026)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.860)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 5.244)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 5.102)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.567)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:3000-Runs:50"],
 3.379)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:3000-Runs:50"],
 16.038)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:3000-Runs:50"],
 39.047)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:3000-Runs:50"],
 0.008)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 11.601)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 14.588)
([Test "Q: instances of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 7.001)
([Test "Q: variants of non-ex term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 6.708)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 11.565)
([Test "Q: instances of generalised term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 6.875)
([Test "Q: unifiables of existing term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 11.838)
([Test "Q: generalisations of existing term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 9.179)
([Test "Q: instances of existing term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 9.242)
([Test "Q: variants of existing term", Index "PI_", Gen "LV",
  Size "Terms:5000-Runs:50"],
 6.646)
([Test "Delete terms", Index "PI_", Gen "LV", Size "Terms:5000-Runs:50"],
 38.080)
([Test "Insert terms", Index "PI_", Gen "LV", Size "Terms:5000-Runs:50"],
 135.838)
([Test "Content of net", Index "PI_", Gen "LV", Size "Terms:5000-Runs:50"],
 0.012)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.097)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.103)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.078)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.084)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.791)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.442)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.898)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.920)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.522)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:10-Runs:5000"],
 0.507)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:10-Runs:5000"],
 0.650)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:10-Runs:5000"],
 0.791)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:10-Runs:5000"],
 0.022)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.226)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.253)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.208)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.208)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.715)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.878)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.819)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 1.782)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.970)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:20-Runs:5000"],
 0.970)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:20-Runs:5000"],
 1.246)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:20-Runs:5000"],
 2.010)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:20-Runs:5000"],
 0.024)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.412)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.415)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.377)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 0.370)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 2.365)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 1.339)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 2.704)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 2.779)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 1.657)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:30-Runs:5000"],
 1.490)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:30-Runs:5000"],
 1.851)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:30-Runs:5000"],
 2.542)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:30-Runs:5000"],
 0.024)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.652)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.716)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.613)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 0.548)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 3.489)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 1.961)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 4.010)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 4.097)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 2.294)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:40-Runs:5000"],
 2.258)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:40-Runs:5000"],
 2.798)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:40-Runs:5000"],
 4.159)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:40-Runs:5000"],
 0.024)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.979)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 1.003)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.823)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 0.825)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 4.430)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 2.400)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 5.342)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 5.160)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 3.037)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:50-Runs:5000"],
 2.599)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:50-Runs:5000"],
 4.004)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:50-Runs:5000"],
 6.226)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:50-Runs:5000"],
 0.026)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.483)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.387)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.208)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 1.151)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 5.887)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 3.427)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 6.764)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 6.741)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 3.876)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:70-Runs:5000"],
 3.834)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:70-Runs:5000"],
 5.385)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:70-Runs:5000"],
 7.140)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:70-Runs:5000"],
 0.027)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 59.566)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 116.372)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 58.638)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 2.412)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 180.798)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 64.064)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 294.741)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 181.972)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 121.380)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:100-Runs:5000"],
 122.217)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:100-Runs:5000"],
 237.796)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:100-Runs:5000"],
 184.476)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:100-Runs:5000"],
 0.052)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.667)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.821)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.644)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 0.584)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 1.924)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 1.285)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 2.244)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 2.238)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 1.673)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:200-Runs:500"],
 2.098)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:200-Runs:500"],
 3.359)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:200-Runs:500"],
 3.665)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:200-Runs:500"],
 0.006)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 3.117)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 3.248)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 2.619)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 2.612)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 5.412)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 3.540)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 6.354)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 6.327)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 4.067)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:500-Runs:500"],
 4.315)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:500-Runs:500"],
 7.331)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:500-Runs:500"],
 15.320)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:500-Runs:500"],
 0.010)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 5.140)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 5.015)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 4.408)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 4.351)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 8.976)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 6.133)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 10.361)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 10.100)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 6.527)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:700-Runs:500"],
 6.375)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:700-Runs:500"],
 13.398)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:700-Runs:500"],
 61.844)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:700-Runs:500"],
 0.012)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.873)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.858)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.813)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.757)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 1.831)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 1.115)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 1.577)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 1.380)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.952)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:1000-Runs:50"],
 0.955)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:1000-Runs:50"],
 2.762)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:1000-Runs:50"],
 5.396)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:1000-Runs:50"],
 0.001)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 4.169)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 4.194)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.402)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.489)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 5.027)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.538)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 5.057)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 5.115)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.669)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:3000-Runs:50"],
 3.604)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:3000-Runs:50"],
 14.774)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:3000-Runs:50"],
 40.788)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:3000-Runs:50"],
 0.004)
([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 7.455)
([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 8.046)
([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.372)
([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.948)
([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 8.962)
([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.854)
([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 8.698)
([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 8.741)
([Test "Q: instances of existing term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.465)
([Test "Q: variants of existing term", Index "PI_", Gen "NV",
  Size "Terms:5000-Runs:50"],
 6.354)
([Test "Delete terms", Index "PI_", Gen "NV", Size "Terms:5000-Runs:50"],
 33.185)
([Test "Insert terms", Index "PI_", Gen "NV", Size "Terms:5000-Runs:50"],
 94.433)
([Test "Content of net", Index "PI_", Gen "NV", Size "Terms:5000-Runs:50"],
 0.005)


Output (line 133 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
val dn_bench = fn:
   (tag * (int -> term Gen_Base.gen)) list ->
     (int * Random.rand list) list -> (tag list * Time.time) list
val pi_bench = fn:
   (tag * (int -> term Gen_Base.gen)) list ->
     (int * Random.rand list) list -> (tag list * Time.time) list
val pitt_bench = fn:
   (tag * (int -> term Gen_Base.gen)) list ->
     (int * Random.rand list) list -> (tag list * Time.time) list
val tt_bench = fn:
   (tag * (int -> term Gen_Base.gen)) list ->
     (int * Random.rand list) list -> (tag list * Time.time) list
val benches = [fn, fn, fn, fn]:
   ((tag * (int -> term Gen_Base.gen)) list ->
      (int * Random.rand list) list -> (tag list * Time.time) list
   )
   list
val gc = fn: unit -> unit
val it = (): unit
val it = (): unit
val timing = {cpu = 101122.941, elapsed = 54411.092, gc = 53250.067}:
   Timing.timing
val benchmarks =
   [([Test "Content of net", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     0.005),
    ([Test "Insert terms", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     94.433),
    ([Test "Delete terms", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     33.185),
    ([Test "Q: variants of existing term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     6.354),
    ([Test "Q: instances of existing term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     6.465),
    ([Test "Q: generalisations of existing term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     8.741),
    ([Test "Q: unifiables of existing term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     8.698),
    ([Test "Q: instances of generalised term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     6.854),
    ([Test "Q: unifiables of generalised term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     8.962),
    ([Test "Q: variants of non-ex term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     6.948),
    ([Test "Q: instances of non-ex term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     6.372),
    ([Test "Q: generalisations of non-ex term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     8.046),
    ([Test "Q: unifiables of non-ex term", Index "PI_", Gen "NV",
      Size "Terms:5000-Runs:50"],
     7.455),
    ([Test "Content of net", Index "PI_", Gen "NV",
      Size "Terms:3000-Runs:50"],
     0.004),
    ([Test "Insert terms", Index "PI_", Gen "NV",
      Size "Terms:3000-Runs:50"],
     40.788),
    ([Test "Delete terms", Index "PI_", Gen "NV", Size "..."], 14.774),
    ([Test "Q: variants of existing term", Index "PI_", Gen "...", ...],
     3.604),
    ([Test "Q: instances of existing term", Index "...", ...], 3.669),
    ([Test "...", ...], 5.115), ([...], 5.057), ...]:
   (tag list * Time.time) list
val it = (): unit

Output (line 162 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
{cpu = 101122.941, elapsed = 54411.092, gc = 53250.067}

Output (line 162 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
val compare = fn: string -> tag -> tag -> tag list -> unit

Output (line 169 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Variants over Vars. Existing
     PI_    PITT      DN     TT_
  157.577  85.847  16.698   1.546	 NV
  191.441  39.244  15.617   1.525	 LV
  86.681  91.162  17.026   1.542	 MV
  74.860  29.641  12.762   1.498	 HV

Output (line 169 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Instances over Vars. Generalised
     PI_    PITT      DN     TT_
  96.976  88.272  302.853     N/A	 NV
  95.172  40.555  400.875     N/A	 LV
  37.513  92.626  405.672     N/A	 MV
  28.632  37.032  309.895     N/A	 HV

Output (line 169 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Generalisations over Vars. Existing
     PI_    PITT      DN     TT_
  237.350  118.532  14.476     N/A	 NV
  271.369  334.971  14.043     N/A	 LV
  115.887  167.016  13.710     N/A	 MV
  103.481  95.031  12.036     N/A	 HV

Output (line 169 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Unifiables over Vars. Generalised
     PI_    PITT      DN     TT_
  231.605  72.080  308.369     N/A	 NV
  283.565  329.389  376.152     N/A	 LV
  107.227  109.565  455.927     N/A	 MV
  90.497  88.932  327.780     N/A	 HV

Output (line 177 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
variants over Size. Existing HV
     PI_    PITT      DN     TT_
   4.468   4.662   1.432   0.270	 Terms:5000-Runs:50
   2.466   2.234   0.815   0.145	 Terms:3000-Runs:50
   0.696   0.602   0.309   0.035	 Terms:1000-Runs:50
   3.983   3.992   1.511   0.220	 Terms:700-Runs:500
   3.275   3.013   1.099   0.144	 Terms:500-Runs:500
   1.471   0.929   0.461   0.046	 Terms:200-Runs:500
  49.452   5.115   2.217   0.194	 Terms:100-Runs:5000
   2.806   2.787   1.672   0.140	 Terms:70-Runs:5000
   2.109   2.011   1.063   0.098	 Terms:50-Runs:5000
   1.767   1.679   0.860   0.077	 Terms:40-Runs:5000
   1.185   1.222   0.660   0.059	 Terms:30-Runs:5000
   0.750   0.815   0.430   0.042	 Terms:20-Runs:5000
   0.433   0.580   0.233   0.027	 Terms:10-Runs:5000

Output (line 177 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
instance over Size. Generalised HV
     PI_    PITT      DN     TT_
   5.837   7.436  143.370     N/A	 Terms:5000-Runs:50
   2.828   2.947  51.168     N/A	 Terms:3000-Runs:50
   0.811   0.880   6.035     N/A	 Terms:1000-Runs:50
   3.670   9.644  59.831     N/A	 Terms:700-Runs:500
   2.590   2.992  16.953     N/A	 Terms:500-Runs:500
   0.963   0.913   3.340     N/A	 Terms:200-Runs:500
   3.980   4.566  11.309     N/A	 Terms:100-Runs:5000
   2.419   2.435   7.555     N/A	 Terms:70-Runs:5000
   1.785   1.710   3.924     N/A	 Terms:50-Runs:5000
   1.538   1.397   2.805     N/A	 Terms:40-Runs:5000
   1.064   0.947   1.968     N/A	 Terms:30-Runs:5000
   0.635   0.632   1.142     N/A	 Terms:20-Runs:5000
   0.513   0.533   0.495     N/A	 Terms:10-Runs:5000

Output (line 177 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
generalisations over Size. Existing HV
     PI_    PITT      DN     TT_
  10.718   8.265   1.483     N/A	 Terms:5000-Runs:50
   3.925   4.210   0.824     N/A	 Terms:3000-Runs:50
   1.409   1.386   0.236     N/A	 Terms:1000-Runs:50
  11.747  12.062   1.577     N/A	 Terms:700-Runs:500
   4.943   4.552   1.115     N/A	 Terms:500-Runs:500
   2.730   1.882   0.369     N/A	 Terms:200-Runs:500
  52.820  47.703   2.041     N/A	 Terms:100-Runs:5000
   4.815   4.606   1.410     N/A	 Terms:70-Runs:5000
   3.429   3.203   1.034     N/A	 Terms:50-Runs:5000
   2.876   2.769   0.757     N/A	 Terms:40-Runs:5000
   1.951   1.967   0.564     N/A	 Terms:30-Runs:5000
   1.217   1.362   0.413     N/A	 Terms:20-Runs:5000
   0.901   1.064   0.212     N/A	 Terms:10-Runs:5000

Output (line 177 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
unifiables over Size. Generalised HV
     PI_    PITT      DN     TT_
   8.798  10.218  157.441     N/A	 Terms:5000-Runs:50
   4.163   4.807  55.342     N/A	 Terms:3000-Runs:50
   1.332   1.407   6.587     N/A	 Terms:1000-Runs:50
   5.715   6.347  57.345     N/A	 Terms:700-Runs:500
   3.719   4.108  18.092     N/A	 Terms:500-Runs:500
   1.396   1.257   3.588     N/A	 Terms:200-Runs:500
  52.268  48.048  11.610     N/A	 Terms:100-Runs:5000
   4.156   4.073   7.491     N/A	 Terms:70-Runs:5000
   2.866   2.758   3.977     N/A	 Terms:50-Runs:5000
   2.402   2.221   2.836     N/A	 Terms:40-Runs:5000
   1.678   1.660   1.857     N/A	 Terms:30-Runs:5000
   1.041   1.112   1.141     N/A	 Terms:20-Runs:5000
   0.963   0.915   0.472     N/A	 Terms:10-Runs:5000

Output (line 185 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
variants over Size. Existing MV
     PI_    PITT      DN     TT_
   7.022   6.153   1.679   0.278	 Terms:5000-Runs:50
   3.067   3.243   0.970   0.144	 Terms:3000-Runs:50
   0.744   0.886   0.309   0.035	 Terms:1000-Runs:50
   5.613   5.832   3.904   0.238	 Terms:700-Runs:500
   3.385   3.600   1.374   0.144	 Terms:500-Runs:500
   1.203   1.438   0.490   0.047	 Terms:200-Runs:500
  54.241  58.980   2.652   0.209	 Terms:100-Runs:5000
   3.670   3.418   1.860   0.141	 Terms:70-Runs:5000
   2.500   2.574   1.246   0.101	 Terms:50-Runs:5000
   2.034   2.073   0.997   0.079	 Terms:40-Runs:5000
   1.766   1.315   0.769   0.058	 Terms:30-Runs:5000
   0.959   0.922   0.527   0.042	 Terms:20-Runs:5000
   0.477   0.728   0.250   0.026	 Terms:10-Runs:5000

Output (line 185 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
instance over Size. Generalised MV
     PI_    PITT      DN     TT_
   7.502   8.276  225.147     N/A	 Terms:5000-Runs:50
   3.086   3.775  50.612     N/A	 Terms:3000-Runs:50
   0.847   0.839   5.825     N/A	 Terms:1000-Runs:50
   5.325   5.269  46.730     N/A	 Terms:700-Runs:500
   3.706   3.200  17.633     N/A	 Terms:500-Runs:500
   1.482   1.136   3.481     N/A	 Terms:200-Runs:500
   5.715  60.770  28.599     N/A	 Terms:100-Runs:5000
   3.169   2.985  15.178     N/A	 Terms:70-Runs:5000
   2.448   2.056   4.853     N/A	 Terms:50-Runs:5000
   1.749   1.863   3.326     N/A	 Terms:40-Runs:5000
   1.222   1.159   2.294     N/A	 Terms:30-Runs:5000
   0.815   0.770   1.420     N/A	 Terms:20-Runs:5000
   0.447   0.528   0.573     N/A	 Terms:10-Runs:5000

Output (line 185 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
generalisations over Size. Existing MV
     PI_    PITT      DN     TT_
  10.868   9.506   1.802     N/A	 Terms:5000-Runs:50
   5.570   5.229   0.958     N/A	 Terms:3000-Runs:50
   2.230   1.683   0.297     N/A	 Terms:1000-Runs:50
  11.289   8.578   1.613     N/A	 Terms:700-Runs:500
   5.778   5.395   1.320     N/A	 Terms:500-Runs:500
   2.382   2.220   0.488     N/A	 Terms:200-Runs:500
  58.364  115.185   2.271     N/A	 Terms:100-Runs:5000
   6.132   5.897   1.600     N/A	 Terms:70-Runs:5000
   4.741   4.340   1.102     N/A	 Terms:50-Runs:5000
   3.570   3.408   0.832     N/A	 Terms:40-Runs:5000
   2.490   2.373   0.684     N/A	 Terms:30-Runs:5000
   1.670   1.782   0.516     N/A	 Terms:20-Runs:5000
   0.803   1.421   0.227     N/A	 Terms:10-Runs:5000

Output (line 185 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
unifiables over Size. Generalised MV
     PI_    PITT      DN     TT_
  10.917  10.254  250.520     N/A	 Terms:5000-Runs:50
   6.318   5.451  52.502     N/A	 Terms:3000-Runs:50
   1.153   1.009   5.969     N/A	 Terms:1000-Runs:50
   9.929   7.855  46.073     N/A	 Terms:700-Runs:500
   5.081   4.981  18.296     N/A	 Terms:500-Runs:500
   1.673   1.652   3.576     N/A	 Terms:200-Runs:500
  55.870  61.882  39.212     N/A	 Terms:100-Runs:5000
   5.231   5.033   9.759     N/A	 Terms:70-Runs:5000
   3.790   4.047  22.674     N/A	 Terms:50-Runs:5000
   3.051   3.075   3.232     N/A	 Terms:40-Runs:5000
   2.146   2.155   2.198     N/A	 Terms:30-Runs:5000
   1.377   1.434   1.366     N/A	 Terms:20-Runs:5000
   0.690   0.737   0.550     N/A	 Terms:10-Runs:5000

Output (line 193 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
variants over Size. Existing LV
     PI_    PITT      DN     TT_
   6.646   6.165   1.887   0.280	 Terms:5000-Runs:50
   3.379   3.130   1.060   0.146	 Terms:3000-Runs:50
   1.109   0.810   0.296   0.035	 Terms:1000-Runs:50
  45.193   5.715   2.025   0.225	 Terms:700-Runs:500
   3.658   3.909   1.514   0.150	 Terms:500-Runs:500
   1.336   1.174   0.552   0.047	 Terms:200-Runs:500
  118.051   6.789   2.603   0.206	 Terms:100-Runs:5000
   3.986   3.729   1.743   0.135	 Terms:70-Runs:5000
   2.908   2.868   1.310   0.097	 Terms:50-Runs:5000
   2.204   2.075   1.013   0.079	 Terms:40-Runs:5000
   1.474   1.478   0.808   0.059	 Terms:30-Runs:5000
   0.983   0.874   0.531   0.042	 Terms:20-Runs:5000
   0.513   0.530   0.276   0.026	 Terms:10-Runs:5000

Output (line 193 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
instance over Size. Generalised LV
     PI_    PITT      DN     TT_
   6.875   9.234  245.253     N/A	 Terms:5000-Runs:50
   3.860   3.880  49.526     N/A	 Terms:3000-Runs:50
   0.970   0.745   6.013     N/A	 Terms:1000-Runs:50
   5.225   5.590  31.951     N/A	 Terms:700-Runs:500
   3.192   3.075  19.460     N/A	 Terms:500-Runs:500
   1.242   1.225   4.226     N/A	 Terms:200-Runs:500
  63.094   6.128  23.962     N/A	 Terms:100-Runs:5000
   3.571   3.316   7.391     N/A	 Terms:70-Runs:5000
   2.342   2.655   5.140     N/A	 Terms:50-Runs:5000
   1.990   1.894   3.360     N/A	 Terms:40-Runs:5000
   1.266   1.279   2.453     N/A	 Terms:30-Runs:5000
   0.865   0.807   1.522     N/A	 Terms:20-Runs:5000
   0.679   0.729   0.618     N/A	 Terms:10-Runs:5000

Output (line 193 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
generalisations over Size. Existing LV
     PI_    PITT      DN     TT_
   9.179  10.152   1.736     N/A	 Terms:5000-Runs:50
   5.102   5.553   0.937     N/A	 Terms:3000-Runs:50
   1.937   1.960   0.298     N/A	 Terms:1000-Runs:50
  48.321  49.465   1.708     N/A	 Terms:700-Runs:500
   5.587   5.578   1.300     N/A	 Terms:500-Runs:500
   2.124   1.906   0.478     N/A	 Terms:200-Runs:500
  178.378  239.961   2.291     N/A	 Terms:100-Runs:5000
   6.613   6.352   1.709     N/A	 Terms:70-Runs:5000
   4.909   5.262   1.121     N/A	 Terms:50-Runs:5000
   3.785   3.695   0.886     N/A	 Terms:40-Runs:5000
   2.667   2.527   0.756     N/A	 Terms:30-Runs:5000
   1.852   1.659   0.529     N/A	 Terms:20-Runs:5000
   0.917   0.902   0.294     N/A	 Terms:10-Runs:5000

Output (line 193 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
unifiables over Size. Generalised LV
     PI_    PITT      DN     TT_
  11.565  10.962  225.075     N/A	 Terms:5000-Runs:50
   5.026   5.528  50.491     N/A	 Terms:3000-Runs:50
   1.144   1.195   5.732     N/A	 Terms:1000-Runs:50
   7.738  49.413  32.446     N/A	 Terms:700-Runs:500
   4.823   5.308  19.562     N/A	 Terms:500-Runs:500
   1.922   1.776   4.114     N/A	 Terms:200-Runs:500
  232.500  236.993  19.230     N/A	 Terms:100-Runs:5000
   5.767   5.577   7.259     N/A	 Terms:70-Runs:5000
   4.408   4.305   4.646     N/A	 Terms:50-Runs:5000
   3.365   3.315   3.222     N/A	 Terms:40-Runs:5000
   2.282   2.228   2.322     N/A	 Terms:30-Runs:5000
   1.709   1.383   1.447     N/A	 Terms:20-Runs:5000
   1.316   1.405   0.607     N/A	 Terms:10-Runs:5000

Output (line 201 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
variants over Size. Existing NV
     PI_    PITT      DN     TT_
   6.354   6.767   2.053   0.277	 Terms:5000-Runs:50
   3.604   4.099   1.020   0.145	 Terms:3000-Runs:50
   0.955   0.969   0.344   0.032	 Terms:1000-Runs:50
   6.375  46.597   2.236   0.228	 Terms:700-Runs:500
   4.315   3.637   1.604   0.147	 Terms:500-Runs:500
   2.098   1.307   0.618   0.049	 Terms:200-Runs:500
  122.217  10.587   2.788   0.227	 Terms:100-Runs:5000
   3.834   4.171   1.866   0.146	 Terms:70-Runs:5000
   2.599   2.654   1.395   0.095	 Terms:50-Runs:5000
   2.258   2.049   1.033   0.076	 Terms:40-Runs:5000
   1.490   1.385   0.795   0.058	 Terms:30-Runs:5000
   0.970   1.065   0.532   0.041	 Terms:20-Runs:5000
   0.507   0.559   0.414   0.026	 Terms:10-Runs:5000

Output (line 201 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
instance over Size. Generalised NV
     PI_    PITT      DN     TT_
   6.854   7.548  144.788     N/A	 Terms:5000-Runs:50
   3.538   3.981  51.861     N/A	 Terms:3000-Runs:50
   1.115   1.143   6.008     N/A	 Terms:1000-Runs:50
   6.133  47.076  32.211     N/A	 Terms:700-Runs:500
   3.540   3.450  20.210     N/A	 Terms:500-Runs:500
   1.285   1.183   4.300     N/A	 Terms:200-Runs:500
  64.064   9.621  19.049     N/A	 Terms:100-Runs:5000
   3.427   7.140   9.771     N/A	 Terms:70-Runs:5000
   2.400   2.346   6.415     N/A	 Terms:50-Runs:5000
   1.961   1.922   3.580     N/A	 Terms:40-Runs:5000
   1.339   1.220   2.450     N/A	 Terms:30-Runs:5000
   0.878   0.875   1.534     N/A	 Terms:20-Runs:5000
   0.442   0.766   0.678     N/A	 Terms:10-Runs:5000

Output (line 201 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
generalisations over Size. Existing NV
     PI_    PITT      DN     TT_
   8.741   9.408   1.745     N/A	 Terms:5000-Runs:50
   5.115   4.808   0.882     N/A	 Terms:3000-Runs:50
   1.380   1.308   0.320     N/A	 Terms:1000-Runs:50
  10.100  51.194   1.842     N/A	 Terms:700-Runs:500
   6.327   5.862   1.429     N/A	 Terms:500-Runs:500
   2.238   2.035   0.516     N/A	 Terms:200-Runs:500
  181.972  18.894   2.419     N/A	 Terms:100-Runs:5000
   6.741  10.643   1.636     N/A	 Terms:70-Runs:5000
   5.160   5.259   1.207     N/A	 Terms:50-Runs:5000
   4.097   3.614   0.951     N/A	 Terms:40-Runs:5000
   2.779   2.736   0.701     N/A	 Terms:30-Runs:5000
   1.782   1.761   0.541     N/A	 Terms:20-Runs:5000
   0.920   1.012   0.287     N/A	 Terms:10-Runs:5000

Output (line 201 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
unifiables over Size. Generalised NV
     PI_    PITT      DN     TT_
   8.962   9.497  147.034     N/A	 Terms:5000-Runs:50
   5.027   4.748  50.928     N/A	 Terms:3000-Runs:50
   1.831   1.820   5.772     N/A	 Terms:1000-Runs:50
   8.976   8.461  32.423     N/A	 Terms:700-Runs:500
   5.412   5.288  19.937     N/A	 Terms:500-Runs:500
   1.924   1.945   4.258     N/A	 Terms:200-Runs:500
  180.798  17.407  22.111     N/A	 Terms:100-Runs:5000
   5.887   9.674  12.981     N/A	 Terms:70-Runs:5000
   4.430   4.614   4.992     N/A	 Terms:50-Runs:5000
   3.489   3.411   3.445     N/A	 Terms:40-Runs:5000
   2.365   2.221   2.338     N/A	 Terms:30-Runs:5000
   1.715   1.516   1.480     N/A	 Terms:20-Runs:5000
   0.791   1.478   0.671     N/A	 Terms:10-Runs:5000

Output (line 209 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Insert over Size
     PI_    PITT      DN     TT_
  90.606  19.770   3.378   0.506	 Terms:5000-Runs:50
  34.624  10.264   1.995   0.275	 Terms:3000-Runs:50
   4.877   1.630   1.000   0.067	 Terms:1000-Runs:50
  26.228  11.281   5.291   0.434	 Terms:700-Runs:500
  40.009   6.711   3.762   0.254	 Terms:500-Runs:500
   3.898   2.255   1.099   0.066	 Terms:200-Runs:500
  201.313  165.229  10.598   0.266	 Terms:100-Runs:5000
   5.993   4.390   5.398   0.170	 Terms:70-Runs:5000
   4.613   3.889   2.595   0.126	 Terms:50-Runs:5000
   3.903   3.001   1.838   0.100	 Terms:40-Runs:5000
  18.898   1.920   1.928   0.071	 Terms:30-Runs:5000
   2.076   1.259   1.665   0.048	 Terms:20-Runs:5000
   0.634   0.640   0.523   0.030	 Terms:10-Runs:5000

Output (line 209 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Delete over Size
     PI_    PITT      DN     TT_
  37.484   6.867   5.686   0.333	 Terms:5000-Runs:50
  15.362   2.701   1.408   0.184	 Terms:3000-Runs:50
   1.838   0.542   0.431   0.043	 Terms:1000-Runs:50
  14.050   3.510   4.886   0.288	 Terms:700-Runs:500
   7.174   2.088   2.107   0.171	 Terms:500-Runs:500
   2.271   0.601   0.785   0.054	 Terms:200-Runs:500
  57.505   2.274   4.023   0.248	 Terms:100-Runs:5000
   4.890   1.129   2.789   0.166	 Terms:70-Runs:5000
   3.899   0.737   1.975   0.134	 Terms:50-Runs:5000
   2.629   0.552   1.534   0.091	 Terms:40-Runs:5000
   3.068   0.317   1.150   0.066	 Terms:30-Runs:5000
   1.126   0.190   0.778   0.047	 Terms:20-Runs:5000
   0.526   0.094   0.379   0.030	 Terms:10-Runs:5000

Output (line 209 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Content over Size
     PI_    PITT      DN     TT_
   0.008   0.018   6.454   0.011	 Terms:5000-Runs:50
   0.003   0.004   1.856   0.006	 Terms:3000-Runs:50
   0.001   0.002   1.054   0.002	 Terms:1000-Runs:50
   0.012   0.026   6.270   0.024	 Terms:700-Runs:500
   0.013   0.012   3.034   0.012	 Terms:500-Runs:500
   0.004   0.005   1.202   0.004	 Terms:200-Runs:500
   0.036   0.055  16.999   0.041	 Terms:100-Runs:5000
   0.028   0.038   7.124   0.033	 Terms:70-Runs:5000
   0.025   0.034   2.903   0.029	 Terms:50-Runs:5000
   0.023   0.035   2.574   0.027	 Terms:40-Runs:5000
   0.023   0.028   4.098   0.024	 Terms:30-Runs:5000
   0.025   0.025   2.314   0.022	 Terms:20-Runs:5000
   0.023   0.021   1.102   0.019	 Terms:10-Runs:5000

Output (line 218 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Variants: Contained, generalised vs noncontained
     PI_    PITT      DN     TT_
  86.681  91.162  17.026   1.542	 Q: variants of existing term
  22.682  72.927  13.808   1.787	 Q: variants of non-ex term

Output (line 218 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
instances: Contained, generalised vs noncontained
     PI_    PITT      DN     TT_
  87.917  143.063  71.917	 Q: instances of existing term
  37.513  92.626  405.672	 Q: instances of generalised term
  21.563  20.602  65.589	 Q: instances of non-ex term

Output (line 218 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
general: Contained, generalised vs noncontained
     PI_    PITT      DN     TT_
  115.887  167.016  13.710	 Q: generalisations of existing term
  76.581  25.936   2.021	 Q: generalisations of non-ex term

Output (line 218 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
unifiab: Contained, generalised vs noncontained
     PI_    PITT      DN     TT_
  160.367  219.238  68.413	 Q: unifiables of existing term
  107.227  109.565  455.927	 Q: unifiables of generalised term
  27.972  25.729  52.229	 Q: unifiables of non-ex term

Output (line 226 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
All Indices sum of all sizes
     PI_    PITT      DN     TT_
   0.225   0.301  56.985   0.254	 Content of net
  437.671  232.241  41.072   2.413	 Insert terms
  151.822  21.602  27.932   1.856	 Delete terms
  86.681  91.162  17.026   1.542	 Q: variants of existing term
  87.917  143.063  71.917     N/A	 Q: instances of existing term
  115.887  167.016  13.710     N/A	 Q: generalisations of existing term
  160.367  219.238  68.413     N/A	 Q: unifiables of existing term
  37.513  92.626  405.672     N/A	 Q: instances of generalised term
  107.227  109.565  455.927     N/A	 Q: unifiables of generalised term
  22.682  72.927  13.808   1.787	 Q: variants of non-ex term
  21.563  20.602  65.589     N/A	 Q: instances of non-ex term
  76.581  25.936   2.021     N/A	 Q: generalisations of non-ex term
  27.972  25.729  52.229     N/A	 Q: unifiables of non-ex term

Output (line 226 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Path Indexing
      NV      LV      MV      HV
  157.577  191.441  86.681  74.860	 Q: variants of existing term
  157.090  99.753  87.917  78.593	 Q: instances of existing term
  237.350  271.369  115.887  103.481	 Q: generalisations of existing term
  350.569  330.858  160.367  96.467	 Q: unifiables of existing term
  96.976  95.172  37.513  28.632	 Q: instances of generalised term
  231.605  283.565  107.227  90.497	 Q: unifiables of generalised term
  24.339  79.009  22.682  16.196	 Q: variants of non-ex term
  80.204  23.211  21.563  17.087	 Q: instances of non-ex term
  142.431  90.024  76.581  22.739	 Q: generalisations of non-ex term
  84.836  31.650  27.972  28.513	 Q: unifiables of non-ex term

Output (line 226 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Discrimination Net
      NV      LV      MV      HV
  86.956  72.646  56.985  55.875	 Content of net
  60.871  65.149  41.072  26.571	 Insert terms
  29.014  25.758  27.932  18.504	 Delete terms
  16.698  15.617  17.026  12.762	 Q: variants of existing term
  16.497  36.820  71.917  112.834	 Q: instances of existing term
  14.476  14.043  13.710  12.036	 Q: generalisations of existing term
  17.394  37.272  68.413  119.477	 Q: unifiables of existing term
  302.853  400.875  405.672  309.895	 Q: instances of generalised term
  308.369  376.152  455.927  327.780	 Q: unifiables of generalised term
  18.765  16.129  13.808  11.727	 Q: variants of non-ex term
  15.324  33.126  65.589  115.627	 Q: instances of non-ex term
   1.586   1.814   2.021   2.225	 Q: generalisations of non-ex term
   1.584  18.079  52.229  107.482	 Q: unifiables of non-ex term

Output (line 226 of "/home/matthias/03_sebastian/bachelorthesis/src/Test.thy"):
Termtable
      NV      LV      MV      HV
   0.264   0.250   0.254   0.246	 Content of net
   2.405   2.440   2.413   2.353	 Insert terms
   1.822   1.815   1.856   1.783	 Delete terms
   1.546   1.525   1.542   1.498	 Q: variants of existing term
     N/A     N/A     N/A     N/A	 Q: instances of existing term
     N/A     N/A     N/A     N/A	 Q: generalisations of existing term
     N/A     N/A     N/A     N/A	 Q: unifiables of existing term
     N/A     N/A     N/A     N/A	 Q: instances of generalised term
     N/A     N/A     N/A     N/A	 Q: unifiables of generalised term
   1.811   1.806   1.787   1.779	 Q: variants of non-ex term
     N/A     N/A     N/A     N/A	 Q: instances of non-ex term
     N/A     N/A     N/A     N/A	 Q: generalisations of non-ex term
     N/A     N/A     N/A     N/A	 Q: unifiables of non-ex term
